<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Just do IT</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://niuzhiqiang90.coding.me/"/>
  <updated>2018-12-14T07:42:31.460Z</updated>
  <id>http://niuzhiqiang90.coding.me/</id>
  
  <author>
    <name>Niu Zhiqiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mongodb主从</title>
    <link href="http://niuzhiqiang90.coding.me/2018/12/11/mongodb%E4%B8%BB%E4%BB%8E/"/>
    <id>http://niuzhiqiang90.coding.me/2018/12/11/mongodb主从/</id>
    <published>2018-12-11T12:44:12.000Z</published>
    <updated>2018-12-14T07:42:31.460Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p>根据需求从<a href="https://www.mongodb.com/download-center/community" target="_blank" rel="noopener">这里</a>下载相应的版本即可。<br>例如下载完后放到<code>~/opt</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/opt</span><br><span class="line">tar -zxvf mongodb-linux-x86_64-ubuntu1604-4.1.6.tgz</span><br><span class="line">mv mongodb-linux-x86_64-ubuntu1604-4.1.6 mongodb-4.1.6</span><br></pre></td></tr></table></figure></p><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-创建配置目录"><a href="#2-1-创建配置目录" class="headerlink" title="2.1 创建配置目录"></a>2.1 创建配置目录</h3><p>在<code>master</code>和<code>slaver</code>上创建配置文件目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/opt/mongodb-4.1.6</span><br><span class="line">mkdir conf</span><br></pre></td></tr></table></figure></p><h3 id="2-2-配置项"><a href="#2-2-配置项" class="headerlink" title="2.2 配置项"></a>2.2 配置项</h3><p>配置文件可以放到<code>~/opt/mongodb-4.1.6/conf</code>里</p><p>master配置文件<code>mongod.conf</code>内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dbpath=/mnt/data/dbs/mongodb/data</span><br><span class="line">logpath=/mnt/data/dbs/mongodb/logs/mongod.log</span><br><span class="line"></span><br><span class="line">logappend=true</span><br><span class="line">port = 27017</span><br><span class="line"></span><br><span class="line"># Listen to local interface only. Comment out to listen on all interfaces. </span><br><span class="line">bind_ip = 10.211.55.6,127.0.0.1</span><br><span class="line"></span><br><span class="line">directoryperdb = true</span><br><span class="line">profile = 1 </span><br><span class="line"></span><br><span class="line">master = true</span><br></pre></td></tr></table></figure></p><p>slaver的配置文件<code>mongod.conf</code>内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dbpath=/mnt/data/dbs/mongodb/data</span><br><span class="line">logpath=/mnt/data/dbs/mongodb/logs/mongod.log</span><br><span class="line"></span><br><span class="line">logappend=true</span><br><span class="line">port = 27017</span><br><span class="line"></span><br><span class="line"># Listen to local interface only. Comment out to listen on all interfaces. </span><br><span class="line">bind_ip = 10.221.55.7,127.0.0.1</span><br><span class="line"> </span><br><span class="line">directoryperdb = true</span><br><span class="line">profile = 1 </span><br><span class="line"> </span><br><span class="line">source = 10.211.55.6:27017</span><br><span class="line">slave = true</span><br></pre></td></tr></table></figure></p><h3 id="2-3-创建数据目录"><a href="#2-3-创建数据目录" class="headerlink" title="2.3 创建数据目录"></a>2.3 创建数据目录</h3><p>在<code>master</code>和<code>slaver</code>上创建数据目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/data/dbs/mongodb/&#123;data,logs&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-启动并测试"><a href="#2-4-启动并测试" class="headerlink" title="2.4 启动并测试"></a>2.4 启动并测试</h3><p>在<code>master</code>和<code>slaver</code>上分别启动<code>mongodb</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/opt/mongodb-4.1.6/</span><br><span class="line">./bin/mongod --config ./config/mongod.conf</span><br></pre></td></tr></table></figure><p>服务启动后，在<code>master</code>执行写入数据命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./bin/mongo </span><br><span class="line">&gt; #写入数据命令</span><br></pre></td></tr></table></figure></p><p>在<code>slaver</code>上进行查询验证写入的数据。</p><h2 id="3-添加用户名密码"><a href="#3-添加用户名密码" class="headerlink" title="3. 添加用户名密码"></a>3. 添加用户名密码</h2><p>上述过程，<code>mongodb</code>主从就已经配置完成，但是这样是不安全的，生产环境通常需要对数据库设置用户名密码。</p><p>在<code>master</code>和<code>slaver</code>的配置文件中，分别添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth = true</span><br></pre></td></tr></table></figure></p><h3 id="3-1-添加root用户"><a href="#3-1-添加root用户" class="headerlink" title="3.1 添加root用户"></a>3.1 添加root用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">./bin/mongo </span><br><span class="line">&gt; use admin</span><br><span class="line">&gt; db.createUser(</span><br><span class="line">&#123; </span><br><span class="line">user: &quot;root&quot;,</span><br><span class="line">pwd: &quot;pwd4root&quot;,</span><br><span class="line">roles: [ &#123; role: &quot;root&quot;, db: &quot;admin&quot; &#125; ]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-为数据库添加用户"><a href="#3-2-为数据库添加用户" class="headerlink" title="3.2 为数据库添加用户"></a>3.2 为数据库添加用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./bin/mongo </span><br><span class="line">&gt; use db_name</span><br><span class="line">&gt; db.createUser(</span><br><span class="line">&#123;</span><br><span class="line">user: &quot;dbowner&quot;,</span><br><span class="line">pwd: &quot;pwd4dbowner&quot;,</span><br><span class="line">roles: [ &#123; role: &quot;dbOwner&quot;, db:&quot;db_name&quot;&#125;]</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3-3-删除错建用户"><a href="#3-3-删除错建用户" class="headerlink" title="3.3 删除错建用户"></a>3.3 删除错建用户</h3><p>获取当前数据库的用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./bin/mongo </span><br><span class="line">&gt; use db_name</span><br><span class="line">&gt; db.auth(&quot;dbowner&quot;,&quot;pwd4dbowner&quot;)</span><br><span class="line">&gt; db.getUsers()</span><br></pre></td></tr></table></figure></p><p>删除不需要的数据库用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./bin/mongo </span><br><span class="line">&gt; use db_name</span><br><span class="line">&gt; db.auth(&quot;dbowner&quot;,&quot;pwd4dbowner&quot;)</span><br><span class="line">&gt; db.dropUser(&quot;drop_username&quot;)</span><br></pre></td></tr></table></figure></p><h3 id="3-3-创建认证keyfile"><a href="#3-3-创建认证keyfile" class="headerlink" title="3.3 创建认证keyfile"></a>3.3 创建认证keyfile</h3><p>在<code>master</code>服务器上生成<code>keyfile</code><br>修改权限为700<br>复制到<code>slaver</code>服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/data/dbs/mongodb/</span><br><span class="line">openssl rand -base64 741 &gt;&gt; keyfile </span><br><span class="line">chmod 700 keyfile</span><br></pre></td></tr></table></figure></p><p>在<code>master</code>和<code>slaver</code>的配置文件中，分别添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyFile = /mnt/data/dbs/mongodb/keyfile</span><br></pre></td></tr></table></figure></p><p>依次重启<code>master</code>和<code>slaver</code>服务器的<code>mongodb</code></p><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h2><p>在<code>master</code>服务器进行数据写入操作<br>在<code>slaver</code>服务器进行验证，新写入的数据同步了，包括数据库的用户认证信息也会同步。<br><strong>注：</strong><br>在<code>slaver</code>登陆<code>mongo</code>并认证通过后，需要执行<code>rs.slaveOk()</code>才可以在从数据库上开启读操作。<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/opt/mongodb-4.1.6</span><br><span class="line">$ ./bin/mongo</span><br><span class="line">&gt; use db_name</span><br><span class="line">&gt; db.auth(&quot;dbowner&quot;,&quot;pwd4dbowner&quot;)</span><br><span class="line">&gt; rs.slaveOk()</span><br><span class="line">&gt; show collections</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h2&gt;&lt;p&gt;根据需求从&lt;a href=&quot;https://www.mongodb.com/download-center/commun
      
    
    </summary>
    
    
      <category term="模拟" scheme="http://niuzhiqiang90.coding.me/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>Redis主从</title>
    <link href="http://niuzhiqiang90.coding.me/2018/10/17/Redis%E4%B8%BB%E4%BB%8E/"/>
    <id>http://niuzhiqiang90.coding.me/2018/10/17/Redis主从/</id>
    <published>2018-10-17T07:58:19.000Z</published>
    <updated>2018-10-17T12:45:36.200Z</updated>
    
    <content type="html"><![CDATA[<p>Redis支持简单且易用的主从复制功能</p><h2 id="1-Redis复制功能的几个重要方面"><a href="#1-Redis复制功能的几个重要方面" class="headerlink" title="1. Redis复制功能的几个重要方面"></a>1. Redis复制功能的几个重要方面</h2><ul><li>Redis使用异步复制。从服务器会以每秒一次的频率向主服务器报告复制流的处理进度。</li><li>一个主服务器可以有多个从服务器。</li><li>从服务器也可以有多个从服务器，多个从服务器之间可以构成一个图状结构。</li><li>复制功能不会阻塞主服务器。即使一个或多个从服务器正在进行初次同步，主服务器也可以继续处理命令请求。</li><li>复制功能也不会阻塞从服务器，只要在配置文件中进行了相应的配置，即使从服务器正在进行初次同步，服务器也可以使用旧版本的数据集来处理命令查询。<br>不过，在服务器删除旧版本数据集并载入新版本数据集的时间间隔内，连接请求会被阻塞。<br>还可以配置从服务器，让它在与主服务器的连接断开时，向客户端发送一个错误。</li><li>复制功能可以单纯地用于数据冗余，也可以通过让多个从服务器处理只读命令来提升扩展性：比如繁重的<code>SORT</code>命令可以交给附属节点去运行。</li><li>可以通过复制功能来让主服务器免于执行持久化操作：只要关闭主服务器的持久化功能，然后由从服务器去执行持久化操作即可。</li></ul><h2 id="2-复制功能的原理"><a href="#2-复制功能的原理" class="headerlink" title="2.复制功能的原理"></a>2.复制功能的原理</h2><ol><li>无论是初次连接还是重新连接，当建立一个从服务器时，从服务器都将向主服务器发送一个<code>SYNC</code>命令。</li><li>接到<code>SYNC</code>命令的主服务器将开始执行<code>BGSAVE</code>，并在保存操作执行期间，将所有新执行的写入命令都保存到一个缓冲区里。</li><li>当<code>BGSAVE</code>执行完毕后，主服务器将执行保存操作所得的<code>.rdb</code>文件发送给从服务器，从服务器接收到<code>.rdb</code>文件后，将文件中的数据载入到内存中。</li><li>之后，主服务器会以Redis命令协议的格式，将写命令缓冲区中积累的所有内容都发送给从服务器。</li></ol><p>即使有多个从服务器同时向主服务器发送<code>SYNC</code>，主服务器也只需要执行一次<code>BGSAVE</code>命令就可以处理所有这些从服务器的同步请求。</p><p>从服务器可以在主从服务器之间的连接断开时进行自动重连<br>在Redis 2.8之前，断线重连的从服务器总要执行一次完整重同步操作。<br>在Redis 2.8之后，从服务器可以根据主服务器的情况来选择执行完整重同步还是部分重同步。</p><h2 id="3-部分重同步"><a href="#3-部分重同步" class="headerlink" title="3. 部分重同步"></a>3. 部分重同步</h2><p>从Redis 2.8开始，在网络连接短暂断开后，主从服务器可以尝试继续执行原有的复制进程，而不一定要执行完整重同步操作。</p><p>这个特性需要主服务器为被发送的复制流创建一个内存缓冲区，并且主服务器和所有从服务器之间都记录一个复制偏移量和一个主服务器ID，当出现网络断开时，从服务器将重新连接，并且向主服务器请求继续执行原来的复制进程。</p><ul><li>如果从服务器记录的主服务器ID和当前要连接的主服务器的ID相同，并且从服务器记录的偏移量所指定的数据仍然保存在主服务器的复制流缓冲区里，那么主服务器会向从服务器发送断线时缺失的那部分数据，然后复制工作可以继续进行。</li><li>否则。从服务器要执行完整重同步操作。</li></ul><p>Redis的部分重同步特性会用到一个新增的<code>PSYNC</code>内部命令，而Redis 2.8之前的旧版本只有<code>SYNC</code>命令，不过只要从服务器是Redis 2.8或者以上的版本，它会根据主服务器的版本来决定到底是使用<code>PSYNC</code>还是<code>SYNC</code></p><ul><li>主服务器 &gt;= 2.8 从服务器使用<code>PSYNC</code>命令来进行同步。 </li><li>主服务器 &lt; 2.8 从服务器使用<code>SYNC</code>命令来进行同步。 </li></ul><h2 id="4-配置"><a href="#4-配置" class="headerlink" title="4. 配置"></a>4. 配置</h2><p>配置一个从服务器非常简单，只要在配置文件中增加以下一行就可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slaveof 192.168.1.100 6379</span><br></pre></td></tr></table></figure></p><p>当然，你需要将代码中的<code>192.168.1.100</code> 和<code>6379</code>替换成你的主服务器的IP和端口号。<br>另外一种方法是调用<code>SLAVEOF</code>命令，输入主服务器的IP和端口号，然后同步就会开始：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SLAVEOF 192.168.1.100 6379</span><br><span class="line">OK</span><br></pre></td></tr></table></figure></p><p>在从服务器上登录Redis客户端查询，可以看到数据已经从主服务器同步过来。</p><h2 id="5-只读从服务器"><a href="#5-只读从服务器" class="headerlink" title="5. 只读从服务器"></a>5. 只读从服务器</h2><p>从Redis 2.6开始，从服务器支持只读模式，并且该模式为从服务器的默认模式。</p><p>只读模式由配置文件中的 <code>slave-read-only</code>选项控制，也可以通过<code>CONFIG SET</code>命令来开启或者关闭这个模式。</p><p>只读从服务器会拒绝执行任何写命令，所以不会出现因为操作失误而将数据不小心写到了从服务器的情况。</p><p>即使从服务器是只读的，<code>DEBUG</code>和<code>CONFIG</code> 等管理命令仍然是可以使用的，所以我们还是不应该将服务器暴露给互联网或者任何不可信的网络。不过，使用配置中的命令改名选项，我们可以通过禁止执行某些命令来提升只读从服务器的安全性。</p><p>既然从服务器上的写数据会被重同步数据覆盖，也可能在服务器重启时丢失，为什么要让一个从服务器变得可写呢？<br>原因是，一些不重要的临时数据，仍然是可以保存在从服务器上的。</p><h2 id="6-从服务器的相关配置"><a href="#6-从服务器的相关配置" class="headerlink" title="6. 从服务器的相关配置"></a>6. 从服务器的相关配置</h2><p>如果主服务器通过<code>requirepass</code>选项设置了密码，那么为了让从服务器的同步操作可以顺利进行，我们也必须为从服务器进行相应的身份验证设置。</p><p>对于一个正在运行的服务器，可以使用客户端输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; config set masterauth &lt;password&gt;</span><br></pre></td></tr></table></figure></p><p>要永久地设置这个密码，那么可以将它加入到配置文件中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masterauth &lt;password&gt;</span><br></pre></td></tr></table></figure></p><h2 id="7-主服务器只在有至少N个从服务器的情况下，才执行写操作"><a href="#7-主服务器只在有至少N个从服务器的情况下，才执行写操作" class="headerlink" title="7. 主服务器只在有至少N个从服务器的情况下，才执行写操作"></a>7. 主服务器只在有至少N个从服务器的情况下，才执行写操作</h2><p>从Redis 2.8开始，为了保证数据的安全性，可以通过配置，让主服务器只在有至少N个当前已连接从服务器的情况下，才执行写命令。<br>不过，因为Redis使用异步复制，所以主服务器发送的写数据并不一定会被从服务器收到，因此，数据丢失的可能性仍然是存在的。</p><p>以下是这个特性的原理：</p><ul><li>从服务器以每秒一次的频率<code>ping</code>主服务器一次，并报告复制流的处理情况。</li><li>主服务器会记录各个从服务器最后一次向它发送<code>ping</code>的时间。</li><li>用户可以通过配置，指定网络延迟的最大值<code>min-slaves-max-lag</code>，以及执行写操作所需的至少从服务器数量<code>min-slaves-to-write</code>.</li></ul><p>如果至少有<code>min-slaves-to-write</code>个服务器，并且这些服务器的延迟都少于<code>min-slaves-max-lag</code>秒，那么主服务器就会执行客户端请求的写操作。<br>尽管不能保证写操作的持久性，但起码丢失数据的窗口会被严格限制的指定的秒数中。<br>另一方面，如果条件达不到<code>min-slaves-to-write</code>和<code>min-slaves-max-lag</code>所指定的条件，那么写操作就不会被执行，主服务器会向请求执行写操作的客户端返回一个错误。<br>以下是这个特性的两个选项和它们所需的参数：</p><ul><li><code>min-slaves-to-write &lt;number of slaves&gt;</code></li><li><code>min-slaves-max-lag &lt;number of second&gt;</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Redis支持简单且易用的主从复制功能&lt;/p&gt;
&lt;h2 id=&quot;1-Redis复制功能的几个重要方面&quot;&gt;&lt;a href=&quot;#1-Redis复制功能的几个重要方面&quot; class=&quot;headerlink&quot; title=&quot;1. Redis复制功能的几个重要方面&quot;&gt;&lt;/a&gt;1. R
      
    
    </summary>
    
    
      <category term="Redis" scheme="http://niuzhiqiang90.coding.me/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis持久化</title>
    <link href="http://niuzhiqiang90.coding.me/2018/10/16/Redis%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <id>http://niuzhiqiang90.coding.me/2018/10/16/Redis持久化/</id>
    <published>2018-10-16T12:46:09.000Z</published>
    <updated>2018-10-18T13:17:35.825Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Redis持久化"><a href="#1-Redis持久化" class="headerlink" title="1. Redis持久化"></a>1. Redis持久化</h2><p>Redis提供了多种不同级别的持久化方式：</p><ul><li>RDB持久化可以在指定的时间间隔内生成数据集的时间点快照。</li><li>AOF持久化记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。<br>AOF文件中的命令全部以Redis协议的格式来保存，新命令会被追加到文件的末尾。<br><strong>Redis还可以在后台对AOF文件进行重写，使得AOF文件的体积不会超出保存数据集状态所需的实际大小。</strong></li><li>Redis还可以同时使用AOF持久化和RDB持久化。在这种情况下，当Redis重启时，它会优先使用AOF文件来还原数据集，因为AOF文件保存的数据集通常比 RDB 文件所保存的数据集更完整。</li><li>你甚至可以关闭持久化功能，让数据只在服务器运行时存在。</li></ul><h2 id="2-RDB的优点"><a href="#2-RDB的优点" class="headerlink" title="2. RDB的优点"></a>2. RDB的优点</h2><ul><li>RDB是一个非常紧凑的文件，它保存了Redis在某个时间点上的数据集。这种文件非常适合用于进行备份:比如说，你可以每小时备份一次RDB文件，这样的话，即使遇上问题，也可以随时将数据集还原到不同的版本。</li><li>RDB非常适用于灾难恢复：它只有一个文件，并且内容都非常紧凑。</li><li>RDB最大化Redis的性能：父进程在保存RDB文件时唯一要做的就是<code>fork</code>出一个子进程，然后这个子进程就会处理接下来的所有保存工作，父进程无须执行任何磁盘I/O操作。</li><li>RDB在恢复大数据集时的速度比AOF的恢复速度快。</li></ul><h2 id="3-RDB的缺点"><a href="#3-RDB的缺点" class="headerlink" title="3. RDB的缺点"></a>3. RDB的缺点</h2><ul><li>RDB不适用于尽量避免在服务器故障时丢失数据。虽然Redis允许你设置不同的保存点来控制保存RDB文件的频率，但是，因为RDB文件需要保存整个数据集的状态，所以它并不是一个轻松的操作。因此你可能会至少5分钟才保存一次RDB文件。在这种情况下，一旦发生故障停机，你就可能丢失好几分钟的数据。</li><li>每次保存RDB文件的时候，Redis都要<code>fork()</code>出一个子进程，并由子进程来进行实际的持久化工作。在数据集比较庞大时，<code>fork()</code>可能会非常耗时，造成服务器在某某毫秒内停止处理客户端；如果数据集非常巨大，并且CPU时间非常紧张的话，那么这种停止时间甚至可能会长达整整一秒。虽然AOF重写也需要进行<code>fork()</code>,但无论AOF重写的执行间隔有多长，数据的耐久性都不会又任何损失。</li></ul><h2 id="4-AOF的优点"><a href="#4-AOF的优点" class="headerlink" title="4. AOF的优点"></a>4. AOF的优点</h2><ul><li>使用AOF持久化会让Redis变得非常耐久<br>你可以设置不同的<code>fsync</code>策略，比如：无<code>fsync</code>、每秒一次<code>fsync</code>或者每次执行写入命令时<code>fsync</code><br><strong>AOF默认策略为每秒钟<code>fsync</code>一次</strong>，在这种配置下，Redis仍然可以保持良好的性能，并且就算发生故障停机，也最多只会丢失一秒钟的数据。（<code>fsync</code>会在后台线程执行，所以主线程可以继续努力地处理命令请求）</li><li>AOF文件是一个只进行追加操作的日志文件，因此对AOF文件的写入不需要进行<code>seek</code>，即使日志因为某些原因而包含了未写入完整的命令（比如写入时磁盘已满，写入中途停机等），<code>redis-check-aof</code>工具也可以轻易的修复这种问题。</li><li>Redis可以在AOF文件体积变得过大时，自动地在后台对AOF进行重写。重写后的新AOF文件包含了恢复当前数据集所需的最小命令集合。整个重写操作是绝对安全的，因为Redis在创建新AOF文件的过程中，会继续将命令追加到现有AOF文件里面，即使重写过程中发生停机，现有的AOF文件也不会丢失。而一旦新AOF文件创建完毕，Redis就会从旧AOF文件切换到新AOF文件，并开始对新AOF文件进行追加操作。</li><li>AOF文件有序地保存了对数据库执行的所有写入操作，这些写入操作以Redis协议的格式保存，因此，AOF文件的内容非常容易被人读懂，对文件进行分析也很轻松。导出AOF文件也非常简单：举个例子，如果你不小心执行了<code>FLUSHALL</code>命令，只要AOF文件没有被重写，那么只要停止服务器，移除AOF文件末尾的<code>FLUSHALL</code>命令，并重启Redis，就可以将数据集恢复到<code>FLUSHALL</code>执行之前的状态。</li></ul><h2 id="5-AOF的缺点"><a href="#5-AOF的缺点" class="headerlink" title="5. AOF的缺点"></a>5. AOF的缺点</h2><ul><li>对于相同的数据集来说，AOF文件的要大于RDB文件。</li><li>根据所使用的<code>fsync</code>策略，AOF的速度可能会慢于RDB。在一般情况下，每秒<code>fsync</code>的性能依然非常高，而关闭<code>fsync</code>可以让AOF的速度和RDB一样快，即使在高负荷之下也是如此。不过在处理巨大的写入载入时，RDB可以提供更有保证的最大延迟时间。</li><li>AOF在过去曾经发生过<strong>因为个别命令的原因，导致AOF文件在重新载入时，无法将数据集恢复成保存时的原样</strong>的bug.(例如：阻塞命令<code>BRPOPLPUSH</code>就曾经引起过这样的bug)测试套件里为这种情况添加了测试：它们会自动生成随机的、复杂的数据集，并通过重新载入这些数据来确保一切正常。虽然这种bug在AOF文件中并不常见，单对比来说，RDB几乎是不可能出现这种bug的。</li></ul><h2 id="6-RDB和AOF的选择"><a href="#6-RDB和AOF的选择" class="headerlink" title="6. RDB和AOF的选择"></a>6. RDB和AOF的选择</h2><ul><li>一般来说。如果想要达到足以媲美PostgreSQL的数据安全性，应该同时使用这两种持久化功能。</li><li>如果非常关心数据，但是仍然可以承受数分钟以内的数据丢失，那么可以只使用RDB持久化。</li><li>不推荐只使用AOF持久化，因为定时生成RDB快照非常便于进行数据库备份，并且RDB恢复数据集的速度也要比AOF恢复的速度要快，除此之外，使用RDB还可以避免之前提到的AOF相关的bug。<br>将来可能将AOF和RDB整合成单个持久化模型。</li></ul><h2 id="7-RDB快照"><a href="#7-RDB快照" class="headerlink" title="7. RDB快照"></a>7. RDB快照</h2><p>默认情况下，Redis将数据库快照保存在名字为<code>dump.rdb</code>的二进制文件中。<br>可以对Redis进行设置，让它满足在<strong>N 秒内数据集至少有M个改动</strong>时自动保存一次数据集。<br>也可以通过调用<code>SAVE</code>或<code>BGSAVE</code>手动让Redis进行数据集保存操作。<br>比如，以下设置会让Redis在满足60秒内有至少1000个键被改动时自动保存一次数据集<br><code>save 60 1000</code><br>这种持久化方式被称为快照。</p><h2 id="8-快照的运作方式"><a href="#8-快照的运作方式" class="headerlink" title="8. 快照的运作方式"></a>8. 快照的运作方式</h2><p>当Redis需要保存<code>dump.rdb</code>文件时，服务器执行以下操作</p><ol><li>Redis调用<code>fork()</code>,同时拥有父进程和子进程。</li><li>子进程将数据集写入到一个临时RDB文件中。</li><li>当子进程完成对新RDB文件的写入时，Redis用新RDB文件替换原来的RDB文件，并删除旧的RDB文件。<br>这种工作方式使得Redis可以从写时复制机制中获益。</li></ol><h2 id="9-只进行追加操作的文件aof"><a href="#9-只进行追加操作的文件aof" class="headerlink" title="9. 只进行追加操作的文件aof"></a>9. 只进行追加操作的文件aof</h2><p>快照功能并不是非常耐久：如果Redis因为某些原因而造成故障停机，那么服务器将丢失最近写入且仍未保存到快照中的哪些数据。<br>尽管对于某些程序来说，数据耐久性并不是最重要的考虑因素，但是对于那些追求完全耐久能力的程序来说，快照功能就不太适用了。<br>打开AOF功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appendonly yes</span><br></pre></td></tr></table></figure></p><p>从现在开始，每当Redis执行一个改变数据集的命令时，这个命令就会被追加到AOF文件的末尾。<br>这样的话，当Redis重新启动时，程序就可以通过重新执行AOF文件中的命令来达到重建数据集的目的。 </p><h2 id="10-AOF重写"><a href="#10-AOF重写" class="headerlink" title="10. AOF重写"></a>10. AOF重写</h2><p>因为AOF的运作方式是不断地将命令追加到文件的末尾，所以随着写入命令的不断增加，AOF文件的体积也会变得越来越大。<br>例如：如果你对一个计数器调用了100次<code>INCR</code>，那么仅仅是为了保存这个计数器的当前值，AOF文件就需要使用100条记录。<br>然而实际上，只需要一条<code>SET</code>命令已经足以保存计数器的当前值了，其余99条记录实际上都是多余的。<br>为了处理这种情况，Redis支持一种有趣的特性：可以在不打断服务客户端的情况下，对AOF文件进行重建。<br>执行<code>BGREWRITEAOF</code>命令，Redis将生成一个新的AOF文件，这个文件包含重建当前数据集所需的最少命令。</p><h2 id="11-AOF有多耐久"><a href="#11-AOF有多耐久" class="headerlink" title="11. AOF有多耐久"></a>11. AOF有多耐久</h2><p>可以配置Redis多久才将数据<code>fsync</code>磁盘一次。<br>有三个选项：</p><ul><li>每次有新命令追加到AOF文件时就执行一次<code>fsync</code>:非常慢，也非常安全。</li><li>每秒<code>fsync</code>一次：足够快（和使用RDB持久化差不多），并且在故障时只会丢失1秒的数据。</li><li>从不<code>fsync</code>:将数据交给操作系统来处理。更快，也更不安全的选择。<br>推荐并且默认的措施是每秒<code>fsync</code>一次，这种<code>fsync</code>策略可以兼顾速度和安全性。</li></ul><h2 id="12-如果AOF文件出错了，怎么办？"><a href="#12-如果AOF文件出错了，怎么办？" class="headerlink" title="12. 如果AOF文件出错了，怎么办？"></a>12. 如果AOF文件出错了，怎么办？</h2><p>服务器可能在程序正在对AOF文件进行写入是停机，如果停机造成了AOF文件出错，那么Redis在重启时会拒绝载入这个AOF文件，从而确保数据的一致性不会被破坏。<br>当发生这种情况时，可以使用以下方法来修复出错的AOF文件：</p><ol><li>为现有的AOF文件创建一个备份</li><li><p>使用Redis附带的<code>Redis-check-aof</code>程序对原来的AOF文件进行修复。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-check-aof --fix</span><br></pre></td></tr></table></figure></li><li><p>[可选] 使用<code>diff -u</code>对比修复后的AOF文件和原始AOF文件的备份。查看两个文件之间的不同之处。</p></li><li>重启Redis服务器，等待服务器载入修复后的AOF文件，并进行数据恢复。</li></ol><h2 id="13-AOF的运作方式"><a href="#13-AOF的运作方式" class="headerlink" title="13. AOF的运作方式"></a>13. AOF的运作方式</h2><p>AOF重写和RDB创建快照一样，都巧妙地利用了写时复制。<br>以下是AOF重写的执行步骤：</p><ol><li>Redis执行<code>fork()</code>，现在同时拥有父进程和子进程。</li><li>子进程开始将新AOF文件的内容写入到临时文件。</li><li>对于所有新执行的写入命令，父进程一边将它们积累到一个内存缓存中，一边将这些改动追加到现有AOF文件的末尾：这样即使在重写的中途发生停机，现有的AOF文件也还是安全的。</li><li>当子进程完成重写工作时，它给父进程发送一个信号，父进程在接收到信号后，将内存缓存中的所有数据追加到新AOF文件的末尾。</li><li>现在Redis原子地用新文件替换旧文件，之后所有命令都会直接追加到新AOF文件的末尾。</li></ol><h2 id="14-怎么从RDB持久化切换到AOF持久化"><a href="#14-怎么从RDB持久化切换到AOF持久化" class="headerlink" title="14. 怎么从RDB持久化切换到AOF持久化"></a>14. 怎么从RDB持久化切换到AOF持久化</h2><p>在Redis2.2或以上版本，可以在不重启的情况下，从RDB切换到AOF：  </p><ol><li>为最新的<code>dump.rdb</code>文件创建一个备份。</li><li>将备份放到一个安全的地方。</li><li><p>执行以下两条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开启AOF功能：Redis会阻塞直到初始AOF文件创建完成为止，之后Redis会继续处理命令请求，并开始将写入命令追加到AOF文件末尾  </span><br><span class="line">redis-cli&gt; CONFIG SET appendonly yes  </span><br><span class="line">关闭RDB功能 这一步是可选的，如果愿意的话也可以同时使用RDB和AOF这两种持久化功能</span><br><span class="line">redis-cli&gt; CONFIG SET save &quot; &quot;</span><br></pre></td></tr></table></figure></li><li><p>确保命令执行之后，数据库的键的数量没有改变。  </p></li><li>确保写命令会被正确地追加到AOF文件的末尾。<br><strong>别忘了在配置文件中打开AOF功能！否则，服务器重启之后，之前通过<code>CONFIG SET</code>设置的配置就会被遗忘，程序会按原来的配置启动服务器</strong><br><strong><font color="red">不可以直接修改配置文件重启服务，这样会从空的aof文件里读取，导致数据集被清空</font></strong></li></ol><h2 id="15-RDB和AOF之间的相互作用"><a href="#15-RDB和AOF之间的相互作用" class="headerlink" title="15. RDB和AOF之间的相互作用"></a>15. RDB和AOF之间的相互作用</h2><p>在版本号大于等于2.4的Redis中，<code>BGSAVE</code>执行的过程中，不可以执行<code>BGREWRITEAOF</code><br>反过来，在<code>BGREWRITEAOF</code>执行的过程中，也不可以执行<code>BGSAVE</code><br>这可以防止两个Redis后台进程同时对磁盘进行大量的I/O操作。<br>如果<code>BGSAVE</code>正在执行，并且用户显式地调用<code>BGREWRITEAOF</code>命令，那么服务器将向用户回复一个OK状态，并告知用户。<br><code>BGREWRITEAOF</code>已经被预订执行：一旦<code>BGSAVE</code>执行完毕，<code>BGREWRITEAOF</code>就会正式开始。<br>当Redis启动时，如果RDB持久化和AOF持久化都被打开了，那么程序会优先使用AOF文件来恢复数据集，因为AOF文件所保存的数据通常是最完整的。</p><h2 id="16-备份Redis数据"><a href="#16-备份Redis数据" class="headerlink" title="16. 备份Redis数据"></a>16. 备份Redis数据</h2><p>一定要备份你的数据库！<br>磁盘故障，节点失效，诸如此类的问题都可能让你的数据消失不见，不进行备份是非常危险的<br>Redis对于数据备份是非常友好的，因为你可以在服务器运行时对RDB文件进行复制：RDB文件一旦被创建，就不会进行任何修改。当服务器要创建一个新的RDB文件时，它先将文件的内容保存在一个临时文件里面，当临时文件写入完毕时，程序才使用rename原子地用临时文件替换原来的RDB文件。<br>也就是说，无论何时，复制RDB文件都是绝对安全的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-Redis持久化&quot;&gt;&lt;a href=&quot;#1-Redis持久化&quot; class=&quot;headerlink&quot; title=&quot;1. Redis持久化&quot;&gt;&lt;/a&gt;1. Redis持久化&lt;/h2&gt;&lt;p&gt;Redis提供了多种不同级别的持久化方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R
      
    
    </summary>
    
    
      <category term="Redis" scheme="http://niuzhiqiang90.coding.me/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>python字符串对齐</title>
    <link href="http://niuzhiqiang90.coding.me/2018/10/13/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E9%BD%90/"/>
    <id>http://niuzhiqiang90.coding.me/2018/10/13/python字符串对齐/</id>
    <published>2018-10-13T03:15:18.000Z</published>
    <updated>2018-10-17T12:45:21.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python字符串对齐"><a href="#python字符串对齐" class="headerlink" title="python字符串对齐"></a>python字符串对齐</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title = &quot;九九乘法口诀表&quot;</span><br></pre></td></tr></table></figure><h2 id="1-使用ljust-rjust-center方法"><a href="#1-使用ljust-rjust-center方法" class="headerlink" title="1. 使用ljust,rjust,center方法"></a>1. 使用<code>ljust</code>,<code>rjust</code>,<code>center</code>方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ljust(s, width, *args)</span><br><span class="line">        ljust(s, width[, fillchar]) -&gt; string</span><br><span class="line">        </span><br><span class="line">        Return a left-justified version of s, in a field of the</span><br><span class="line">        specified width, padded with spaces as needed.  The string is</span><br><span class="line">        never truncated.  If specified the fillchar is used instead of spaces.</span><br><span class="line"></span><br><span class="line">rjust(s, width, *args)</span><br><span class="line">        rjust(s, width[, fillchar]) -&gt; string</span><br><span class="line">        </span><br><span class="line">        Return a right-justified version of s, in a field of the</span><br><span class="line">        specified width, padded with spaces as needed.  The string is</span><br><span class="line">        never truncated.  If specified the fillchar is used instead of spaces.</span><br><span class="line"></span><br><span class="line">center(s, width, *args)</span><br><span class="line">        center(s, width[, fillchar]) -&gt; string</span><br><span class="line">        </span><br><span class="line">        Return a center version of s, in a field of the specified</span><br><span class="line">        width. padded with spaces as needed.  The string is never</span><br><span class="line">        truncated.  If specified the fillchar is used instead of spaces.</span><br></pre></td></tr></table></figure><p>不指定填充字符默认空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 左对齐</span><br><span class="line">print(title.ljust(100))</span><br><span class="line"># 右对齐</span><br><span class="line">print(title.rjust(100))</span><br><span class="line"># 居中 </span><br><span class="line">print(title.center(100))</span><br></pre></td></tr></table></figure></p><p>指定填充字符为星号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(title.ljust(100,&apos;*&apos;))</span><br><span class="line">print(title.rjust(100,&apos;*&apos;))</span><br><span class="line">print(title.center(100,&apos;*&apos;))</span><br></pre></td></tr></table></figure></p><h2 id="2-使用format方法"><a href="#2-使用format方法" class="headerlink" title="2. 使用format方法"></a>2. 使用<code>format</code>方法</h2><p><code>&lt;</code> 左对齐<br><code>&gt;</code> 右对齐<br><code>^</code> 居中对齐<br>不指定填充字符默认空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(format(title,&quot;&lt;100&quot;));</span><br><span class="line">print(format(title,&quot;&gt;100&quot;));</span><br><span class="line">print(format(title,&quot;^100&quot;));</span><br><span class="line"></span><br><span class="line">print(&apos;&#123;:&lt;100&#125;&apos;.format(title))</span><br><span class="line">print(&apos;&#123;:&gt;100&#125;&apos;.format(title))</span><br><span class="line">print(&apos;&#123;:^100&#125;&apos;.format(title))</span><br></pre></td></tr></table></figure></p><p>指定填充字符为星号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(format(title,&quot;*&lt;100&quot;));</span><br><span class="line">print(format(title,&quot;*&gt;100&quot;));</span><br><span class="line">print(format(title,&quot;*^100&quot;));</span><br><span class="line"></span><br><span class="line">print(&apos;&#123;:*&lt;100&#125;&apos;.format(title))</span><br><span class="line">print(&apos;&#123;:&gt;*100&#125;&apos;.format(title))</span><br><span class="line">print(&apos;&#123;:^*100&#125;&apos;.format(title))</span><br></pre></td></tr></table></figure></p><p>精度与类型f<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&apos;&#123;:.2f&#125;&apos;.format(3.1415926))</span><br></pre></td></tr></table></figure></p><p>进制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(&apos;&#123;:b&#125;&apos;.format(13))</span><br><span class="line">print(&apos;&#123;:o&#125;&apos;.format(13))</span><br><span class="line">print(&apos;&#123;:d&#125;&apos;.format(13))</span><br><span class="line">print(&apos;&#123;:x&#125;&apos;.format(13))</span><br></pre></td></tr></table></figure></p><p>用逗号作金额的分隔符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&apos;&#123;:,&#125;&apos;.format(123456789))</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python字符串对齐&quot;&gt;&lt;a href=&quot;#python字符串对齐&quot; class=&quot;headerlink&quot; title=&quot;python字符串对齐&quot;&gt;&lt;/a&gt;python字符串对齐&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
      <category term="python" scheme="http://niuzhiqiang90.coding.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>通过supervisor管理服务</title>
    <link href="http://niuzhiqiang90.coding.me/2018/05/09/%E9%80%9A%E8%BF%87supervisor%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1/"/>
    <id>http://niuzhiqiang90.coding.me/2018/05/09/通过supervisor管理服务/</id>
    <published>2018-05-09T12:54:10.000Z</published>
    <updated>2018-12-12T04:57:59.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p><a href="http://supervisord.org" target="_blank" rel="noopener">supervisor</a>是一个用Python写的进程管理工具，可以很方便的用来启动、重启、关闭进程。不仅可以控制单个进程，还可以同时启动、关闭多个进程。</p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure><h2 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h2><p>配置文件为<code>/etc/supervisord.conf</code></p><h3 id="3-1-生成配置文件"><a href="#3-1-生成配置文件" class="headerlink" title="3.1 生成配置文件"></a>3.1 生成配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf</span><br></pre></td></tr></table></figure><h3 id="3-2-配置项"><a href="#3-2-配置项" class="headerlink" title="3.2 配置项"></a>3.2 配置项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">; supervisor config file                                                                                                                                                                                        </span><br><span class="line"></span><br><span class="line">[unix_http_server]</span><br><span class="line">file=/var/run/supervisor.sock   ; (the path to the socket file)</span><br><span class="line">chmod=0700                       ; sockef file mode (default 0700)</span><br><span class="line"> </span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)</span><br><span class="line">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</span><br><span class="line">childlogdir=/var/log/supervisor            ; (&apos;AUTO&apos; child log dir, default $TEMP)</span><br><span class="line"></span><br><span class="line">minfds=2000000</span><br><span class="line"> </span><br><span class="line">; the below section must remain in the config file for RPC </span><br><span class="line">; (supervisorctl/web interface) to work, additional interfaces may be</span><br><span class="line">; added by defining them in separate rpcinterface: sections</span><br><span class="line">[rpcinterface:supervisor]</span><br><span class="line">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</span><br><span class="line"> </span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket</span><br><span class="line"> </span><br><span class="line">; The [include] section can just contain the &quot;files&quot; setting.  This</span><br><span class="line">; setting can list multiple files (separated by whitespace or</span><br><span class="line">; newlines).  It can also contain wildcards.  The filenames are </span><br><span class="line">; interpreted as relative to this file.  Included files *cannot*</span><br><span class="line">; include files themselves.</span><br><span class="line"> </span><br><span class="line">[include]</span><br><span class="line">files = /etc/supervisor/conf.d/*.conf</span><br></pre></td></tr></table></figure><h3 id="3-3-创建目录"><a href="#3-3-创建目录" class="headerlink" title="3.3 创建目录"></a>3.3 创建目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/log/supervisor</span><br><span class="line">sudo mkdir /etc/supervisor/conf.d</span><br></pre></td></tr></table></figure><h2 id="4-启动"><a href="#4-启动" class="headerlink" title="4. 启动"></a>4. 启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervirsord</span><br></pre></td></tr></table></figure><p>如果有报错，修改刚才创建的目录权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 /var/run/</span><br><span class="line">sudo chmod 777 /var/log/supervisor</span><br></pre></td></tr></table></figure></p><h2 id="5-添加管理项"><a href="#5-添加管理项" class="headerlink" title="5. 添加管理项"></a>5. 添加管理项</h2><p>待服务启动后，就可以添加需要<code>supervisor</code>管理的服务</p><h3 id="5-1-创建服务配置文件"><a href="#5-1-创建服务配置文件" class="headerlink" title="5.1 创建服务配置文件"></a>5.1 创建服务配置文件</h3><p>将需要被管理的配置文件放到<code>/etc/supervisor/conf.d/</code>下<br><strong>需要用到的环境变量通过<code>environment</code>来设置即可，多个环境变量用<code>,</code>分割</strong><br>例如：创建<code>consul.conf</code>文件内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[program:consul]                                                                                                                                                                                                </span><br><span class="line">user=USERNAME</span><br><span class="line">environment=GOMAXPROCS=4</span><br><span class="line">command=/home/USERNAME/opt/consul/bin/consul agent -domain &quot;test.&quot; -config-file /home/USERNAME/opt/consul/conf/consul.json</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">stdout_logfile=/mnt/data/logs/supervisor/consul-out.log</span><br><span class="line">stdout_logfile_maxbytes=1MB</span><br><span class="line">stdout_logfile_backups=10</span><br><span class="line">stdout_capture_maxbytes=1MB</span><br><span class="line">stderr_logfile=/mnt/data/logs/supervisor/consul-err.log</span><br><span class="line">stderr_logfile_maxbytes=1MB</span><br><span class="line">stderr_logfile_backups=10</span><br><span class="line">stderr_capture_maxbytes=1MB</span><br></pre></td></tr></table></figure></p><h3 id="5-2-reload配置文件"><a href="#5-2-reload配置文件" class="headerlink" title="5.2 reload配置文件"></a>5.2 reload配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl reread</span><br></pre></td></tr></table></figure><h3 id="5-3-更新配置文件"><a href="#5-3-更新配置文件" class="headerlink" title="5.3 更新配置文件"></a>5.3 更新配置文件</h3><p>更新配置文件后，服务会自动添加到<code>supervisor</code>列表里，并自动把服务器管理起来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl update consul</span><br></pre></td></tr></table></figure></p><h3 id="5-4-测试"><a href="#5-4-测试" class="headerlink" title="5.4 测试"></a>5.4 测试</h3><p><code>consul</code>启动后，人为<code>kill</code>掉<code>consul</code>，测试<code>supervisord</code>是否会自动将<code>consul</code>重启。</p><h2 id="6-其他相关命令"><a href="#6-其他相关命令" class="headerlink" title="6. 其他相关命令"></a>6. 其他相关命令</h2><h3 id="6-1-重启supervisord"><a href="#6-1-重启supervisord" class="headerlink" title="6.1 重启supervisord"></a>6.1 重启supervisord</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl reload</span><br></pre></td></tr></table></figure><h3 id="6-2-更新配置文件"><a href="#6-2-更新配置文件" class="headerlink" title="6.2 更新配置文件"></a>6.2 更新配置文件</h3><p><code>PROGRAM-NAME</code>为可选参数，不指定为所有。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl reread</span><br><span class="line">sudo supervisorctl update [PROGRAM-NAME]</span><br></pre></td></tr></table></figure></p><h3 id="6-3-管理服务"><a href="#6-3-管理服务" class="headerlink" title="6.3 管理服务"></a>6.3 管理服务</h3><p><code>PROGRAM-NAME</code>为可选参数，不指定为所有。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl start [PROGRAM-NAME]</span><br><span class="line">sudo supervisorctl stop [PROGRAM-NAME]</span><br><span class="line">sudo supervisorctl restart [PROGRAM-NAME]</span><br></pre></td></tr></table></figure></p><h3 id="6-4-查询所有服务状态"><a href="#6-4-查询所有服务状态" class="headerlink" title="6.4 查询所有服务状态"></a>6.4 查询所有服务状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisorctl status</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1. 简介&quot;&gt;&lt;/a&gt;1. 简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://supervisord.org&quot; target=&quot;_blank&quot; rel=&quot;noopen
      
    
    </summary>
    
    
      <category term="supervisor" scheme="http://niuzhiqiang90.coding.me/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title>nginx编译安装lua模块</title>
    <link href="http://niuzhiqiang90.coding.me/2017/09/15/nginx%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85lua%E6%A8%A1%E5%9D%97/"/>
    <id>http://niuzhiqiang90.coding.me/2017/09/15/nginx编译安装lua模块/</id>
    <published>2017-09-15T12:51:59.000Z</published>
    <updated>2018-12-09T01:10:20.192Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-获取nginx源代码"><a href="#1-获取nginx源代码" class="headerlink" title="1. 获取nginx源代码"></a>1. 获取nginx源代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/nginx/nginx.git nginx-release</span><br></pre></td></tr></table></figure><h2 id="2-下载安装LuaJIT"><a href="#2-下载安装LuaJIT" class="headerlink" title="2. 下载安装LuaJIT"></a>2. 下载安装LuaJIT</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/LuaJIT/LuaJIT.git</span><br><span class="line">cd LuaJIT</span><br><span class="line">make </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="3-下载lua-nginx-module"><a href="#3-下载lua-nginx-module" class="headerlink" title="3. 下载lua-nginx-module"></a>3. 下载lua-nginx-module</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.7.tar.gz</span><br><span class="line">tar zxvf v0.10.7.tar.gz</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/openresty/lua-nginx-module.git</span><br></pre></td></tr></table></figure></p><h2 id="4-下载ngx-devel-kit"><a href="#4-下载ngx-devel-kit" class="headerlink" title="4. 下载ngx_devel_kit"></a>4. 下载ngx_devel_kit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/simpl/ngx_devel_kit.git</span><br></pre></td></tr></table></figure></p><h2 id="5-编译安装nginx"><a href="#5-编译安装nginx" class="headerlink" title="5. 编译安装nginx"></a>5. 编译安装nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/opt/nginx-release/</span><br><span class="line">./configure --prefix=/home/USERNAME/opt/nginx-1.9 --with-ld-opt=&quot;-Wl,-rpath,/usr/local/lib&quot; --add-module=/home/USERNAME/opt/nginx-module/lua-nginx-module-0.10.7 --add-module=/home/USERNAME/opt/nginx-module/ngx_devel_kit/ --with-http_stub_status_module --with-http_ssl_module --with-ipv6 --with-http_gzip_static_module --with-http_realip_module --with-http_flv_module --with-pcre-jit</span><br><span class="line"></span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="6-修改nginx配置"><a href="#6-修改nginx配置" class="headerlink" title="6. 修改nginx配置"></a>6. 修改nginx配置</h2><p>在http server区域内添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location /hello_lua &#123;</span><br><span class="line">default_type &apos;text/plain&apos;;</span><br><span class="line">content_by_lua &apos;ngx.say(&quot;hello, lua&quot;)&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重启nginx</p><h2 id="7-测试"><a href="#7-测试" class="headerlink" title="7. 测试"></a>7. 测试</h2><p>浏览器访问<code>IP/hello_lua</code>显示<br>hello,lua  </p><p>nginx的lua模块安装完成。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-获取nginx源代码&quot;&gt;&lt;a href=&quot;#1-获取nginx源代码&quot; class=&quot;headerlink&quot; title=&quot;1. 获取nginx源代码&quot;&gt;&lt;/a&gt;1. 获取nginx源代码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;
      
    
    </summary>
    
    
      <category term="nginx" scheme="http://niuzhiqiang90.coding.me/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>git bisect</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/30/git-bisect/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/30/git-bisect/</id>
    <published>2017-08-30T14:06:12.000Z</published>
    <updated>2017-08-30T14:10:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-bisect"><a href="#git-bisect" class="headerlink" title="git bisect"></a>git bisect</h1><p>在提交了多次代码后，发现代码不能正确运行了，但是很确定的是某一个commit是好使的，比如昨天晚上或者上午的某次提交是可以正确运行的，这个时候可以通过<code>git bisect</code>来通过二分查找出问题的那次提交</p><h2 id="1-开始"><a href="#1-开始" class="headerlink" title="1. 开始"></a>1. 开始</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bisect start</span><br></pre></td></tr></table></figure><h2 id="2-标记当前的HEAD为bad"><a href="#2-标记当前的HEAD为bad" class="headerlink" title="2.标记当前的HEAD为bad"></a>2.标记当前的HEAD为bad</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bisect bad</span><br></pre></td></tr></table></figure><h2 id="3-标记最近一次可以正确运行的commit为good"><a href="#3-标记最近一次可以正确运行的commit为good" class="headerlink" title="3.标记最近一次可以正确运行的commit为good"></a>3.标记最近一次可以正确运行的commit为good</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bisect good &lt;commit-id&gt;</span><br></pre></td></tr></table></figure><h2 id="4-检查中间的那次提交状态是正确还是错误"><a href="#4-检查中间的那次提交状态是正确还是错误" class="headerlink" title="4.检查中间的那次提交状态是正确还是错误"></a>4.检查中间的那次提交状态是正确还是错误</h2><ul><li>如果是正确，标记为good<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bisect good</span><br></pre></td></tr></table></figure></li></ul><p>这时候，git会从这个good到最初标记的bad进行二分查找</p><ul><li>如果是出错的，标记为bad<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bisect bad</span><br></pre></td></tr></table></figure></li></ul><p>这时候，git会从这个bad到最初标记的good位置进行二分查找</p><h2 id="5-重复步骤4"><a href="#5-重复步骤4" class="headerlink" title="5.重复步骤4"></a>5.重复步骤4</h2><p>即可找到最初的bad是在哪次commit不小心引入的。</p><h2 id="6-结束"><a href="#6-结束" class="headerlink" title="6.结束"></a>6.结束</h2><p>查找到引入bug的commit之后，回到最初的HEAD<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git bisect reset</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;git-bisect&quot;&gt;&lt;a href=&quot;#git-bisect&quot; class=&quot;headerlink&quot; title=&quot;git bisect&quot;&gt;&lt;/a&gt;git bisect&lt;/h1&gt;&lt;p&gt;在提交了多次代码后，发现代码不能正确运行了，但是很确定的是某一个commit
      
    
    </summary>
    
    
      <category term="git" scheme="http://niuzhiqiang90.coding.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>开源项目管理系统-zentao</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/18/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-zentao/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/18/开源项目管理系统-zentao/</id>
    <published>2017-08-18T13:38:11.000Z</published>
    <updated>2018-12-08T09:51:16.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-下载zentao的安装包并解压"><a href="#1-下载zentao的安装包并解压" class="headerlink" title="1.下载zentao的安装包并解压"></a>1.下载zentao的安装包并解压</h2><p>禅道的安装方式跟上一篇<code>《mediawiki》</code>安装方式类似。<br>禅道官网在<a href="https://www.zentao.net/" target="_blank" rel="noopener">这里</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv mediawiki-1.27.3.tar.gz /mnt/data/</span><br><span class="line">cd /mnt/data</span><br><span class="line">unzip ZenTaoPMS.8.1.stable.zip</span><br></pre></td></tr></table></figure></p><h2 id="2-进行域名解析"><a href="#2-进行域名解析" class="headerlink" title="2. 进行域名解析"></a>2. 进行域名解析</h2><p>将要使用的域名(例如<code>zentao.xxx.cn</code>)解析到该服务器。</p><h2 id="3-配置nginx"><a href="#3-配置nginx" class="headerlink" title="3. 配置nginx"></a>3. 配置nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    server_name  zentao.xxx.cn;</span><br><span class="line">    return 301 https://zentao.xxx.cn:443$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen       443 ssl;</span><br><span class="line">        server_name  zentao.xxx.cn;</span><br><span class="line"></span><br><span class="line">        ssl_certificate /home/USERNAME/opt/nginx-1.9/conf/etc/zentao-server.crt;</span><br><span class="line">        ssl_certificate_key /home/USERNAME/opt/nginx-1.9/conf/etc/zentao-server.key;</span><br><span class="line"></span><br><span class="line">        root    /mnt/data/zentaopms;</span><br><span class="line">        index index.php index.html index.htm;</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">             root   /mnt/data/zentaopms/www;</span><br><span class="line">             fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">             fastcgi_index index.php;</span><br><span class="line">             fastcgi_param  SCRIPT_FILENAME /scripts$fastcgi_script_name;</span><br><span class="line">             include fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">             root               /mnt/data/zentaopms/www;</span><br><span class="line">             index index.php;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-安装"><a href="#4-安装" class="headerlink" title="4. 安装"></a>4. 安装</h2><p>通过浏览器访问<code>http://zentao.xxx.cn</code>，配置安装<code>zentao</code>即可。<br>确保mysql的账户密码信息正确。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-下载zentao的安装包并解压&quot;&gt;&lt;a href=&quot;#1-下载zentao的安装包并解压&quot; class=&quot;headerlink&quot; title=&quot;1.下载zentao的安装包并解压&quot;&gt;&lt;/a&gt;1.下载zentao的安装包并解压&lt;/h2&gt;&lt;p&gt;禅道的安装方式跟上一
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mediawiki</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/18/mediawiki/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/18/mediawiki/</id>
    <published>2017-08-18T13:08:11.000Z</published>
    <updated>2018-12-08T09:51:01.658Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><p><code>mediawiki</code>依赖<code>LNMP</code>环境，所以在部署前，需要首先搭建<code>LNMP</code>环境，参考上一篇。</p><h2 id="2-下载mediawiki并解压"><a href="#2-下载mediawiki并解压" class="headerlink" title="2. 下载mediawiki并解压"></a>2. 下载mediawiki并解压</h2><p><a href="https://releases.wikimedia.org/mediawiki/1.27/mediawiki-1.27.3.tar.gz" target="_blank" rel="noopener">下载链接</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://releases.wikimedia.org/mediawiki/1.27/mediawiki-1.27.3.tar.gz</span><br><span class="line">mv mediawiki-1.27.3.tar.gz /mnt/data/</span><br><span class="line">cd /mnt/data</span><br><span class="line">tar -zxvf mediawiki-1.27.3.tar.gz</span><br></pre></td></tr></table></figure></p><h2 id="3-进行域名解析"><a href="#3-进行域名解析" class="headerlink" title="3. 进行域名解析"></a>3. 进行域名解析</h2><p>将要使用的域名(例如<code>mediawiki.xxx.cn</code>)解析到该服务器</p><h2 id="4-配置nginx"><a href="#4-配置nginx" class="headerlink" title="4. 配置nginx"></a>4. 配置nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    server_name  mediawiki.xxx.cn;</span><br><span class="line">    return 301 https://mediawiki.xxx.cn:443$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen  443 ssl;</span><br><span class="line">        server_name     mediawiki.xxx.cn;</span><br><span class="line"></span><br><span class="line">        ssl_certificate /home/USERNAME/opt/nginx-1.9/conf/etc/mediawiki-server.crt;</span><br><span class="line">        ssl_certificate_key /home/USERNAME/opt/nginx-1.9/conf/etc/mediawiki-server.key;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        root    /mnt/data/mediawiki-1.27.3;</span><br><span class="line">        #index  index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">             root               /mnt/data/mediawiki-1.27.3;</span><br><span class="line">             fastcgi_pass       127.0.0.1:9000;</span><br><span class="line">             fastcgi_index      index.php;</span><br><span class="line">             fastcgi_param      SCRIPT_FILENAME /scripts$fastcgi_script_name;</span><br><span class="line">             include            fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;            </span><br><span class="line">             root               /mnt/data/mediawiki-1.27.3;</span><br><span class="line">             index index.php;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="5-安装"><a href="#5-安装" class="headerlink" title="5. 安装"></a>5. 安装</h2><p>通过浏览器访问<code>mediawiki.xxx.cn</code>配置安装即可。<br>其中要注意正确设置连接数据库的用户名密码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-准备&quot;&gt;&lt;a href=&quot;#1-准备&quot; class=&quot;headerlink&quot; title=&quot;1. 准备&quot;&gt;&lt;/a&gt;1. 准备&lt;/h2&gt;&lt;p&gt;&lt;code&gt;mediawiki&lt;/code&gt;依赖&lt;code&gt;LNMP&lt;/code&gt;环境，所以在部署前，需要首先搭建&lt;co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql配置项修改</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/17/mysql%E9%85%8D%E7%BD%AE%E9%A1%B9%E4%BF%AE%E6%94%B9/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/17/mysql配置项修改/</id>
    <published>2017-08-17T13:12:03.000Z</published>
    <updated>2018-12-25T06:06:20.163Z</updated>
    
    <content type="html"><![CDATA[<p>大多数情况下我们会想指定<code>mysql</code>的<code>basedir</code>和<code>datadir</code>或者<code>mysql</code>的启动用户。</p><h2 id="1-修改配置文件"><a href="#1-修改配置文件" class="headerlink" title="1. 修改配置文件"></a>1. 修改配置文件</h2><p><code>/etc/my.cnf</code><br>添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir     = /home/USERNAME/opt/mysql-5.5.57 #mysql安装目录</span><br><span class="line">datadir     = /mnt/data/mysqld/data #mysql数据目录</span><br></pre></td></tr></table></figure></p><p>同时也可以修改mysql的启动用户<br><a href="https://dev.mysql.com/doc/refman/5.5/en/changing-mysql-user.html" target="_blank" rel="noopener">Run MySQL as a Normal User</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user         = USERNAME   #修改mysql的用户</span><br><span class="line">bind-address = 127.0.0.1 #修改绑定的ip</span><br></pre></td></tr></table></figure></p><h2 id="2-同步数据文件"><a href="#2-同步数据文件" class="headerlink" title="2. 同步数据文件"></a>2. 同步数据文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/data/mysqld/data</span><br><span class="line">sudo rsync -avz /home/USERNAME/opt/mysql-5.5.57/data/* ./</span><br><span class="line">sudo chown -R USERNAME:USERNAME ../data  #如果没有修改mysql的用户，该步忽略</span><br></pre></td></tr></table></figure><h2 id="3-启动并检测"><a href="#3-启动并检测" class="headerlink" title="3. 启动并检测"></a>3. 启动并检测</h2><p>执行<code>mysql</code>相关命令来启动进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld-svc start</span><br><span class="line">ps -ef | grep mysqld</span><br></pre></td></tr></table></figure></p><h2 id="4-补充"><a href="#4-补充" class="headerlink" title="4. 补充"></a>4. 补充</h2><p>修改mysql的日志文件位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld_safe]</span><br><span class="line">log-error   = /mnt/data/mysqld/logs/mysqld.log</span><br></pre></td></tr></table></figure></p><p>记得创建日志文件目录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大多数情况下我们会想指定&lt;code&gt;mysql&lt;/code&gt;的&lt;code&gt;basedir&lt;/code&gt;和&lt;code&gt;datadir&lt;/code&gt;或者&lt;code&gt;mysql&lt;/code&gt;的启动用户。&lt;/p&gt;
&lt;h2 id=&quot;1-修改配置文件&quot;&gt;&lt;a href=&quot;#1-修改配置
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://niuzhiqiang90.coding.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>LNMP环境部署</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/17/LNMP%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/17/LNMP环境部署/</id>
    <published>2017-08-17T12:36:39.000Z</published>
    <updated>2018-12-08T08:59:58.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-源由"><a href="#0-源由" class="headerlink" title="0. 源由"></a>0. 源由</h2><p>由于公司需要搭建一些项目，例如<code>zentao</code>和<code>mediawiki</code>，依赖<code>LNMP</code>环境。</p><h2 id="1-安装Nginx"><a href="#1-安装Nginx" class="headerlink" title="1. 安装Nginx"></a>1. 安装Nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">sudo aptitude install libssl-dev libpcre3 libpcre3-dev zlib1g-dev  </span><br><span class="line">cd /home/USERNAME/opt</span><br><span class="line"># clone nginx源代码</span><br><span class="line">git clone https://github.com/nginx/nginx.git nginx-releases</span><br><span class="line">cd ./nginx-releases  </span><br><span class="line">git checkout -b release-1.9 release-1.9</span><br><span class="line">./auto/configure --prefix=../nginx-1.9  --with-http_ssl_module</span><br><span class="line">make -j4  </span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="2-安装MySQL"><a href="#2-安装MySQL" class="headerlink" title="2. 安装MySQL"></a>2. 安装MySQL</h2><p><a href="https://cdn.mysql.com//Downloads/MySQL-5.5/mysql-5.5.57-linux-glibc2.12-x86_64.tar.gz" target="_blank" rel="noopener">Download link</a><br><a href="https://dev.mysql.com/doc/refman/5.5/en/binary-installation.html" target="_blank" rel="noopener">Installing MySQL on Unix/Linux Using Generic Binaries</a></p><h3 id="2-1-安装依赖库"><a href="#2-1-安装依赖库" class="headerlink" title="2.1 安装依赖库"></a>2.1 安装依赖库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; apt-get install libaio1 # install library</span><br></pre></td></tr></table></figure><h3 id="2-2-安装mysql"><a href="#2-2-安装mysql" class="headerlink" title="2.2 安装mysql"></a>2.2 安装mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; groupadd mysql</span><br><span class="line">shell&gt; useradd -r -g mysql -s /bin/false mysql</span><br><span class="line">shell&gt; cd /home/USERNAME/opt</span><br><span class="line">shell&gt; tar zxvf mysql-5.5.57-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">shell&gt; mv mysql-5.5.57-linux-glibc2.12-x86_64 mysql-5.5.57</span><br><span class="line">shell&gt; cd mysql-5.5.57</span><br><span class="line">shell&gt; chown -R mysql .</span><br><span class="line">shell&gt; chgrp -R mysql .</span><br><span class="line">shell&gt; scripts/mysql_install_db --user=mysql</span><br><span class="line">shell&gt; chown -R root .</span><br><span class="line">shell&gt; chown -R mysql data</span><br><span class="line"># Next command is optional</span><br><span class="line">shell&gt; cp support-files/my-medium.cnf /etc/my.cnf</span><br><span class="line">shell&gt; bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"># Next command is optional</span><br><span class="line">shell&gt; cp support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure><p>到此mysql已经安装完成。</p><h2 id="3-安装PHP"><a href="#3-安装PHP" class="headerlink" title="3. 安装PHP"></a>3. 安装PHP</h2><p><a href="http://us1.php.net/distributions/php-5.6.31.tar.gz" target="_blank" rel="noopener">PHP 5.6.31下载链接</a></p><h3 id="3-1-解压安装包"><a href="#3-1-解压安装包" class="headerlink" title="3.1 解压安装包"></a>3.1 解压安装包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf php-5.6.31.tar.gz</span><br></pre></td></tr></table></figure><h3 id="3-2-解决依赖"><a href="#3-2-解决依赖" class="headerlink" title="3.2 解决依赖"></a>3.2 解决依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libxml2-dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libpng12-0 libpng12-dev</span><br></pre></td></tr></table></figure><h3 id="3-3-编译"><a href="#3-3-编译" class="headerlink" title="3.3 编译"></a>3.3 编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/php-5.6.31.src</span><br><span class="line">./configure --prefix=/home/USERNAME/opt/php-5.6.31 --with-gd --with-zlib --with-mysql=/home/USERNAME/opt/mysql-5.5.57 --with-config-file-path=/home/USERNAME/opt/php-5.6.31 --enable-mbstring --enable-fpm</span><br></pre></td></tr></table></figure><h3 id="3-4-安装"><a href="#3-4-安装" class="headerlink" title="3.4 安装"></a>3.4 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="3-5-拷贝配置文件到指定位置"><a href="#3-5-拷贝配置文件到指定位置" class="headerlink" title="3.5 拷贝配置文件到指定位置"></a>3.5 拷贝配置文件到指定位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/php-5.6.31</span><br><span class="line">cp -p /home/USERNAME/opt/php-5.6.31/php.ini-development ./php.ini</span><br><span class="line"></span><br><span class="line">cd /home/USERNAME/opt/php-5.6.31/etc/</span><br><span class="line">cp -p php-fpm.conf.default php-fpm.conf</span><br></pre></td></tr></table></figure><h3 id="3-6-修改php-fpm-conf"><a href="#3-6-修改php-fpm-conf" class="headerlink" title="3.6 修改php-fpm.conf"></a>3.6 修改php-fpm.conf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi php-fpm.conf</span><br></pre></td></tr></table></figure><p>修改为如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pid=run/php-fpm.pid</span><br><span class="line">user = USERNAME</span><br><span class="line">group = USERNAME</span><br><span class="line">pm.max_children = 50</span><br><span class="line">pm.start_servers = 20</span><br><span class="line">pm.min_spare_servers = 5</span><br><span class="line">pm.max_spare_servers = 35</span><br></pre></td></tr></table></figure></p><h3 id="3-7-安装pdo模块"><a href="#3-7-安装pdo模块" class="headerlink" title="3.7 安装pdo模块"></a>3.7 安装<code>pdo</code>模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/php-5.6.31.src/ext/pdo</span><br><span class="line">/home/USERNAME/opt/php-5.6.31/bin/phpize</span><br><span class="line">./configure --with-php-config=/home/USERNAME/opt/php-5.6.31/bin/php-config</span><br><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure><h3 id="3-8-安装pdo-mysql模块"><a href="#3-8-安装pdo-mysql模块" class="headerlink" title="3.8 安装pdo_mysql模块"></a>3.8 安装<code>pdo_mysql</code>模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/php-5.6.31.src/ext/pdo_mysql</span><br><span class="line">/home/USERNAME/opt/php-5.6.31/bin/phpize</span><br><span class="line">./configure --with-php-config=/home/USERNAME/opt/php5/bin/php-config --with-pdo-mysql=/home/USERNAME/opt/mysql-5.5.57/</span><br></pre></td></tr></table></figure><h3 id="3-9-安装openssl模块"><a href="#3-9-安装openssl模块" class="headerlink" title="3.9 安装openssl模块"></a>3.9 安装<code>openssl</code>模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/php-5.6.31.src/ext/openssl</span><br><span class="line">cp -p config0.m4 config.m4</span><br><span class="line">/home/USERNAME/opt/php-5.6.31/bin/phpize</span><br><span class="line">ln -s /usr/lib/x86_64-linux-gnu/libssl.so  /usr/lib</span><br><span class="line">./configure --with-openssl --with-php-config=/home/USERNAME/opt/php-5.6.31/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><code>--with-php-config</code>指定配置<br><code>--with-pdo-MySQL</code>指定mysql数据库的安装目录</p><p>安装完成会出现如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installing shared extensions:/home/USERNAME/opt/php-5.6.31/lib/php/extensions/no-debug-non-zts-20131226/</span><br></pre></td></tr></table></figure></p><p>编辑php.ini文件，将出现的内容添加到配置文件里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">extension=/home/USERNAME/opt/php-5.6.31/lib/php/extensions/no-debug-non-zts-20131226/pdo_mysql.so</span><br><span class="line">extension=/home/USERNAME/opt/php-5.6.31/lib/php/extensions/no-debug-non-zts-20131226/openssl.so</span><br></pre></td></tr></table></figure></p><h3 id="3-10-启动fpm"><a href="#3-10-启动fpm" class="headerlink" title="3.10 启动fpm"></a>3.10 启动fpm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/php-5.6.31/sbin</span><br><span class="line">sudo php-fpm</span><br></pre></td></tr></table></figure><h2 id="4-编辑测试文件并测试"><a href="#4-编辑测试文件并测试" class="headerlink" title="4. 编辑测试文件并测试"></a>4. 编辑测试文件并测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/USERNAME/opt/nginx-1.9/html/</span><br><span class="line">echo &quot;&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>修改nginx配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen  80;</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">             root   /home/USERNAME/opt/nginx-1.9/html;</span><br><span class="line">             fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">             fastcgi_index index.php;</span><br><span class="line">             fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">             include fastcgi.conf;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过curl访问<code>localhost/index.php</code>即可查看到当前环境的php信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0-源由&quot;&gt;&lt;a href=&quot;#0-源由&quot; class=&quot;headerlink&quot; title=&quot;0. 源由&quot;&gt;&lt;/a&gt;0. 源由&lt;/h2&gt;&lt;p&gt;由于公司需要搭建一些项目，例如&lt;code&gt;zentao&lt;/code&gt;和&lt;code&gt;mediawiki&lt;/code&gt;，依赖
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/10/Jenkins/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/10/Jenkins/</id>
    <published>2017-08-10T13:47:34.000Z</published>
    <updated>2018-12-09T05:37:47.949Z</updated>
    
    <content type="html"><![CDATA[<p>Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目。</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-配置Java环境"><a href="#1-1-配置Java环境" class="headerlink" title="1.1 配置Java环境"></a>1.1 配置Java环境</h3><ul><li><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">下载jdk</a></li><li>解压</li><li>配置环境变量<code>PATH</code></li></ul><h3 id="1-2-下载Jenkins"><a href="#1-2-下载Jenkins" class="headerlink" title="1.2 下载Jenkins"></a>1.2 下载Jenkins</h3><p><a href="https://jenkins.io/download/" target="_blank" rel="noopener">下载地址</a></p><h3 id="1-2-配置安装Jenkins"><a href="#1-2-配置安装Jenkins" class="headerlink" title="1.2 配置安装Jenkins"></a>1.2 配置安装Jenkins</h3><ul><li><code>Jenkins</code>默认将数据存放到<code>～/.jenkins</code>，在环境变量配置文件中添加<code>export JENKINS_HOME=/mnt/data/jenkins/</code>即可修改。</li><li>在终端中执行<code>java -jar jenkins.war [--httpPort|--httpsPort=PortNumber]</code>,默认端口为8080。</li><li>浏览器访问<a href="http://localhost:8080根据提示配置即可。" target="_blank" rel="noopener">http://localhost:8080根据提示配置即可。</a></li></ul><h2 id="2-配置发布"><a href="#2-配置发布" class="headerlink" title="2. 配置发布"></a>2. 配置发布</h2><p>jenkins可以将<code>build</code>之后的状态反馈回到gitlab上，以便于开发人员及时知道自己的提交的代码的状态。</p><h3 id="2-1-添加一个新的credential"><a href="#2-1-添加一个新的credential" class="headerlink" title="2.1 添加一个新的credential"></a>2.1 添加一个新的credential</h3><p><code>Jenkins</code> &gt;&gt; <code>Credentials</code> &gt;&gt; <code>System</code> &gt;&gt; <code>Global credentials(unrestricted)</code> &gt;&gt; <code>Add Credentials</code><br>如下图所示：<br><img src="1.add_new_credentials.png" alt=""><br>设置完成后，可以看到<code>credentials</code>列表  </p><p><img src="2.global_credentials_list.png" alt=""></p><h3 id="2-2-在gitlab中生成API-Token"><a href="#2-2-在gitlab中生成API-Token" class="headerlink" title="2.2 在gitlab中生成API Token"></a>2.2 在gitlab中生成API Token</h3><p>设置了私钥，Jenkins就可以通过ssh连接git的host,我们还需要为Jenkins设置gitlab的<code>API Access Token</code><br>点击用户头像-&gt; <code>setting</code> -&gt; <code>Profile</code> -&gt; <code>Access Tokens</code> </p><p><img src="3.gitlab_add_api_token.png" alt=""></p><h3 id="2-3-在Jenkins中添加刚才生成的API-Token"><a href="#2-3-在Jenkins中添加刚才生成的API-Token" class="headerlink" title="2.3 在Jenkins中添加刚才生成的API Token"></a>2.3 在Jenkins中添加刚才生成的API Token</h3><p><img src="4.jenkins_add_api_token.png" alt=""></p><h3 id="2-4-配置Jenkins和gitlab之间的连接"><a href="#2-4-配置Jenkins和gitlab之间的连接" class="headerlink" title="2.4 配置Jenkins和gitlab之间的连接"></a>2.4 配置Jenkins和gitlab之间的连接</h3><p>在Jenkins中<code>Manage Jenkins</code> -&gt; <code>Configure System</code>设置  </p><p><img src="5.jenkins_conn_gitlab.png" alt=""><br>配置完成，点击<code>Test Connection</code>测试下，出现如图所示的Success表示成功。</p><h3 id="2-5-新建一个FreeStyle的Job"><a href="#2-5-新建一个FreeStyle的Job" class="headerlink" title="2.5 新建一个FreeStyle的Job"></a>2.5 新建一个FreeStyle的Job</h3><p><img src="6.source_code_manage.png" alt="">  </p><p>Refspec的值填写如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+refs/heads/*:refs/remotes/origin/* +refs/merge-requests/*/head:refs/remotes/origin/merge-requests/*</span><br></pre></td></tr></table></figure></p><p>Branch to build可以填写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">origin/$&#123;gitlabSourceBranch&#125;</span><br></pre></td></tr></table></figure></p><p>也可以填写具体的某一个分支。</p><h3 id="2-6-设置build触发器"><a href="#2-6-设置build触发器" class="headerlink" title="2.6 设置build触发器"></a>2.6 设置build触发器</h3><p>设置某一种build触发方式<br><img src="7.build_trigger.png" alt=""><br>红色框起来的内容就是要在gitlab配置webhook时填写的链接。</p><h3 id="2-7-添加build完成之后的动作"><a href="#2-7-添加build完成之后的动作" class="headerlink" title="2.7 添加build完成之后的动作"></a>2.7 添加build完成之后的动作</h3><p>需要gitlab 8.1以上的版本<br><img src="8.add_post-build_action.png" alt=""></p><h3 id="2-8-在gitlab上添加webhook"><a href="#2-8-在gitlab上添加webhook" class="headerlink" title="2.8 在gitlab上添加webhook"></a>2.8 在gitlab上添加webhook</h3><p><img src="9.add_web_hook.png" alt=""></p><h3 id="2-9-提交代码之后-可以查看代码的状态"><a href="#2-9-提交代码之后-可以查看代码的状态" class="headerlink" title="2.9 提交代码之后 可以查看代码的状态"></a>2.9 提交代码之后 可以查看代码的状态</h3><p><img src="10.see_the_commit_status_in_gitlab.png" alt=""></p><h3 id="2-10-配置Jenkins"><a href="#2-10-配置Jenkins" class="headerlink" title="2.10 配置Jenkins"></a>2.10 配置Jenkins</h3><p>通过Gitlab Authentication/Authorization策略</p><h3 id="2-10-1-在Gitlab里配置OAuth-Provider"><a href="#2-10-1-在Gitlab里配置OAuth-Provider" class="headerlink" title="2.10.1 在Gitlab里配置OAuth Provider"></a>2.10.1 在Gitlab里配置OAuth Provider</h3><p><a href="https://docs.gitlab.com/ce/integration/oauth_provider.html" target="_blank" rel="noopener">oauth provider</a></p><ul><li>Name 随便写</li><li>Redirect URI 填写<code>https://jenkins.xxx.cn/securityRealm/finishLogin</code><br>点击<code>Submit</code>会生成<code>Application Id</code>和<code>Secret</code></li></ul><h3 id="2-10-2-在Jenkins里配置Authentication-Strategy为Gitlab"><a href="#2-10-2-在Jenkins里配置Authentication-Strategy为Gitlab" class="headerlink" title="2.10.2 在Jenkins里配置Authentication Strategy为Gitlab"></a>2.10.2 在Jenkins里配置Authentication Strategy为Gitlab</h3><p>在<code>Jenkins</code> &gt; <code>configureSecurity</code> &gt; <code>Security Realm</code>选择<code>Gitlab Authentication Plugin</code></p><ul><li>GitLab Web URI 填写 <a href="https://gitlab.xxx.cn" target="_blank" rel="noopener">https://gitlab.xxx.cn</a></li><li>GitLab API URI 填写 <a href="https://gitlab.xxx.cn" target="_blank" rel="noopener">https://gitlab.xxx.cn</a></li><li>Client ID 填写上一步生成的<code>Application Id</code></li><li>Client Secret 填写上一步生成的<code>Secret</code></li></ul><h3 id="2-10-3-开启ssl"><a href="#2-10-3-开启ssl" class="headerlink" title="2.10.3 开启ssl"></a>2.10.3 开启ssl</h3><p>Jenkins所在<code>java jetty server</code>需要开启SSL否则生成的<code>redirect_url</code>为<code>http</code>协议，并非<code>https</code>, 这样会导致OAuth失败，因为是无效的redirect url</p><h3 id="2-10-4-导入自签名证书"><a href="#2-10-4-导入自签名证书" class="headerlink" title="2.10.4 导入自签名证书"></a>2.10.4 导入自签名证书</h3><p>因为使用的是自签名证书，Jenkins所使用的JVM需要将自签名证书导入到<code>certication trust store</code>中, 注意，证书的生成需要将<code>subject</code>与<code>hostname</code>关联起来，否则仍旧无法通过<code>ssl handshake</code></p><ul><li>生成自签名证书参考《启用ssl》</li><li>导入到证书<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/opt/jdk-1.8.0 </span><br><span class="line">./bin/keytool --importcert -file /home/USERNAME/opt/nginx-1.9/conf/etc/xxx.crt -alias &apos;USERNAME-self-signed-crt&apos;  -keystore /home/USERNAME/opt/jdk-1.8.0/jre/lib/security/cacert</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-日志"><a href="#3-日志" class="headerlink" title="3.日志"></a>3.日志</h2><p>Jenkins的日志在<code>/var/log/USERNAME/jenkins.log</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目。&lt;/p&gt;
&lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>启用ssl</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/09/%E5%90%AF%E7%94%A8ssl/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/09/启用ssl/</id>
    <published>2017-08-09T12:33:10.000Z</published>
    <updated>2018-12-09T05:33:45.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-nginx启用ssl"><a href="#1-nginx启用ssl" class="headerlink" title="1. nginx启用ssl"></a>1. nginx启用ssl</h2><p>网站启用ssl需要nginx ssl模块的支持</p><h3 id="1-1-查看nginx是否编译了ssl模块"><a href="#1-1-查看nginx是否编译了ssl模块" class="headerlink" title="1.1 查看nginx是否编译了ssl模块"></a>1.1 查看nginx是否编译了ssl模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><h3 id="1-2-编译ssl模块"><a href="#1-2-编译ssl模块" class="headerlink" title="1.2 编译ssl模块"></a>1.2 编译ssl模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nginx/src/dir</span><br><span class="line">./configure --with-http_ssl_module</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="2-启用ssl"><a href="#2-启用ssl" class="headerlink" title="2. 启用ssl"></a>2. 启用ssl</h2><h3 id="2-1-生成证书"><a href="#2-1-生成证书" class="headerlink" title="2.1 生成证书"></a>2.1 生成证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo openssl genrsa -des3 -out server.key 2048</span><br><span class="line">sudo openssl req -new -key server.key -out server.csr</span><br><span class="line">sudo cp server.key server.key.org</span><br><span class="line">sudo openssl rsa -in server.key.org -out server.key</span><br><span class="line">sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</span><br></pre></td></tr></table></figure><h3 id="2-2-在server区域，指定证书位置"><a href="#2-2-在server区域，指定证书位置" class="headerlink" title="2.2 在server区域，指定证书位置"></a>2.2 在server区域，指定证书位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /path/server.crt;</span><br><span class="line">ssl_certificate_key /path/server.key;</span><br></pre></td></tr></table></figure><h3 id="2-3-启用ssl"><a href="#2-3-启用ssl" class="headerlink" title="2.3 启用ssl"></a>2.3 启用ssl</h3><p>修改nginx配置，启用ssl<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen       443 ssl; </span><br><span class="line">server_name  ssl.test.cn;</span><br></pre></td></tr></table></figure></p><h3 id="2-4-将http的访问redirect到https"><a href="#2-4-将http的访问redirect到https" class="headerlink" title="2.4 将http的访问redirect到https"></a>2.4 将http的访问redirect到https</h3><p>在http区域添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  ssl.test.cn;;</span><br><span class="line">       return 301 https://ssl.test.cn:443$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-生效配置"><a href="#3-生效配置" class="headerlink" title="3. 生效配置"></a>3. 生效配置</h2><p>重启或者<code>reload</code> nginx</p><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h2><p>浏览器访问<a href="http://ssl.test.cn，测试验证。" target="_blank" rel="noopener">http://ssl.test.cn，测试验证。</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-nginx启用ssl&quot;&gt;&lt;a href=&quot;#1-nginx启用ssl&quot; class=&quot;headerlink&quot; title=&quot;1. nginx启用ssl&quot;&gt;&lt;/a&gt;1. nginx启用ssl&lt;/h2&gt;&lt;p&gt;网站启用ssl需要nginx ssl模块的支持&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="nginx" scheme="http://niuzhiqiang90.coding.me/tags/nginx/"/>
    
      <category term="ssl" scheme="http://niuzhiqiang90.coding.me/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>Android自动打包</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/07/Android%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/07/Android自动打包/</id>
    <published>2017-08-07T12:19:01.000Z</published>
    <updated>2018-12-08T07:44:26.089Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-配置Java环境"><a href="#1-配置Java环境" class="headerlink" title="1. 配置Java环境"></a>1. 配置Java环境</h2><h3 id="1-1-自行从网络下载jdk并配置环境变量"><a href="#1-1-自行从网络下载jdk并配置环境变量" class="headerlink" title="1.1 自行从网络下载jdk并配置环境变量"></a>1.1 自行从网络下载jdk并配置环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:~$ vi .bashrc</span><br><span class="line"># set oracle jdk environment</span><br><span class="line">export JAVA_HOME=/home/USERNAME/opt/jdk-1.8.0</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br></pre></td></tr></table></figure><h3 id="1-2-生效配置"><a href="#1-2-生效配置" class="headerlink" title="1.2 生效配置"></a>1.2 生效配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:~$ source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="1-3-验证"><a href="#1-3-验证" class="headerlink" title="1.3 验证"></a>1.3 验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:~$ java -version</span><br><span class="line">java version &quot;1.8.0_181&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_181-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)</span><br></pre></td></tr></table></figure><h2 id="2-配置命令行工具"><a href="#2-配置命令行工具" class="headerlink" title="2. 配置命令行工具"></a>2. 配置命令行工具</h2><p>你可以使用命令行工具里的sdkmanager下载其他的SDK包。</p><h3 id="2-1-下载"><a href="#2-1-下载" class="headerlink" title="2.1 下载"></a>2.1 下载</h3><p>默认tools已经包含在Android Studio里了，如果你没有使用Android Studio，请访问<a href="https://developer.android.com/studio/index.html" target="_blank" rel="noopener">studio</a>下载相应的命令行工具包。<br><a href="https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip" target="_blank" rel="noopener">linux版</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:~$ mkdir opt/android/</span><br><span class="line">:~$ cd opt/android</span><br><span class="line">:~/opt/android$ wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip</span><br></pre></td></tr></table></figure><h3 id="2-2-解压"><a href="#2-2-解压" class="headerlink" title="2.2 解压"></a>2.2 解压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:~/opt/android$ unzip sdk-tools-linux-3859397.zip</span><br><span class="line">:~/opt/android$ cd tools/bin/</span><br><span class="line">:~/opt/android/tools/bin$</span><br></pre></td></tr></table></figure><h3 id="2-3-安装SDK"><a href="#2-3-安装SDK" class="headerlink" title="2.3 安装SDK"></a>2.3 安装SDK</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:~/opt/android/tools/bin$ mkdir /home/USERNAME/opt/android/sdk</span><br><span class="line">:~/opt/android/tools/bin$ ./sdkmanager --sdk_root=/home/USERNAME/opt/android/sdk &quot;build-tools;23.0.2&quot;</span><br><span class="line">:~/opt/android/tools/bin$ ./sdkmanager --sdk_root=/home/USERNAME/opt/android/sdk &quot;platforms;android-23&quot;</span><br></pre></td></tr></table></figure><p>命令成功执行后<br>会在<code>/home/USERNAME/opt/android/sdk</code>目录下，生成<code>build-tools</code>目录<br>会在<code>/home/USERNAME/opt/android/sdk</code>目录下，生成<code>platforms</code>目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:~/opt/android/tools/bin$ ls /home/USERNAME/opt/android/sdk/build-tools</span><br><span class="line">23.0.2</span><br><span class="line">:~/opt/android/tools/bin$ ls /home/USERNAME/opt/android/sdk/platforms</span><br><span class="line">android-23</span><br></pre></td></tr></table></figure><h3 id="2-4-添加环境变量"><a href="#2-4-添加环境变量" class="headerlink" title="2.4 添加环境变量"></a>2.4 添加环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:~/opt/android/tools/bin$ vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># set android SDK environment</span><br><span class="line">export ANDROID_HOME=/home/USERNAME/opt/android</span><br><span class="line">export PATH=$PATH:$ANDROID_HOME/tools</span><br></pre></td></tr></table></figure></p><h2 id="3-安装gradle"><a href="#3-安装gradle" class="headerlink" title="3. 安装gradle"></a>3. 安装gradle</h2><h3 id="3-1-下载gradle"><a href="#3-1-下载gradle" class="headerlink" title="3.1 下载gradle"></a>3.1 下载gradle</h3><p><a href="http://services.gradle.org/distributions/" target="_blank" rel="noopener">distributions链接</a><br><a href="http://downloads.gradle.org/distributions/gradle-3.3-all.zip" target="_blank" rel="noopener">gradle-3.3-all链接</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:~$ cd opt</span><br><span class="line">:~/opt$ wget http://downloads.gradle.org/distributions/gradle-3.3-all.zip</span><br></pre></td></tr></table></figure><h3 id="3-2-解压gradle"><a href="#3-2-解压gradle" class="headerlink" title="3.2 解压gradle"></a>3.2 解压gradle</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/opt$ unzip gradle-3.3-all.zip</span><br></pre></td></tr></table></figure><h3 id="3-3-配置环境变量"><a href="#3-3-配置环境变量" class="headerlink" title="3.3 配置环境变量"></a>3.3 配置环境变量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/opt$ vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># set gradle environment</span><br><span class="line">export GRADLE_HOME=/home/USERNAME/opt/gradle-3.3</span><br><span class="line">export PATH=$GRADLE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p><h3 id="3-4-生效配置"><a href="#3-4-生效配置" class="headerlink" title="3.4 生效配置"></a>3.4 生效配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/opt$ source ~/.bashrc</span><br></pre></td></tr></table></figure><h2 id="4-打包应用"><a href="#4-打包应用" class="headerlink" title="4. 打包应用"></a>4. 打包应用</h2><p>进入android项目所在目录，执行<code>gradle assembleRelease</code>即可自动打包应用。<br>gradle在打包的过程中会自动下载所需要的依赖(默认会下载到<code>~/.gradle</code>目录)，速度可能比较慢，尤其是第一次执行，耐心等待即可。</p><p>另外，在执行过程中可能会报如下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">FAILURE: Build failed with an exception.</span><br><span class="line"></span><br><span class="line">* What went wrong:</span><br><span class="line">A problem occurred configuring project &apos;:app&apos;.</span><br><span class="line">&gt; Could not resolve all dependencies for configuration &apos;:app:_debugApk&apos;.</span><br><span class="line">   &gt; A problem occurred configuring project &apos;:weexplugin&apos;.</span><br><span class="line">      &gt; Could not resolve all dependencies for configuration &apos;:weexplugin:_debugCompileCopy&apos;.</span><br><span class="line">         &gt; Could not find com.android.support:support-v4:23.1.1.</span><br><span class="line">           Required by:</span><br><span class="line">               project :weexplugin</span><br><span class="line">               project :weexplugin &gt; com.android.support:appcompat-v7:23.1.1</span><br><span class="line"></span><br><span class="line">* Try:</span><br><span class="line">Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.</span><br><span class="line"></span><br><span class="line">BUILD FAILED</span><br></pre></td></tr></table></figure></p><p>执行如下命令接受证书，即可解决<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:~/opt/android/tools/bin$ ./sdkmanager --licenses</span><br></pre></td></tr></table></figure></p><h2 id="5-加固app"><a href="#5-加固app" class="headerlink" title="5. 加固app"></a>5. 加固app</h2><p>使用各个android软件平台的加固工具或者脚本上传到对应的平台进行加固即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:~/opt$ cd /home/USERNAME/platforms/xxx.mobile.web/platforms/android</span><br><span class="line">:android$ bash jiagu.sh</span><br><span class="line">:android$ cd /home/USERNAME/opt/android/apk</span><br><span class="line">:~/opt/android/apk$ ls</span><br><span class="line">app-release_101_jiagu_sign.apk</span><br></pre></td></tr></table></figure></p><p>加固完成，即可进行发布上架。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-配置Java环境&quot;&gt;&lt;a href=&quot;#1-配置Java环境&quot; class=&quot;headerlink&quot; title=&quot;1. 配置Java环境&quot;&gt;&lt;/a&gt;1. 配置Java环境&lt;/h2&gt;&lt;h3 id=&quot;1-1-自行从网络下载jdk并配置环境变量&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="android" scheme="http://niuzhiqiang90.coding.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>安装配置gitlab</title>
    <link href="http://niuzhiqiang90.coding.me/2017/08/02/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab/"/>
    <id>http://niuzhiqiang90.coding.me/2017/08/02/安装配置gitlab/</id>
    <published>2017-08-02T13:51:17.000Z</published>
    <updated>2018-12-09T02:27:37.781Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-安装依赖"><a href="#1-1-安装依赖" class="headerlink" title="1.1 安装依赖"></a>1.1 安装依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl openssh-server ca-certificates postfix -y</span><br></pre></td></tr></table></figure><h3 id="1-2-下载安装包"><a href="#1-2-下载安装包" class="headerlink" title="1.2 下载安装包"></a>1.2 下载安装包</h3><p><a href="https://packages.gitlab.com/gitlab/gitlab-ce" target="_blank" rel="noopener">安装包下载地址</a></p><h3 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i gitlab-ce_***.deb</span><br></pre></td></tr></table></figure><p>至此，gitlab已经安装成功了。</p><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-修改配置文件"><a href="#2-1-修改配置文件" class="headerlink" title="2.1 修改配置文件"></a>2.1 修改配置文件</h3><p>配置文件为<code>/etc/gitlab/gitlab.rb</code><br>根据自己的需要修改该文件并保存。</p><h3 id="2-2-生效配置"><a href="#2-2-生效配置" class="headerlink" title="2.2 生效配置"></a>2.2 生效配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure><h3 id="2-3-测试"><a href="#2-3-测试" class="headerlink" title="2.3 测试"></a>2.3 测试</h3><p>通过浏览器访问刚才配置的地址进行测试。<br>至此，通过gitlab自带的nginx已经可以访问gitlab了。</p><hr><p>如果我们服务器上已有<code>nginx</code>，那么我们想要让所有访问都通过已有的<code>nginx</code>作为总的出入口。  </p><h2 id="3-使用已有的nginx"><a href="#3-使用已有的nginx" class="headerlink" title="3. 使用已有的nginx"></a>3. 使用已有的nginx</h2><p><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#setting-the-nginx-listen-port" target="_blank" rel="noopener">setting-the-nginx-listen-port</a></p><h3 id="3-1-修改gitlab配置"><a href="#3-1-修改gitlab配置" class="headerlink" title="3.1 修改gitlab配置"></a>3.1 修改gitlab配置</h3><p>修改如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">external_url &apos;https://gitlab.xxx.cn&apos; # 将http修改为https</span><br><span class="line">nginx[&apos;listen_addresses&apos;] = [&apos;127.0.0.1&apos;] #这里修改为127.0.0.1</span><br><span class="line">nginx[&apos;listen_port&apos;] = 28080 </span><br><span class="line"></span><br><span class="line">nginx[&apos;listen_https&apos;] = false</span><br><span class="line">nginx[&apos;proxy_set_headers&apos;] = &#123; </span><br><span class="line">  &quot;X-Forwarded-Proto&quot; =&gt; &quot;https&quot;,</span><br><span class="line">  &quot;X-Forwarded-Ssl&quot; =&gt; &quot;on&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生效配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></p><h3 id="3-2-配置已有的nginx"><a href="#3-2-配置已有的nginx" class="headerlink" title="3.2 配置已有的nginx"></a>3.2 配置已有的nginx</h3><h4 id="3-2-1-添加配置文件"><a href="#3-2-1-添加配置文件" class="headerlink" title="3.2.1 添加配置文件"></a>3.2.1 添加配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/nginx-1.9/conf</span><br><span class="line">vi nginx.conf</span><br></pre></td></tr></table></figure><p>内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">    default upgrade;</span><br><span class="line">    &apos;&apos;      close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream gitlab.hosts &#123;</span><br><span class="line">    server 127.0.0.1:28080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen  80;</span><br><span class="line">    server_name  gitlab.xxx.cn;</span><br><span class="line">    return 301 https://gitlab.xxx.cn:443$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        #listen 80;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        server_name gitlab.xxx.cn;</span><br><span class="line">        ssl_certificate /home/USERNAME/opt/nginx-1.9/conf/etc/server.crt;</span><br><span class="line">        ssl_certificate_key /home/USERNAME/opt/nginx-1.9/conf/etc/server.key;</span><br><span class="line"></span><br><span class="line">        proxy_read_timeout      3600;</span><br><span class="line">        proxy_connect_timeout   300;</span><br><span class="line">        proxy_redirect          off;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line"></span><br><span class="line">        proxy_set_header Host $http_host_with_default;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection $connection_upgrade;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">        proxy_set_header X-Forwarded-Ssl on;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_redirect off;</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_pass http://gitlab.hosts;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h4 id="3-2-2-启动nginx"><a href="#3-2-2-启动nginx" class="headerlink" title="3.2.2 启动nginx"></a>3.2.2 启动nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd opt/nginx-1.9/</span><br><span class="line">sudo sbin/nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="3-3-访问测试"><a href="#3-3-访问测试" class="headerlink" title="3.3 访问测试"></a>3.3 访问测试</h3><p>通过浏览器访问<code>gitlab.xxx.cn</code>，就可以访问使用了。<br>以上我们已经完成了<code>gitlab</code>的部署，并且配置了使用已有的<code>nginx</code>作为总的出入口。</p><hr><p>如果我们之前已经有了<code>gitlab</code>，我们可能想要把之前的数据迁移进新的<code>gitlab</code>。  </p><h2 id="4-迁移数据"><a href="#4-迁移数据" class="headerlink" title="4. 迁移数据"></a>4. 迁移数据</h2><h3 id="4-1-备份"><a href="#4-1-备份" class="headerlink" title="4.1 备份"></a>4.1 备份</h3><p>在原有gitlab服务器上执行如下命令，备份gitlab<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 以下两条命令可以防止在备份的过程中有人提交代码，不能将整个gitlab停止，因为备份数据需要用到某些服务</span><br><span class="line">sudo gitlab-ctl stop unicorn</span><br><span class="line">sudo gitlab-ctl stop sidekiq</span><br><span class="line"># 验证</span><br><span class="line">sudo gitlab-ctl status</span><br><span class="line"># 通过自带命令备份数据</span><br><span class="line">sudo gitlab-rake gitlab:backup:create</span><br><span class="line"># 备份之后将整个gitlab服务停止</span><br><span class="line">sudo gitlab-ctl stop</span><br><span class="line"># 将备份文件从gitlab/backups目录拷贝出来</span><br><span class="line">cd /mnt/data/gitlab</span><br><span class="line">sudo -s</span><br><span class="line">cd backups</span><br><span class="line">mv 1501564513_2017_08_01_gitlab_backup.tar /mnt/data</span><br><span class="line">cd /mnt/data</span><br><span class="line"></span><br><span class="line"># 修改用户属主属组</span><br><span class="line">sudo chown USERNAME:USERNAME 1501564513_2017_08_01_gitlab_backup.tar</span><br></pre></td></tr></table></figure></p><h3 id="4-2-导入"><a href="#4-2-导入" class="headerlink" title="4.2 导入"></a>4.2 导入</h3><h4 id="4-2-1-拷贝文件并修改权限"><a href="#4-2-1-拷贝文件并修改权限" class="headerlink" title="4.2.1 拷贝文件并修改权限"></a>4.2.1 拷贝文件并修改权限</h4><p>将上一步备份的数据放到新的服务器的<code>gitlab/backups</code>目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改文件的属主属组</span><br><span class="line">sudo chown git:git 1501564513_2017_08_01_gitlab_backup.tar</span><br><span class="line">修改gitlab目录的属主属组</span><br><span class="line">sudo chown git:git /mnt/data/gitlab</span><br></pre></td></tr></table></figure></p><h4 id="4-2-2-导入数据"><a href="#4-2-2-导入数据" class="headerlink" title="4.2.2 导入数据"></a>4.2.2 导入数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 停掉如下两个服务</span><br><span class="line">sudo gitlab-ctl stop unicorn</span><br><span class="line">sudo gitlab-ctl stop sidekiq</span><br><span class="line"># 验证</span><br><span class="line">sudo gitlab-ctl status</span><br><span class="line"># 导入数据</span><br><span class="line">sudo gitlab-rake gitlab:backup:restore BACKUP=11501564513_2017_08_01</span><br></pre></td></tr></table></figure><h3 id="4-3-启动gitlab"><a href="#4-3-启动gitlab" class="headerlink" title="4.3 启动gitlab"></a>4.3 启动gitlab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ctl start</span><br></pre></td></tr></table></figure><h3 id="4-4-测试"><a href="#4-4-测试" class="headerlink" title="4.4 测试"></a>4.4 测试</h3><p>之前的数据已经导入到新的<code>gitlab</code>服务器。<br>现在可以通过原有的账号信息进行登陆验证。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h2&gt;&lt;h3 id=&quot;1-1-安装依赖&quot;&gt;&lt;a href=&quot;#1-1-安装依赖&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="gitlab" scheme="http://niuzhiqiang90.coding.me/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu发送邮件</title>
    <link href="http://niuzhiqiang90.coding.me/2017/05/16/ubuntu%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>http://niuzhiqiang90.coding.me/2017/05/16/ubuntu发送邮件/</id>
    <published>2017-05-16T13:23:23.000Z</published>
    <updated>2018-12-10T08:32:56.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install msmtp</span><br><span class="line">sudo apt-get install mutt</span><br></pre></td></tr></table></figure><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-配置mutt"><a href="#2-1-配置mutt" class="headerlink" title="2.1 配置mutt"></a>2.1 配置mutt</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.muttrc</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/Muttrc</span><br></pre></td></tr></table></figure></p><p>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">set sendmail=&quot;/usr/bin/msmtp&quot;</span><br><span class="line">set use_from=yes</span><br><span class="line">set realname=&quot;username&quot;</span><br><span class="line">set from=username@xxx.cn</span><br><span class="line">set envelope_from=yes</span><br><span class="line"></span><br><span class="line">set folder=&quot;/var/mail&quot;    # Contains all the mailboxes</span><br><span class="line">set record=&quot;+username&quot;</span><br></pre></td></tr></table></figure></p><p>确认文件权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll /etc/Muttrc</span><br><span class="line">-rw-r--r-- 1 root root 125 May 16 11:13 /etc/Muttrc</span><br></pre></td></tr></table></figure></p><h3 id="2-2-配置msmtp"><a href="#2-2-配置msmtp" class="headerlink" title="2.2 配置msmtp"></a>2.2 配置msmtp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.msmtprc</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/msmtprc</span><br></pre></td></tr></table></figure></p><p>添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">account default</span><br><span class="line">host    smtp.ym.163.com  # 邮件服务器地址</span><br><span class="line">user    username@xxx.cn</span><br><span class="line">from    username@xxx.cn </span><br><span class="line">password    ***********</span><br><span class="line">auth    plain</span><br><span class="line">tls     off</span><br><span class="line">logfile /var/log/username/msmtp.log  # 日志位置 或 logfile ~/.msmtp.log</span><br></pre></td></tr></table></figure></p><h3 id="2-3-设置msmtp配置文件权限"><a href="#2-3-设置msmtp配置文件权限" class="headerlink" title="2.3 设置msmtp配置文件权限"></a>2.3 设置msmtp配置文件权限</h3><p>由于密码是明文，所以修改文件的权限，只允许自己可以访问该文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 ~/.msmtprc</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown username:username /etc/msmtprc</span><br><span class="line">chmod 600 /etc/msmtprc</span><br></pre></td></tr></table></figure></p><p>确认文件权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll /etc/msmtprc </span><br><span class="line">-rw------- 1 username username 190 May 16 11:09 /etc/msmtprc</span><br></pre></td></tr></table></figure></p><h3 id="2-4-创建日志文件"><a href="#2-4-创建日志文件" class="headerlink" title="2.4 创建日志文件"></a>2.4 创建日志文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.msmtp.log</span><br></pre></td></tr></table></figure><h2 id="3-验证"><a href="#3-验证" class="headerlink" title="3. 验证"></a>3. 验证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">msmtp --host=smtp.ym.163.com --serverinfo</span><br><span class="line"></span><br><span class="line">SMTP server at smtp.ym.163.com ([223.252.213.139]), port 25:</span><br><span class="line">    mr213139.mail.yeah.net ESMTP HMail (1.0)</span><br><span class="line">Capabilities:</span><br><span class="line">    SIZE 71680000:</span><br><span class="line">        Maximum message size is 71680000 bytes = 68.36 MiB</span><br><span class="line">    PIPELINING:</span><br><span class="line">        Support for command grouping for faster transmission</span><br><span class="line">    ETRN:</span><br><span class="line">        Support for RMQS (Remote Message Queue Starting)</span><br><span class="line">    STARTTLS:</span><br><span class="line">        Support for TLS encryption via the STARTTLS command</span><br><span class="line">    AUTH:</span><br><span class="line">        Supported authentication methods:</span><br><span class="line">        PLAIN LOGIN </span><br><span class="line">This server might advertise more or other capabilities when TLS is active.</span><br></pre></td></tr></table></figure><h2 id="4-使用"><a href="#4-使用" class="headerlink" title="4. 使用"></a>4. 使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hello world&quot; | mutt -s &quot;title&quot; 目标邮箱</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutt -s &quot;测试&quot; username@xxx.cn &lt; gotty</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>更换linux系统的home磁盘</title>
    <link href="http://niuzhiqiang90.coding.me/2017/04/01/%E6%9B%B4%E6%8D%A2linux%E7%B3%BB%E7%BB%9F%E7%9A%84home%E7%A3%81%E7%9B%98/"/>
    <id>http://niuzhiqiang90.coding.me/2017/04/01/更换linux系统的home磁盘/</id>
    <published>2017-04-01T12:50:55.000Z</published>
    <updated>2018-12-08T08:31:12.262Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-源由"><a href="#1-源由" class="headerlink" title="1. 源由"></a>1. 源由</h2><p>由于大量项目放到<code>/home</code>里且初期规划不合理导致磁盘空间严重不足，故需要择机对该磁盘进行更换，重新挂载到一块容量比较大的磁盘上，以满足日益增长的业务需求。</p><h2 id="2-添加磁盘并挂载"><a href="#2-添加磁盘并挂载" class="headerlink" title="2. 添加磁盘并挂载"></a>2. 添加磁盘并挂载</h2><p>添加完磁盘，首先需要对磁盘进行分区格式化  </p><p><strong>部分常用<code>fdisk</code>命令如下</strong>  </p><table><thead><tr><th style="text-align:left">command</th><th style="text-align:left">action</th></tr></thead><tbody><tr><td style="text-align:left">l</td><td style="text-align:left">list known partition types</td></tr><tr><td style="text-align:left">n</td><td style="text-align:left">add a new partition</td></tr><tr><td style="text-align:left">p</td><td style="text-align:left">print the partition</td></tr><tr><td style="text-align:left">d</td><td style="text-align:left">delete a partition</td></tr><tr><td style="text-align:left">q</td><td style="text-align:left">quit without saving changes</td></tr><tr><td style="text-align:left">w</td><td style="text-align:left">write table to disk and exit</td></tr></tbody></table><h3 id="2-1-分区"><a href="#2-1-分区" class="headerlink" title="2.1 分区"></a>2.1 分区</h3><p><font color="red">分区时，要注意先通过<code>fdisk -l</code>命令，确定接下来要进行操作的设备文件名。<br>之下的步骤，每一步都要格外仔细，一不小心就会造成数据丢失！</font><br>例如：我确认我新添的磁盘为<code>/dev/vdbc</code>，那进行分区的命令如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fdisk /dev/xvdc</span><br></pre></td></tr></table></figure></p><h3 id="2-2-格式化"><a href="#2-2-格式化" class="headerlink" title="2.2 格式化"></a>2.2 格式化</h3><p>通过<code>-t</code>指定磁盘要格式化成的类型，这里我要格式化成<code>ext4</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs -t ext4 /dev/xvdc1</span><br></pre></td></tr></table></figure></p><h3 id="2-3-创建临时挂载目录"><a href="#2-3-创建临时挂载目录" class="headerlink" title="2.3 创建临时挂载目录"></a>2.3 创建临时挂载目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /mnt/tmp-home</span><br></pre></td></tr></table></figure><h3 id="2-4-挂载磁盘"><a href="#2-4-挂载磁盘" class="headerlink" title="2.4 挂载磁盘"></a>2.4 挂载磁盘</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/xvdc1 /mnt/tmp-home</span><br></pre></td></tr></table></figure><p>至此，新添的磁盘已经进行了分区，格式化，挂载操作。<br>接下来进行数据迁移，把之前的数据迁移到新磁盘上。</p><h2 id="3-同步数据"><a href="#3-同步数据" class="headerlink" title="3. 同步数据"></a>3. 同步数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avzrt --delete-after /home/USERNAME /mnt/tmp-home/</span><br></pre></td></tr></table></figure><h2 id="4-重命名之前的home目录"><a href="#4-重命名之前的home目录" class="headerlink" title="4. 重命名之前的home目录"></a>4. 重命名之前的home目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /home/USERNAME /home/USERNAME-orig</span><br></pre></td></tr></table></figure><h2 id="5-对比数据"><a href="#5-对比数据" class="headerlink" title="5. 对比数据"></a>5. 对比数据</h2><p>对比原来的<code>home</code>目录和新<code>home</code>目录的数据。<br>例如：通过<code>du</code>命令来对比大小。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">du -sh /home/USERNAME-orig</span><br><span class="line">du -sh /mnt/tmp-home</span><br></pre></td></tr></table></figure></p><h2 id="6-备份源数据"><a href="#6-备份源数据" class="headerlink" title="6. 备份源数据"></a>6. 备份源数据</h2><p>数据迁移完成后，可以将<code>USERNAME-orig</code>迁移到<code>/</code>下进行备份。</p><h2 id="7-自动挂载"><a href="#7-自动挂载" class="headerlink" title="7. 自动挂载"></a>7. 自动挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/fstab</span><br><span class="line"># 写入如下内容</span><br><span class="line">/dev/xvdc1    /home    ext4      defaults    0  0</span><br></pre></td></tr></table></figure><h2 id="8-重启服务器"><a href="#8-重启服务器" class="headerlink" title="8. 重启服务器"></a>8. 重启服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure><h2 id="9-验证"><a href="#9-验证" class="headerlink" title="9. 验证"></a>9. 验证</h2><p>待服务器重启后，验证各个服务是否能够正常启动，尤其时<code>/home/USERNAME</code>下的项目能否正常运行。</p><h2 id="10-清除备份文件"><a href="#10-清除备份文件" class="headerlink" title="10. 清除备份文件"></a>10. 清除备份文件</h2><p>验证各个服务和项目，在迁移到新的<code>/home</code>运行正常且稳定一段时间后，可以择机对原备份文件进行清理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-源由&quot;&gt;&lt;a href=&quot;#1-源由&quot; class=&quot;headerlink&quot; title=&quot;1. 源由&quot;&gt;&lt;/a&gt;1. 源由&lt;/h2&gt;&lt;p&gt;由于大量项目放到&lt;code&gt;/home&lt;/code&gt;里且初期规划不合理导致磁盘空间严重不足，故需要择机对该磁盘进行更换，
      
    
    </summary>
    
    
      <category term="linux" scheme="http://niuzhiqiang90.coding.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux系统监控基本命令</title>
    <link href="http://niuzhiqiang90.coding.me/2017/03/25/linux%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>http://niuzhiqiang90.coding.me/2017/03/25/linux系统监控基本命令/</id>
    <published>2017-03-25T09:09:57.000Z</published>
    <updated>2017-03-27T13:25:05.932Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-nmon软件"><a href="#1-nmon软件" class="headerlink" title="1. nmon软件"></a>1. nmon软件</h2><h3 id="1-1-运行nmon软件"><a href="#1-1-运行nmon软件" class="headerlink" title="1.1 运行nmon软件"></a>1.1 运行nmon软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:~$ nmon</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌nmon─14g──────[H for help]───Hostname=localhost────Refresh= 2secs ───16:48.29────────────────────────┐</span><br><span class="line">------------------------------       For help type H or ...                                           │</span><br><span class="line">│  #    #  #    #   ####   #    #        nmon -?  - hint                                              │</span><br><span class="line">│  ##   #  ##  ##  #    #  ##   #        nmon -h  - full                                              │</span><br><span class="line">│  # #  #  # ## #  #    #  # #  #                                                                     │</span><br><span class="line">│  #  # #  #    #  #    #  #  # #       To start the same way every time                              │</span><br><span class="line">│  #   ##  #    #  #    #  #   ##        set the NMON ksh variable                                    │</span><br><span class="line">│  #    #  #    #   ####   #    #                                                                     │</span><br><span class="line">│  ------------------------------                                                                     │</span><br><span class="line">│                                                                                                     │</span><br><span class="line">│  Use these keys to toggle statistics on/off:                                                        │</span><br><span class="line">│     c = CPU        l = CPU Long-term   - = Faster screen updates                                    │</span><br><span class="line">│     m = Memory     j = Filesystems     + = Slower screen updates                                    │</span><br><span class="line">│     d = Disks      n = Network         V = Virtual Memory                                           │</span><br><span class="line">│     r = Resource   N = NFS             v = Verbose hints                                            │</span><br><span class="line">│     k = kernel     t = Top-processes   . = only busy disks/procs                                    │</span><br><span class="line">│     h = more options                 q = Quit                                                       │</span><br><span class="line">│─────────────────────────────────────────────────────────────────────────────────────────────────────│</span><br></pre></td></tr></table></figure><h3 id="1-2-显示CPU信息"><a href="#1-2-显示CPU信息" class="headerlink" title="1.2 显示CPU信息"></a>1.2 显示CPU信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">│ CPU Utilisation ──────────────────────────────────────────────────────────────</span><br><span class="line">│---------------------------+-------------------------------------------------+</span><br><span class="line">│CPU  User%  Sys% Wait% Idle|0          |25         |50          |75       100|</span><br><span class="line">│  1  15.2   1.5   0.0  83.2|UUUUUUU           &gt;                              |</span><br><span class="line">│  2   7.1   2.6   0.0  90.3|UUUs             &gt;                               |</span><br><span class="line">│  3  17.5   1.0   0.5  81.0|UUUUUUUU        &gt;                                |</span><br><span class="line">│  4  13.6   3.0   0.0  83.3|UUUUUUs            &gt;                             |</span><br><span class="line">│---------------------------+-------------------------------------------------+</span><br><span class="line">│Avg  13.4   2.1   0.3  84.3|UUUUUUs        &gt;                                 |</span><br><span class="line">│---------------------------+-------------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="1-3-显示内存信息"><a href="#1-3-显示内存信息" class="headerlink" title="1.3 显示内存信息"></a>1.3 显示内存信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">│ Memory Stats ──────────────────────────────────────────────────────────────────</span><br><span class="line">                RAM     High      Low     Swap    Page Size=4 KB</span><br><span class="line">│ Total MB      7843.5     -0.0     -0.0   3916.0</span><br><span class="line">│ Free  MB      1259.8     -0.0     -0.0   3915.6</span><br><span class="line">│ Free Percent    16.1%   100.0%   100.0%   100.0%</span><br><span class="line">│             MB                  MB                  MB</span><br><span class="line">│                      Cached=  2912.7     Active=  3842.7</span><br><span class="line">│ Buffers=   929.4 Swapcached=     0.0  Inactive =  1789.8</span><br><span class="line">│ Dirty  =     0.1 Writeback =     0.0  Mapped   =   946.5</span><br><span class="line">│ Slab   =   799.7 Commit_AS =  6624.9 PageTables=    40.2</span><br></pre></td></tr></table></figure><h3 id="1-4-显示磁盘信息"><a href="#1-4-显示磁盘信息" class="headerlink" title="1.4 显示磁盘信息"></a>1.4 显示磁盘信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> Disk I/O ──/proc/diskstats────mostly in KB/s─────Warning:contains duplicates────</span><br><span class="line">│DiskName Busy  Read WriteKB|0          |25         |50          |75       100|</span><br><span class="line">│sda        5%    0.0   42.0|WW&gt;                                              |</span><br><span class="line">│sda1       0%    0.0    0.0|&gt;                                                |</span><br><span class="line">│sda2       0%    0.0    0.0|&gt;                                                |</span><br><span class="line">│sda5       5%    0.0   42.0|WW&gt;                                              |</span><br><span class="line">│sda6       0%    0.0    0.0|&gt;                                                |</span><br><span class="line">│Totals Read-MB/s=0.0      Writes-MB/s=0.1      Transfers/sec=12.0</span><br></pre></td></tr></table></figure><h3 id="1-5-显示网络信息"><a href="#1-5-显示网络信息" class="headerlink" title="1.5 显示网络信息"></a>1.5 显示网络信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> Network I/O ────────────────────────────────────────────────────────────────────</span><br><span class="line">│I/F Name Recv=KB/s Trans=KB/s packin packout insize outsize Peak-&gt;Recv Trans </span><br><span class="line">│      lo     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </span><br><span class="line">│   wlan0     0.1     0.0       0.5      0.0   215.0    0.0        0.1     0.0 </span><br><span class="line">│ docker0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </span><br><span class="line">│    eth0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0</span><br><span class="line">│ Network Error Counters ─────────────────────────────────────────────────────────</span><br><span class="line">│I/F Name iErrors iDrop iOverrun iFrame oErrors   oDrop oOverrun oCarrier oColls</span><br><span class="line">│      lo       0       0       0       0       0       0       0       0       0</span><br><span class="line">│   wlan0       0       0       0       0       0       0       0       0       0</span><br><span class="line">│ docker0       0       0       0       0       0       0       0       0       0</span><br><span class="line">│    eth0       0       0       0       0       0       0       0       0       0</span><br></pre></td></tr></table></figure><h3 id="1-6-显示内核信息"><a href="#1-6-显示内核信息" class="headerlink" title="1.6 显示内核信息"></a>1.6 显示内核信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Kernel Stats ────────────────────────────────────────────────────────────────────</span><br><span class="line">│ RunQueue              3   Load Average    CPU use since boot time</span><br><span class="line">│ ContextSwitch    2735.0    1 mins  0.54    Uptime Days=  0 Hours= 7 Mins=58</span><br><span class="line">│ Forks               0.5    5 mins  0.86    Idle   Days=  1 Hours= 1 Mins=36</span><br><span class="line">│ Interrupts        836.9   15 mins  0.92    Average CPU use=-221.51%</span><br></pre></td></tr></table></figure><h2 id="2-ethstatus"><a href="#2-ethstatus" class="headerlink" title="2. ethstatus"></a>2. ethstatus</h2><p><code>ethstatus</code>可以实时监控网卡的带宽占用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">───────────────────.EthStatus v0.4a.──────────────────────────────[0/910]──────────────────────│</span><br><span class="line">│                                                                                              │</span><br><span class="line">│                                                                                              │</span><br><span class="line">│                      ######                                                                  │</span><br><span class="line">│                                                                                              │</span><br><span class="line">│         ###                                                                                  │</span><br><span class="line">│        ON/OFF                      RX  TX                                                    │</span><br><span class="line">│                            0.00 B/s   0 Packets/s                                            │</span><br><span class="line">│                                                                                              │</span><br><span class="line">│                                                                                              │</span><br><span class="line">│     IP Address:          192.168.1.116                                                       │</span><br><span class="line">│     Interface name:      wlan0         Graphic Using Speed:    9.77 MB/s                     │</span><br><span class="line">│     Top Speed:           732.00 B/s    Top Packets/s:          5                             │</span><br><span class="line">│     Received Packets:    593428        Transmited Packets:     437965                        │</span><br><span class="line">│     Received:            399.68 MB     Transmitted:            54.73 MB                      │</span><br><span class="line">│     Errors on Receiving: 0             Errors on Transmission: 0                             │</span><br><span class="line">│                                                                                              │</span><br><span class="line">│                                                                                              │</span><br></pre></td></tr></table></figure><h2 id="3-iftop监控网卡实时流量"><a href="#3-iftop监控网卡实时流量" class="headerlink" title="3. iftop监控网卡实时流量"></a>3. iftop监控网卡实时流量</h2><p>常用参数列表</p><table><thead><tr><th>参数</th><th>含义</th><th>例子</th></tr></thead><tbody><tr><td>-i</td><td>指定需要监测的网卡</td><td>sudo iftop -i wlan0</td></tr><tr><td>-n</td><td>将输出的主机信息都通过ip显示，不进行DNS方向解析</td><td>sudo iftop -n -i wlan0</td></tr><tr><td>-B</td><td>将输出以byte为单位显示网卡流量，默认是bit</td><td>sudo iftop -B -i wlan0</td></tr><tr><td>-p</td><td>以混杂模式运行iftop,此时iftop可以作为网络嗅探器</td><td>sudo iftop -p -i wlan0</td></tr><tr><td>-N</td><td>只显示链接端口号，不显示对应的服务名称</td><td>sudo iftop -N -i wlan0</td></tr><tr><td>-P</td><td>显示主机及端口信息</td><td>sudo iftop -P -i wlan0</td></tr><tr><td>-F</td><td>显示特定网段的网卡进出流量</td><td>sudo iftop -F 192.168.1.10/24</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">                    12.5kb              25.0kb               37.5kb              50.0kb         [0/37]</span><br><span class="line">+-------------------+-------------------+--------------------+-------------------+--------------------</span><br><span class="line">192.168.1.116                         =&gt; 101.227.160.102                       17.6kb  3.55kb  1.90kb </span><br><span class="line">                                      &lt;=                                       7.29kb  1.50kb   807b</span><br><span class="line">224.0.0.251                           =&gt; 192.168.1.165                            0b      0b      0b  </span><br><span class="line">                                      &lt;=                                       1.72kb  2.21kb   566b</span><br><span class="line">192.168.1.116                         =&gt; 140.206.160.161                       4.89kb  0.98kb  1.21kb</span><br><span class="line">                                      &lt;=                                       1.18kb   242b    302b</span><br><span class="line">192.168.1.116                         =&gt; 192.168.1.1                              0b    112b     96b  </span><br><span class="line">                                      &lt;=                                          0b    378b    254b</span><br><span class="line">239.255.255.250                       =&gt; 192.168.1.148                            0b      0b      0b</span><br><span class="line">                                      &lt;=                                       1.19kb   486b    730b</span><br><span class="line">224.0.0.251                           =&gt; 192.168.1.166                            0b      0b      0b</span><br><span class="line">                                      &lt;=                                        272b     54b     14b</span><br><span class="line">192.168.1.165                         =&gt; all-routers.mcast.net                    0b     26b      6b</span><br><span class="line">                                      &lt;=                                          0b      0b      0b</span><br><span class="line">192.168.1.116                         =&gt; 101.226.76.164                           0b      0b   2.11kb</span><br><span class="line">                                      &lt;=                                          0b      0b    752b  </span><br><span class="line">192.168.1.116                         =&gt; dev                                      0b      0b   1.50kb</span><br><span class="line">                                      &lt;=                                          0b      0b    544b</span><br><span class="line">192.168.1.116                         =&gt; stage                                    0b      0b   1.40kb</span><br><span class="line">                                      &lt;=                                          0b      0b    504b</span><br><span class="line">239.255.255.250                       =&gt; 192.168.1.135                            0b      0b      0b</span><br><span class="line">                                      &lt;=                                          0b      0b    161b</span><br><span class="line">239.255.255.250                       =&gt; 192.168.1.113                            0b      0b      0b</span><br><span class="line">                                      &lt;=                                          0b      0b    160b</span><br><span class="line">------------------------------------------------------------------------------------------------------</span><br><span class="line">TX:             cum:   51.5kB   peak:   44.7kb                        rates:   22.4kb  4.64kb  8.27kb</span><br><span class="line">RX:                    46.8kB           28.5kb                                 11.6kb  4.87kb  4.94kb</span><br><span class="line">TOTAL:                 98.4kB           73.2kb                                 34.1kb  9.51kb  13.2kb</span><br></pre></td></tr></table></figure><h2 id="4-mtr"><a href="#4-mtr" class="headerlink" title="4. mtr"></a>4. mtr</h2><p>mtr是Linux中有一个非常棒的网络连通性判断工具,它结合了<code>ping</code>，<code>traceroute</code>，<code>nslookup</code>的相关特性。<br>相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。</p><p>常用参数</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-s</td><td>用来指定ping数据包的大小</td></tr><tr><td><code>--no-dns</code></td><td>不对IP地址做域名解析</td></tr><tr><td>-a</td><td>使用这个参数来设置ICMP返回之间的要求默认是1秒</td></tr><tr><td><code>--report</code></td><td>给主机发送10个ICMP包，然后输出报告</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">                    My traceroute  [v0.85]                                     [0/102]</span><br><span class="line">localhost (0.0.0.0)                            Sun Mar 26 20:25:43 2017</span><br><span class="line">Keys:  Help   Display mode   Restart statistics   Order of fields   quit</span><br><span class="line">                                            Packets               Pings</span><br><span class="line"> Host                                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line"> 1. 192.168.0.1                           0.0%     8    1.5   2.3   1.3   4.3   0.8</span><br><span class="line"> 2. 192.168.1.1                           0.0%     8    1.7   4.6   1.7  13.7   5.2</span><br><span class="line"> 3. 114.245.248.1                         0.0%     8   78.3 108.3   3.7 363.8 149.8</span><br><span class="line"> 4. 123.126.26.45                         0.0%     8    7.9  19.6   3.8  76.7  26.3</span><br><span class="line"> 5. 61.148.158.53                         0.0%     8    7.2  12.2   5.1  31.6   9.2</span><br><span class="line"> 6. 61.51.115.106                         0.0%     8   78.8  15.4   4.6  78.8  25.7</span><br><span class="line"> 7. 61.49.168.110                         0.0%     8    4.9   7.1   4.8  12.8   2.7</span><br><span class="line"> 8. ???</span><br><span class="line"> 9. ???</span><br><span class="line">10. 61.135.169.121                        0.0%     7    4.3   5.9   4.2  10.9   2.2</span><br></pre></td></tr></table></figure><p><strong>说明</strong><br>当分析mtr的输出时，需要注意两点:loss和latency<br>如果你在任何一跳上看到loss的百分比，这就说明这一跳上可能有问题。当然也有可能是服务提供商人为限制了ICMP发送的速率，也会导致丢包。如果下一跳没有丢包，那说明该丢包是人为限制的。<br>如果第4跳和第5跳都有50%的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是30%的丢包率，我们可以猜测30%的丢包率除了网络糟糕的原因之前还有人为限制ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。当出现短暂的10%丢包率的时候，不必担心，应用层的程序会弥补这点损失。</p><h2 id="5-htop"><a href="#5-htop" class="headerlink" title="5. htop"></a>5. htop</h2><p>常用功能键</p><table><thead><tr><th>按键</th><th>说明</th></tr></thead><tbody><tr><td>F1</td><td>帮助</td></tr><tr><td>F2</td><td>设置</td></tr><tr><td>F3</td><td>搜索进程</td></tr><tr><td>F4</td><td>过滤器，按关键字搜索</td></tr><tr><td>F5</td><td>显示树形结构</td></tr><tr><td>F6</td><td>选择排序方式</td></tr><tr><td>F7</td><td>减少nice值，可以提高对应进程的优先级</td></tr><tr><td>F8</td><td>增加nice值，可以降低对应进程的优先级</td></tr><tr><td>F9</td><td>杀掉选中的进程</td></tr><tr><td>F10</td><td>退出</td></tr><tr><td>/</td><td>搜索字符</td></tr><tr><td>h</td><td>显示帮助</td></tr><tr><td>l</td><td>显示进程打开的文件 lsof</td></tr><tr><td>u</td><td>显示所有用户，并可以选择某一特定用户的进程</td></tr><tr><td>s</td><td>将调用strace追踪进程的系统调用</td></tr><tr><td>t</td><td>显示树形结构</td></tr><tr><td>H</td><td>显示/隐藏用户线程</td></tr><tr><td>I</td><td>倒转排序</td></tr><tr><td>K</td><td>显示/隐藏内核线程</td></tr><tr><td>M</td><td>按内存占用排序</td></tr><tr><td>P</td><td>按CPU排序</td></tr><tr><td>T</td><td>按运行时间排序</td></tr></tbody></table><p>htop的左上角显示CPU、内存、交换区的使用情况，右边显示任务、负载、开机时间，下面是进程实时状态。<br>最后一行是F1～F10的功能菜单和对应的字符快捷键。</p><h2 id="6-linux系统性能分析"><a href="#6-linux系统性能分析" class="headerlink" title="6. linux系统性能分析"></a>6. linux系统性能分析</h2><p>分析次序为cpu mem disk network</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-nmon软件&quot;&gt;&lt;a href=&quot;#1-nmon软件&quot; class=&quot;headerlink&quot; title=&quot;1. nmon软件&quot;&gt;&lt;/a&gt;1. nmon软件&lt;/h2&gt;&lt;h3 id=&quot;1-1-运行nmon软件&quot;&gt;&lt;a href=&quot;#1-1-运行nmon软件&quot; c
      
    
    </summary>
    
    
      <category term="linux" scheme="http://niuzhiqiang90.coding.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python字符串处理</title>
    <link href="http://niuzhiqiang90.coding.me/2017/03/23/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    <id>http://niuzhiqiang90.coding.me/2017/03/23/python字符串处理/</id>
    <published>2017-03-23T13:49:45.000Z</published>
    <updated>2017-03-23T14:29:58.262Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-字符串处理函数"><a href="#1-字符串处理函数" class="headerlink" title="1. 字符串处理函数"></a>1. 字符串处理函数</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>s.find(substring,[start[,end]])</td><td>查找子字符串，可以指定开始结束的位置，返回索引值，否则返回-1</td></tr><tr><td>s.rfind(substring,[start[,end]])</td><td>反向查找字符串</td></tr><tr><td>s.index(substring,[start[,end]])</td><td>同find，找不到产生ValueError异常</td></tr><tr><td>s.rindex(substring,[start[,end]])</td><td>同反向查找</td></tr><tr><td>s.count(substring,[start[,end]])</td><td>返回找到子串的个数</td></tr><tr><td>s.lowercase()</td><td>所有字符转换成小写</td></tr><tr><td>s.capitalize()</td><td>首字母转换成大写</td></tr><tr><td>s.lower()</td><td>所有字符转换成小写</td></tr><tr><td>s.upper()</td><td>所有字符转换成大写</td></tr><tr><td>s.swapcase()</td><td>大小写互换</td></tr><tr><td>s.split(str,’’)</td><td>将string转换成list，以空格分割</td></tr><tr><td>s.join(list,’’)</td><td>将list转换成string,以空格连接</td></tr></tbody></table><p><strong>处理字符串的内置函数</strong></p><table><thead><tr><th>函数名</th><th>说明</th></tr></thead><tbody><tr><td>len(str)</td><td>串长度</td></tr><tr><td>cmp(‘first_str’,str)</td><td>字符串比较，第一个大，返回1</td></tr><tr><td>max(‘string’)</td><td>寻找字符串中最大的字符</td></tr><tr><td>min(‘string’)</td><td>寻找字符串中最小的字符</td></tr></tbody></table><h2 id="2-实例"><a href="#2-实例" class="headerlink" title="2. 实例"></a>2. 实例</h2><h3 id="2-1-查找子字符串"><a href="#2-1-查找子字符串" class="headerlink" title="2.1 查找子字符串"></a>2.1 查找子字符串</h3><p><code>s.find()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class="line">&gt;&gt;&gt; string.find(&apos;test&apos;)</span><br><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="2-2-查找子字符串"><a href="#2-2-查找子字符串" class="headerlink" title="2.2 查找子字符串"></a>2.2 查找子字符串</h3><p><code>s.index()</code><br>找不到就报错，找到就返回索引<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class="line">&gt;&gt;&gt; string.index(&apos;error&apos;)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">ValueError: substring not found</span><br><span class="line">&gt;&gt;&gt; string.index(&apos;test&apos;)</span><br><span class="line">12</span><br></pre></td></tr></table></figure></p><h3 id="2-3-首字母转换成大写"><a href="#2-3-首字母转换成大写" class="headerlink" title="2.3 首字母转换成大写"></a>2.3 首字母转换成大写</h3><p><code>s.capitalize()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class="line">&gt;&gt;&gt; string.capitalize()</span><br><span class="line">&apos;This is the test string&apos;</span><br></pre></td></tr></table></figure><h3 id="2-4-字符串转换成大写"><a href="#2-4-字符串转换成大写" class="headerlink" title="2.4 字符串转换成大写"></a>2.4 字符串转换成大写</h3><p><code>s.upper()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string.upper()</span><br><span class="line">&apos;THIS IS THE TEST STRING&apos;</span><br></pre></td></tr></table></figure><h3 id="2-5-字符串转换成小写"><a href="#2-5-字符串转换成小写" class="headerlink" title="2.5 字符串转换成小写"></a>2.5 字符串转换成小写</h3><p><code>s.lower()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string.lower()</span><br><span class="line">&apos;this is the test string&apos;</span><br></pre></td></tr></table></figure><h3 id="2-6-大小写互换"><a href="#2-6-大小写互换" class="headerlink" title="2.6 大小写互换"></a>2.6 大小写互换</h3><p><code>s.swapcase()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string += &quot;THIS IS CAP&quot;</span><br><span class="line">&gt;&gt;&gt; string</span><br><span class="line">&apos;this is the test stringTHIS IS CAP&apos;</span><br><span class="line">&gt;&gt;&gt; string.swapcase()</span><br><span class="line">&apos;THIS IS THE TEST STRINGthis is cap&apos;</span><br></pre></td></tr></table></figure><h3 id="2-7-将string转换为list"><a href="#2-7-将string转换为list" class="headerlink" title="2.7 将string转换为list"></a>2.7 将string转换为list</h3><p><code>s.split()</code><br>默认为空格，可以指定分隔符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; string.split()</span><br><span class="line">[&apos;this&apos;, &apos;is&apos;, &apos;the&apos;, &apos;test&apos;, &apos;stringTHIS&apos;, &apos;IS&apos;, &apos;CAP&apos;]</span><br></pre></td></tr></table></figure></p><h3 id="2-8-将list转换为string"><a href="#2-8-将list转换为string" class="headerlink" title="2.8 将list转换为string"></a>2.8 将list转换为string</h3><p><code>s.join()</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &apos;|&apos;.join(string.split())</span><br><span class="line">&apos;this|is|the|test|stringTHIS|IS|CAP&apos;</span><br></pre></td></tr></table></figure></p><p><strong>拓展</strong><br><code>+=</code>和<code>.join</code>实现的效果是一样的，但是<code>+=</code>每次都会新开辟空间，但是<code>.join</code>不用<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = &apos;the&apos;</span><br><span class="line">&gt;&gt;&gt; a += &apos; test&apos;</span><br><span class="line">&gt;&gt;&gt; a += &apos; is&apos;</span><br><span class="line">&gt;&gt;&gt; a += &apos; end&apos;</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">&apos;the test is end&apos;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; &apos;&apos;.join(a)</span><br><span class="line">&apos;the test is end&apos;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-字符串处理函数&quot;&gt;&lt;a href=&quot;#1-字符串处理函数&quot; class=&quot;headerlink&quot; title=&quot;1. 字符串处理函数&quot;&gt;&lt;/a&gt;1. 字符串处理函数&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th
      
    
    </summary>
    
    
      <category term="python" scheme="http://niuzhiqiang90.coding.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python文件处理</title>
    <link href="http://niuzhiqiang90.coding.me/2017/03/22/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>http://niuzhiqiang90.coding.me/2017/03/22/python文件处理/</id>
    <published>2017-03-22T12:51:07.000Z</published>
    <updated>2017-03-23T13:49:22.090Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-文件操作"><a href="#1-文件操作" class="headerlink" title="1. 文件操作"></a>1. 文件操作</h2><p>file(‘文件名’,’操作符’)<br><strong>省略操作符 默认为读</strong></p><table><thead><tr><th>模式</th><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>只读</td><td><code>r</code></td><td>文件必须存在</td></tr><tr><td>只写</td><td><code>w</code></td><td>文件不存在则创建，文件存在则清空文件内容</td></tr><tr><td>追加</td><td><code>a</code></td><td>文件不存在则创建，文件存在则在文件末尾添加内容</td></tr><tr><td>读写</td><td><code>r+</code></td><td></td></tr><tr><td>写读</td><td><code>w+</code></td><td></td></tr><tr><td>追加</td><td><code>a+</code></td></tr></tbody></table><p>在python中，以什么样的方式出来文件是比较重要的，如果你<br><strong>以只读的方式打开文件，那你就不能写操作</strong><br><strong>以只写的方式打开文件，那你就不能读操作</strong><br><strong>以追加的方式打开文件，也应该是不能进行读操作的</strong><br><strong><font color="red">操作完毕，不要忘记关闭文件</font></strong></p><h3 id="1-1-以只读方式打开文件"><a href="#1-1-以只读方式打开文件" class="headerlink" title="1.1 以只读方式打开文件"></a>1.1 以只读方式打开文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;r&apos;)  #f为该文件对象</span><br><span class="line">&gt;&gt;&gt; f.readline()</span><br><span class="line">&apos;hello world\n&apos;</span><br><span class="line">&gt;&gt;&gt; f.readline()</span><br><span class="line">&apos;\n&apos;</span><br><span class="line">&gt;&gt;&gt; f.readline()</span><br><span class="line">&apos;this is the second line\n&apos;</span><br><span class="line">&gt;&gt;&gt; f.readline()</span><br><span class="line">&gt;&gt;&gt; f.close()</span><br></pre></td></tr></table></figure><h3 id="1-2-以只写方式打开文件"><a href="#1-2-以只写方式打开文件" class="headerlink" title="1.2 以只写方式打开文件"></a>1.2 以只写方式打开文件</h3><p><strong>如果文件存在并且有内容，则会把文件之前的内容清除；如果文件不存在。则会创建文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;w&apos;)</span><br><span class="line">&gt;&gt;&gt; f.read()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">IOError: File not open for reading</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; f.readline()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">IOError: File not open for reading</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; f.write(&apos;this is the newest line&apos;)</span><br><span class="line">&gt;&gt;&gt; f.close()</span><br><span class="line">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</span><br><span class="line">&gt;&gt;&gt; f_read.read()</span><br><span class="line">&apos;this is the newest line&apos;</span><br><span class="line">&gt;&gt;&gt; f_read.read()</span><br><span class="line">&apos;&apos;</span><br></pre></td></tr></table></figure></p><h3 id="1-3-以追加的方式打开文件"><a href="#1-3-以追加的方式打开文件" class="headerlink" title="1.3 以追加的方式打开文件"></a>1.3 以追加的方式打开文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;a&apos;) </span><br><span class="line">&gt;&gt;&gt; f.write(&apos;second line&apos;) </span><br><span class="line">&gt;&gt;&gt; f.write(&apos;\nthird line&apos;)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>这个时候，打开文件，刚才写入的内容并没有写入到文件里。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</span><br><span class="line">&gt;&gt;&gt; f_read.readline()</span><br><span class="line">&apos;this is the newest line&apos;</span><br></pre></td></tr></table></figure></p><p><strong>文件在关闭的时候才会写入到文件里</strong>或者<strong>强制写入</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f.flush()</span><br></pre></td></tr></table></figure></p><p>追加模式也不可以读<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f.read()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">IOError: File not open for reading</span><br></pre></td></tr></table></figure></p><p><strong>拓展</strong></p><ol><li><p>去掉换行符<br><code>line.strip(&#39;换行符&#39;)</code><br>省略换行符默认为空格</p></li><li><p>把行分割<br><code>line.split(&#39;分隔符&#39;)</code></p></li></ol><h2 id="2-实例"><a href="#2-实例" class="headerlink" title="2. 实例"></a>2. 实例</h2><h3 id="2-1-读取-etc-passwd的内容"><a href="#2-1-读取-etc-passwd的内容" class="headerlink" title="2.1 读取/etc/passwd的内容"></a>2.1 读取<code>/etc/passwd</code>的内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = file(&apos;/etc/passwd&apos;)</span><br><span class="line">for line in f.readlines(): #循环文件的每一行 </span><br><span class="line">    line = line.strip(&apos;\n&apos;).split(&apos;:&apos;) </span><br><span class="line">    print line</span><br></pre></td></tr></table></figure><p>得到的结果如下<strong>一个列表</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[&apos;root&apos;, &apos;x&apos;, &apos;0&apos;, &apos;0&apos;, &apos;root&apos;, &apos;/root&apos;, &apos;/bin/bash&apos;]</span><br><span class="line">[&apos;daemon&apos;, &apos;x&apos;, &apos;1&apos;, &apos;1&apos;, &apos;daemon&apos;, &apos;/usr/sbin&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class="line">[&apos;bin&apos;, &apos;x&apos;, &apos;2&apos;, &apos;2&apos;, &apos;bin&apos;, &apos;/bin&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class="line">[&apos;sys&apos;, &apos;x&apos;, &apos;3&apos;, &apos;3&apos;, &apos;sys&apos;, &apos;/dev&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class="line">[&apos;sync&apos;, &apos;x&apos;, &apos;4&apos;, &apos;65534&apos;, &apos;sync&apos;, &apos;/bin&apos;, &apos;/bin/sync&apos;]</span><br><span class="line">[&apos;games&apos;, &apos;x&apos;, &apos;5&apos;, &apos;60&apos;, &apos;games&apos;, &apos;/usr/games&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class="line">[&apos;man&apos;, &apos;x&apos;, &apos;6&apos;, &apos;12&apos;, &apos;man&apos;, &apos;/var/cache/man&apos;, &apos;/usr/sbin/nologin&apos;]</span><br></pre></td></tr></table></figure></p><p>打印第1列，第2列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print line[0],line[1]</span><br></pre></td></tr></table></figure></p><h3 id="2-2-写文件"><a href="#2-2-写文件" class="headerlink" title="2.2 写文件"></a>2.2 写文件</h3><p>语言本身不存在文件保护的设置，避免多个程序对同一个文件进行操作，需要自己来完成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f.closed</span><br><span class="line">False</span><br></pre></td></tr></table></figure></p><p><strong>如果<code>f.closed</code>值为False,说明文件已经被打开</strong></p><p>显示文件的字符集，默认为ASCII<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f.encoding</span><br><span class="line">&gt;&gt;&gt; print f.encoding</span><br><span class="line">None</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;w&apos;) </span><br><span class="line">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;) </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode characters in position 0-5: ordinal not in range(128)</span><br><span class="line">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;.encode(&apos;utf-8&apos;))</span><br><span class="line">&gt;&gt;&gt; f.flush()</span><br></pre></td></tr></table></figure><p>读到末尾，<code>next()</code>会报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;r&apos;) </span><br><span class="line">&gt;&gt;&gt; f.readline()</span><br><span class="line">&apos;&apos;</span><br><span class="line">&gt;&gt;&gt; f.next()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">StopIteration</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p><h2 id="3-文件操作相关方法"><a href="#3-文件操作相关方法" class="headerlink" title="3. 文件操作相关方法"></a>3. 文件操作相关方法</h2><p>readline是通过next实现的</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>f.readlines()</td><td>以列表的形式读出文件</td></tr><tr><td>f.read()</td><td>以字符串的形式，一次性读出文件</td></tr><tr><td>f.seek()</td><td>跳到文件的指定位置</td></tr><tr><td>f.tell()</td><td>当前位置</td></tr><tr><td>f.truncate(100)</td><td>从头开始截断文件</td></tr><tr><td>f.writelines()</td><td>多行写</td></tr><tr><td>f.xreadlines()</td><td>逐行读</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-文件操作&quot;&gt;&lt;a href=&quot;#1-文件操作&quot; class=&quot;headerlink&quot; title=&quot;1. 文件操作&quot;&gt;&lt;/a&gt;1. 文件操作&lt;/h2&gt;&lt;p&gt;file(‘文件名’,’操作符’)&lt;br&gt;&lt;strong&gt;省略操作符 默认为读&lt;/strong&gt;&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="python" scheme="http://niuzhiqiang90.coding.me/tags/python/"/>
    
  </entry>
  
</feed>
