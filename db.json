{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"themes/next/source/baidu_verify_dCS3cqAky5.html","path":"baidu_verify_dCS3cqAky5.html","modified":0,"renderable":1},{"_id":"themes/next/source/baidu_verify_GmiJDizCGI.html","path":"baidu_verify_GmiJDizCGI.html","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1483068834000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1483068834000},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1483068834000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1483068834000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1483068834000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1483068834000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1483068834000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1483068834000},{"_id":"themes/next/_config.yml","hash":"e5154dde1e89f4cf4d2c7b3241b7a4c631081f3d","modified":1487134356000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1483068834000},{"_id":"source/_posts/.docker-registry.md.swp","hash":"aba39b7323690bd7ff9d4059b675c1b949f2c937","modified":1504019617000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1483068834000},{"_id":"source/_posts/docker安装.md","hash":"9d0b0e52fb725f62273e41f350954cc4f32121d5","modified":1496583484417},{"_id":"source/_posts/docker-registry.md","hash":"94ef955d017c6e916ea3d8c1739e895b34f18325","modified":1504019617000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1483068834000},{"_id":"source/_posts/docker镜像.md","hash":"332c1da3649d26f70d97c74c17a849436e576901","modified":1489412097010},{"_id":"source/_posts/ceph.md","hash":"ad207726902217fe90668478b414a246369df4cb","modified":1496583484000},{"_id":"source/_posts/git-tag操作.md","hash":"2977744ea7cc2921a3b49d160f1e1ddcbca93c8f","modified":1521759510001},{"_id":"source/_posts/docker容器.md","hash":"f290e06bc158dac633c8c54e972baddf57706768","modified":1489412097010},{"_id":"source/_posts/git-bisect.md","hash":"f49ca2ba2ceb0df675c3aae90d0aad38e265c055","modified":1504102253000},{"_id":"source/_posts/hello-world.md","hash":"c8f2a85bdd14c35bb58009fbd6c9697247119e29","modified":1489412560000},{"_id":"source/_posts/git-基本操作.md","hash":"9f98e1917d4abfa7ed65bbf77b6ee92deca933c9","modified":1484211070000},{"_id":"source/_posts/linux系统监控基本命令.md","hash":"3a3c23e29f186d2febc354fb809074073aabd075","modified":1490621105932},{"_id":"source/_posts/git-cherry-pick.md","hash":"41fc97f2aaf762ae2dd28cdbd6b487745bc9bd9b","modified":1484371652000},{"_id":"source/_posts/python使用和导入模块.md","hash":"f34813ada37ca9e7a862c19612679f2ceeea0fea","modified":1490102184321},{"_id":"source/_posts/python字符串对齐.md","hash":"d19e30ef788ce14f60ba809cd7b0f72d0363f2b4","modified":1539582700119},{"_id":"source/_posts/python字符串处理.md","hash":"ce081f291f0fae295023d4920edf613d5b17daeb","modified":1490279398262},{"_id":"source/_posts/python指定字符编码.md","hash":"f9fc5e9df2bc530abe71dabd1b4831597c82cde5","modified":1486444111000},{"_id":"source/_posts/python字符编码.md","hash":"d4c64755303251b538fbf974215d2634b8938993","modified":1490102184321},{"_id":"source/_posts/linux添加swap.md","hash":"d3977166b9e8df5012730da908fa2800b600af0a","modified":1487136138000},{"_id":"source/_posts/shell-style-guide.md","hash":"7f51bcb819e0bedc14763d022275ce21929b6ad8","modified":1484201396000},{"_id":"source/_posts/python文件处理.md","hash":"692b4b7be540bda2769ea752ec91ea1bcc487866","modified":1490276962090},{"_id":"source/_posts/tmux安装配置使用.md","hash":"f8d8d24915b8aef9f46effc41aa258253aa29793","modified":1484815576000},{"_id":"source/_posts/ubuntu修改网卡名称.md","hash":"3705ec83390a2ca45ea5be8c5a301f578923c314","modified":1486444310000},{"_id":"source/_posts/python用户交互.md","hash":"b5c8c328bb602d8b3fabbd5ab98a781a67517f02","modified":1490102184321},{"_id":"source/_posts/ubuntu安装powerline字体.md","hash":"ae134616335c9551bd615bda372ca17cb06dca06","modified":1485245733000},{"_id":"source/_posts/ubuntu指定默认编辑器.md","hash":"89f566f7f81ad1f478befc36f47ac6dab5e63e47","modified":1486445825000},{"_id":"source/_posts/vim-surround插件.md","hash":"17f156d4b2e8a32bb5c27b1f03e8d7985e6ce62a","modified":1484198725000},{"_id":"source/_posts/git-分支操作.md","hash":"d08f524eee253adfc35a083a67e0fc2196e24f50","modified":1484211104000},{"_id":"source/_posts/修改最后一次commit.md","hash":"47829c0ebdd0ea4f35768fd8b9969f7c0ab51453","modified":1484183915000},{"_id":"source/categories/index.md","hash":"43303bb688fd53bab69c2f397d6a3213b197d380","modified":1483083299000},{"_id":"source/_posts/ubuntu安装为知笔记.md","hash":"29f8c7fe40ae9b4cb4d35bd34b3b0522b1cf32c1","modified":1484899227000},{"_id":"source/_posts/website-enable-ssl.md","hash":"4002771060c26e536d2a21b001c71797b6b97cb7","modified":1504100957000},{"_id":"source/tags/index.md","hash":"4479854a1626b60e213c264b61dd30ab0142d5dd","modified":1483083321000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1483068834000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1483068834000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1483068834000},{"_id":"source/images/avatar.png","hash":"9e0f60789104d5f16fccfded12209468e5166a6b","modified":1484378050000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1483068834000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1483068834000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1483068834000},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1483068834000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1483068834000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1483068834000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1483068834000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1483068834000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1483068834000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1483068834000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1483068834000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1483068834000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1483068834000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1483068834000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1483068834000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1483068834000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1483068834000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1483068834000},{"_id":"themes/next/source/baidu_verify_dCS3cqAky5.html","hash":"5e2caf3db8dc1374c76a82d10db84d94e1644497","modified":1486447409000},{"_id":"themes/next/source/baidu_verify_GmiJDizCGI.html","hash":"f3a9a14853804aa95a608e3918b130bd5b39181c","modified":1486537970000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1483068834000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1483068834000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1483068834000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1483068834000},{"_id":"source/about/index.md","hash":"bcfdc42a9bd51573e409bdf6d509eafb21cdb804","modified":1483083342000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1483068834000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1483068834000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1483068834000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1483068834000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6859d6933ab53b0f33f715931202c7d5e8211de7","modified":1484901824000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1483068834000},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1483068834000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1483068834000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1483068834000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1483068834000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1483068834000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1483068834000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1483068834000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1483068834000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1483068834000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1483068834000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1483068834000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1483068834000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1483068834000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1483068834000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1483068834000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1483068834000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1483068834000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1483068834000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1483068834000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1483068834000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1483068834000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483068834000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1483068834000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1483068834000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483068834000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483068834000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1483068834000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1483068834000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1483068834000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1483068834000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1483068834000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1483068834000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1483068834000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1483068834000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1483068834000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1483068834000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1483068834000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1483068834000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1483068834000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1483068834000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1483068834000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1483068834000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1483068834000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1483068834000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1483068834000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1483068834000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1483068834000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1483068834000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1483068834000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1483068834000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1483068834000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1483068834000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1483068834000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1483068834000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1483068834000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1483068834000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1483068834000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1483068834000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1483068834000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1483068834000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1483068834000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1483068834000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1483068834000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1483068834000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1483068834000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1483068834000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1483068834000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1483068834000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1483068834000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1483068834000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1483068834000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1483068834000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1483068834000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1483068834000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1483068834000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1483068834000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1483068834000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1483068834000},{"_id":"public/baidusitemap.xml","hash":"6a5e3530e4898f3a1eb75b855db291c1fa66627f","modified":1539582706228},{"_id":"public/atom.xml","hash":"3772c9bc8a916c4444f1351aea6f5e301b8f53ee","modified":1539582706213},{"_id":"public/search.xml","hash":"bbbb5b98d3f8d6416eca64508b8d7d77e6b87564","modified":1539582706228},{"_id":"public/sitemap.xml","hash":"205d491b7996874c94aa8391fc05dd3f166f95aa","modified":1539582706228},{"_id":"public/about/index.html","hash":"2b8d5dcd3eb021c8954f55e5ce84bd645728ca36","modified":1539582396498},{"_id":"public/categories/index.html","hash":"51fe182c16a2471f156a46862c49cc5bfa544ce3","modified":1539582396500},{"_id":"public/tags/index.html","hash":"849b64cb03bc371a5e31242e731dffd633a39914","modified":1539582396500},{"_id":"public/2017/08/30/git-bisect/index.html","hash":"e6ad416f553dddd4921afc0b0e7881831beff300","modified":1539582396500},{"_id":"public/2017/08/09/website-enable-ssl/index.html","hash":"282f30009c1103f88f21899a12a1bdd60f2a8cbc","modified":1539582396500},{"_id":"public/2017/03/25/linux系统监控基本命令/index.html","hash":"ac49c19e693cc104a614b6c9abd8ee2139a84f4d","modified":1539582396500},{"_id":"public/2017/03/23/python字符串处理/index.html","hash":"ec048b2f950a1aa4710f0b860cfa52dbdc4e649d","modified":1539582396500},{"_id":"public/2017/03/22/python文件处理/index.html","hash":"2afdf6b9b17c10997a6c3b399947aa4bc904c3a1","modified":1539582396500},{"_id":"public/2017/03/22/git-tag操作/index.html","hash":"5e28e403505ce9c54ec06ea553c8f53bbcbd4f51","modified":1539582396500},{"_id":"public/2017/03/20/python用户交互/index.html","hash":"f11d9a55c79483094f3562f1d9eb23748fe055f5","modified":1539582396500},{"_id":"public/2017/03/20/python使用和导入模块/index.html","hash":"1f9050203a2122a5746cbef3a54eeb904940654c","modified":1539582396500},{"_id":"public/2017/03/20/python字符编码/index.html","hash":"aac52d20773497f1d2fbd5526b307bea8b42961c","modified":1539582396500},{"_id":"public/2017/03/13/ceph/index.html","hash":"eb67478bfd25df44c6df9e67835318875634e72e","modified":1539582396500},{"_id":"public/2017/02/27/docker-registry/index.html","hash":"509bb637e80ffe8c9986972c57a7509e357f52eb","modified":1539582396501},{"_id":"public/2017/02/27/docker容器/index.html","hash":"0a9c63ad54f058f8628dc6b70ee04cd7daca6010","modified":1539582396501},{"_id":"public/2017/02/27/docker镜像/index.html","hash":"91f3d556d9925442e18deaa9dd556ea5d29d85c7","modified":1539582396501},{"_id":"public/2017/02/27/docker安装/index.html","hash":"247477f907333c4af8db410d41c08c408183cc0f","modified":1539582396501},{"_id":"public/2017/02/14/linux添加swap/index.html","hash":"16451180d63cfb6cd377ad81f236a11961829208","modified":1539582396501},{"_id":"public/2017/02/07/ubuntu指定默认编辑器/index.html","hash":"0624cf9c6d721928982db809314205c3826e75f8","modified":1539582396501},{"_id":"public/2017/02/07/ubuntu修改网卡名称/index.html","hash":"f929e0f22c1a2cde1b43ac5d826d91665fa759b1","modified":1539582396501},{"_id":"public/2017/02/07/python指定字符编码/index.html","hash":"36334f39ab4edb6064dc3e492e60135cffe7ffe1","modified":1539582396501},{"_id":"public/2017/01/22/ubuntu安装powerline字体/index.html","hash":"d5cf390455039adee89b3fcdfd2b02bd7223d0e1","modified":1539582396501},{"_id":"public/2017/01/20/ubuntu安装为知笔记/index.html","hash":"73fdcc18a1137647210d8054b4772070dc5af52e","modified":1539582396501},{"_id":"public/2017/01/19/tmux安装配置使用/index.html","hash":"ef9c967b0301a6783e59cae9e6c635f6d878237d","modified":1539582396501},{"_id":"public/2017/01/14/git-cherry-pick/index.html","hash":"1bfa450ba550dab9a0797a310af69d32f50f8b88","modified":1539582396501},{"_id":"public/2017/01/12/git-分支操作/index.html","hash":"766b1250dc160ce9abf0d15c1eedf8657031324e","modified":1539582396501},{"_id":"public/2017/01/12/shell-style-guide/index.html","hash":"22c4063ab6ce26ebd7c19d93a0783f328c521d05","modified":1539582396501},{"_id":"public/2017/01/12/vim-surround插件/index.html","hash":"ce109467b2f11ca84aae8a629e51fbd68a362996","modified":1539582396502},{"_id":"public/2017/01/11/修改最后一次commit/index.html","hash":"5eaaf075ba0654701b12fb0a17c508a3faec5233","modified":1539582396502},{"_id":"public/2017/01/11/git-基本操作/index.html","hash":"b12fe9dcb448967b401663e8614fb7a303cffbf2","modified":1539582396502},{"_id":"public/2017/01/11/hello-world/index.html","hash":"a14db3a455df14585e19d1a80eddd6942ad47540","modified":1539582396502},{"_id":"public/categories/ceph/index.html","hash":"0028e957d270e175e5b0267923d7d22c74fa20a2","modified":1539582396502},{"_id":"public/categories/git/index.html","hash":"a81a96df4e695f06c4b7b6b08f3a013db43ab366","modified":1539582396502},{"_id":"public/categories/vim/index.html","hash":"13759b4c499fee548d9fafd6618980bc38a560e8","modified":1539582396502},{"_id":"public/categories/shell/index.html","hash":"7a027a825973dcf57969f667f7ae72687a38887e","modified":1539582396502},{"_id":"public/archives/index.html","hash":"cf9db8271e7da0ecdb508f12ebf357ec2f51fd6a","modified":1539582396502},{"_id":"public/archives/page/2/index.html","hash":"659ff636ca617feeb3f4019c478d6ea3384c61df","modified":1539582396502},{"_id":"public/archives/page/3/index.html","hash":"357a6fb8d73d5422c014fde14da2b438346fbdf2","modified":1539582396502},{"_id":"public/archives/2017/index.html","hash":"3e307a16bb3c9833045671d72533b346e7965bab","modified":1539582396502},{"_id":"public/archives/2017/page/2/index.html","hash":"1ee9a13035499638f0cd0b2101a2754279a89ffd","modified":1539582396502},{"_id":"public/archives/2017/page/3/index.html","hash":"563be287e9f482f9ee05c3b44b1b36d3eeac88d4","modified":1539582396502},{"_id":"public/archives/2017/01/index.html","hash":"5e4177e77f4e21a31ea52e2aa29f514c3193a472","modified":1539582396502},{"_id":"public/archives/2017/02/index.html","hash":"f01c3c6ae4c4d4e0f8480026b63b5f65a48c4e2d","modified":1539582396502},{"_id":"public/archives/2017/03/index.html","hash":"d0df0f4e3426a743b93347cf236a4bb20caa3848","modified":1539582396502},{"_id":"public/archives/2017/08/index.html","hash":"f4ed5b29652dd46d988035ae27b1ba18d2fa517c","modified":1539582396503},{"_id":"public/index.html","hash":"9fafa705d4de38513481fff16195562439858da1","modified":1539582706233},{"_id":"public/page/2/index.html","hash":"f20998123ba541850c9e76c210f8a4bba342d79c","modified":1539582396503},{"_id":"public/page/3/index.html","hash":"c20844c753de3a465648c3313ea48f3fa1585c32","modified":1539582396503},{"_id":"public/tags/docker/index.html","hash":"2ae7860105dfe11487f459e78775819d029840fb","modified":1539582396503},{"_id":"public/tags/ceph/index.html","hash":"2e95f473ec860fa96cacb7f6d39ab792ce264cf2","modified":1539582396503},{"_id":"public/tags/git/index.html","hash":"65bef1cd0b684bcc40dfcc74fa1bda322839aaf5","modified":1539582396503},{"_id":"public/tags/linux/index.html","hash":"9115b170421cccb4c1ed8c8f815b232d8b28efed","modified":1539582396503},{"_id":"public/tags/python/index.html","hash":"2db93a345ec12b78efe6e6e45a47d13146174068","modified":1539582396503},{"_id":"public/tags/ubuntu/index.html","hash":"e4ffd28cb88a90e47d95e1065c13722311e5070a","modified":1539582396503},{"_id":"public/tags/tmux/index.html","hash":"7804148eed2fcbac4ffb4d76ddc485b01ff3d744","modified":1539582396503},{"_id":"public/tags/vim插件/index.html","hash":"b607a52ecf19e0aee9e96ec93cbaeae082913179","modified":1539582396503},{"_id":"public/tags/shell/index.html","hash":"6f74fcd48457992a76fdf027c3289ec2e68f4252","modified":1539582396503},{"_id":"public/tags/nginx/index.html","hash":"723a65e757bebdcd11537a065be23c2af85c3c79","modified":1539582396503},{"_id":"public/tags/ssl/index.html","hash":"90e9eec878f462ec1b651c1d700df5141a1f03df","modified":1539582396503},{"_id":"public/2018/10/13/python字符串对齐/index.html","hash":"cedccd8e6f22694dd90160f80fb0b50a4b355f59","modified":1539582706233},{"_id":"public/archives/2018/index.html","hash":"918d05593710fac0c996404e2da31e24e38c02cc","modified":1539582396507},{"_id":"public/archives/2018/10/index.html","hash":"7a44ce82dadc2ca4c128c866624c6cf88fcff7f7","modified":1539582396508},{"_id":"public/images/avatar.png","hash":"9e0f60789104d5f16fccfded12209468e5166a6b","modified":1539582396514},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1539582396514},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1539582396514},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1539582396514},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1539582396514},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1539582396514},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1539582396514},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1539582396514},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539582396514},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1539582396514},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1539582396514},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539582396514},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1539582396514},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1539582396514},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1539582396514},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1539582396515},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1539582396515},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1539582396515},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1539582396515},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1539582396515},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1539582396515},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1539582396515},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1539582396515},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1539582396515},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1539582396515},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1539582398292},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1539582398295},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1539582398296},{"_id":"public/baidu_verify_GmiJDizCGI.html","hash":"f3a9a14853804aa95a608e3918b130bd5b39181c","modified":1539582398306},{"_id":"public/baidu_verify_dCS3cqAky5.html","hash":"5e2caf3db8dc1374c76a82d10db84d94e1644497","modified":1539582398306},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1539582398306},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1539582398306},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1539582398306},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1539582398306},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1539582398306},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1539582398306},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1539582398306},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1539582398307},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1539582398307},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1539582398307},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1539582398307},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1539582398307},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1539582398307},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1539582398307},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1539582398307},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1539582398307},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1539582398307},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1539582398307},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1539582398307},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1539582398307},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1539582398307},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1539582398308},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1539582398308},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1539582398308},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1539582398308},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1539582398308},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1539582398308},{"_id":"public/css/main.css","hash":"1eff97fd08cab92887f82caff7acaef0b313beb6","modified":1539582398308},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1539582398308},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1539582398308},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1539582398308},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1539582398308},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1539582398308},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1539582398309},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1539582398309},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1539582398309},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1539582398309},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1539582398309},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1539582398314}],"Category":[{"name":"ceph","_id":"cjn9vlsin0007x0s6kaxee5yy"},{"name":"git","_id":"cjn9vlsiu000kx0s6vdwq9vhs"},{"name":"vim","_id":"cjn9vlsxb001wx0s6xccvdpgu"},{"name":"shell","_id":"cjn9vlsxh0027x0s613i4rq7d"}],"Data":[],"Page":[{"title":"categories","date":"2016-12-30T07:34:38.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-12-30 15:34:38\ntype: categories\n---\n","updated":"2016-12-30T07:34:59.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjn9vlswv001ix0s6bfouz5s1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-12-30T07:35:06.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-12-30 15:35:06\ntype: tags\n---\n","updated":"2016-12-30T07:35:21.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjn9vlsww001kx0s6rycryym5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2016-12-30T07:35:29.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-12-30 15:35:29\ntype: about\n---\n","updated":"2016-12-30T07:35:42.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjn9vlsyp002jx0s6a7cn31c5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"docker安装","date":"2017-02-27T09:03:14.000Z","_content":"\n## 1. ubuntu通过Docker源安装最新版本\n### 1.1 安装依赖\n要安装最新的Docker版本，首先需要安装apt-transport-https支持，之后通过添加源来安装。\n```\nsudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates\n```\n### 1.2 添加GPG key\n```\nsudo apt-key adv \\\n               --keyserver hkp://ha.pool.sks-keyservers.net:80 \\\n               --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \n               \n```\n### 1.3 添加对应的源\n源列表\n\n| Ubuntu version      | Repository                                                 |\n| ---                 | --                                                         |\n| Precise 12.04 (LTS) | deb https://apt.dockerproject.org/repo ubuntu-precise main |\n| Trusty 14.04 (LTS)  | deb https://apt.dockerproject.org/repo ubuntu-trusty main  |\n| Wily 15.10          | deb https://apt.dockerproject.org/repo ubuntu-wily main    |\n| Xenial 16.04 (LTS)  | deb https://apt.dockerproject.org/repo ubuntu-xenial main  |\n\n```\necho \"<REPO>\" | sudo tee /etc/apt/sources.list.d/docker.list\n```\n### 1.4 更新apt包的index\n```\nsudo apt-get update\n```\n### 1.5  安装docker\n```\nsudo apt-get install docker-engine\nsudo service docker start\nsudo docker run hello-world \n```\n\n## 2. CentOS安装\n\n### 2.1 更新包\n```\nsudo yum update\n```\n### 2.2 添加yum源\n```\nsudo tee /etc/yum.repos.d/docker.repo << EOF\n[DockerRepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/7/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\nEOF\n```\n### 2.3 安装docker包\n```\nsudo yum -y install docker-engine\n```\n### 2.4 开启启动\n```\nsudo systemctl enable docker.service\n```\n### 2.5 启动服务\n```\nsudo systemctl start docker\n```\n## 3. 验证docker是否安装成功\n```\nsudo docker run --rm hello-world\n\nUnable to find image 'hello-world:latest' locally\n latest: Pulling from library/hello-world\n c04b14da8d14: Pull complete\n Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9\n Status: Downloaded newer image for hello-world:latest\n\n Hello from Docker!\n This message shows that your installation appears to be working correctly.\n\n To generate this message, Docker took the following steps:\n  1. The Docker client contacted the Docker daemon.\n  2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n  3. The Docker daemon created a new container from that image which runs the\n     executable that produces the output you are currently reading.\n  4. The Docker daemon streamed that output to the Docker client, which sent it\n     to your terminal.\n\n To try something more ambitious, you can run an Ubuntu container with:\n  $ docker run -it ubuntu bash\n\n Share images, automate workflows, and more with a free Docker Hub account:\n  https://hub.docker.com\n\n For more examples and ideas, visit:\n  https://docs.docker.com/engine/userguide/\n```\n\n\n[docker on github](https://github.com/docker/docker)  \n[docker install mothed](https://docs.docker.com/engine/installation/)\n","source":"_posts/docker安装.md","raw":"---\ntitle: docker安装\ndate: 2017-02-27 17:03:14\ntags: docker\n---\n\n## 1. ubuntu通过Docker源安装最新版本\n### 1.1 安装依赖\n要安装最新的Docker版本，首先需要安装apt-transport-https支持，之后通过添加源来安装。\n```\nsudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates\n```\n### 1.2 添加GPG key\n```\nsudo apt-key adv \\\n               --keyserver hkp://ha.pool.sks-keyservers.net:80 \\\n               --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \n               \n```\n### 1.3 添加对应的源\n源列表\n\n| Ubuntu version      | Repository                                                 |\n| ---                 | --                                                         |\n| Precise 12.04 (LTS) | deb https://apt.dockerproject.org/repo ubuntu-precise main |\n| Trusty 14.04 (LTS)  | deb https://apt.dockerproject.org/repo ubuntu-trusty main  |\n| Wily 15.10          | deb https://apt.dockerproject.org/repo ubuntu-wily main    |\n| Xenial 16.04 (LTS)  | deb https://apt.dockerproject.org/repo ubuntu-xenial main  |\n\n```\necho \"<REPO>\" | sudo tee /etc/apt/sources.list.d/docker.list\n```\n### 1.4 更新apt包的index\n```\nsudo apt-get update\n```\n### 1.5  安装docker\n```\nsudo apt-get install docker-engine\nsudo service docker start\nsudo docker run hello-world \n```\n\n## 2. CentOS安装\n\n### 2.1 更新包\n```\nsudo yum update\n```\n### 2.2 添加yum源\n```\nsudo tee /etc/yum.repos.d/docker.repo << EOF\n[DockerRepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/7/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\nEOF\n```\n### 2.3 安装docker包\n```\nsudo yum -y install docker-engine\n```\n### 2.4 开启启动\n```\nsudo systemctl enable docker.service\n```\n### 2.5 启动服务\n```\nsudo systemctl start docker\n```\n## 3. 验证docker是否安装成功\n```\nsudo docker run --rm hello-world\n\nUnable to find image 'hello-world:latest' locally\n latest: Pulling from library/hello-world\n c04b14da8d14: Pull complete\n Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9\n Status: Downloaded newer image for hello-world:latest\n\n Hello from Docker!\n This message shows that your installation appears to be working correctly.\n\n To generate this message, Docker took the following steps:\n  1. The Docker client contacted the Docker daemon.\n  2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n  3. The Docker daemon created a new container from that image which runs the\n     executable that produces the output you are currently reading.\n  4. The Docker daemon streamed that output to the Docker client, which sent it\n     to your terminal.\n\n To try something more ambitious, you can run an Ubuntu container with:\n  $ docker run -it ubuntu bash\n\n Share images, automate workflows, and more with a free Docker Hub account:\n  https://hub.docker.com\n\n For more examples and ideas, visit:\n  https://docs.docker.com/engine/userguide/\n```\n\n\n[docker on github](https://github.com/docker/docker)  \n[docker install mothed](https://docs.docker.com/engine/installation/)\n","slug":"docker安装","published":1,"updated":"2017-06-04T13:38:04.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsi50000x0s6825buxlo","content":"<h2 id=\"1-ubuntu通过Docker源安装最新版本\"><a href=\"#1-ubuntu通过Docker源安装最新版本\" class=\"headerlink\" title=\"1. ubuntu通过Docker源安装最新版本\"></a>1. ubuntu通过Docker源安装最新版本</h2><h3 id=\"1-1-安装依赖\"><a href=\"#1-1-安装依赖\" class=\"headerlink\" title=\"1.1 安装依赖\"></a>1.1 安装依赖</h3><p>要安装最新的Docker版本，首先需要安装apt-transport-https支持，之后通过添加源来安装。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install apt-transport-https ca-certificates</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-2-添加GPG-key\"><a href=\"#1-2-添加GPG-key\" class=\"headerlink\" title=\"1.2 添加GPG key\"></a>1.2 添加GPG key</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv \\</span><br><span class=\"line\">               --keyserver hkp://ha.pool.sks-keyservers.net:80 \\</span><br><span class=\"line\">               --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-添加对应的源\"><a href=\"#1-3-添加对应的源\" class=\"headerlink\" title=\"1.3 添加对应的源\"></a>1.3 添加对应的源</h3><p>源列表</p>\n<table>\n<thead>\n<tr>\n<th>Ubuntu version</th>\n<th>Repository</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Precise 12.04 (LTS)</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-precise main</td>\n</tr>\n<tr>\n<td>Trusty 14.04 (LTS)</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-trusty main</td>\n</tr>\n<tr>\n<td>Wily 15.10</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-wily main</td>\n</tr>\n<tr>\n<td>Xenial 16.04 (LTS)</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-xenial main</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;&lt;REPO&gt;&quot; | sudo tee /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-更新apt包的index\"><a href=\"#1-4-更新apt包的index\" class=\"headerlink\" title=\"1.4 更新apt包的index\"></a>1.4 更新apt包的index</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-安装docker\"><a href=\"#1-5-安装docker\" class=\"headerlink\" title=\"1.5  安装docker\"></a>1.5  安装docker</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-engine</span><br><span class=\"line\">sudo service docker start</span><br><span class=\"line\">sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-CentOS安装\"><a href=\"#2-CentOS安装\" class=\"headerlink\" title=\"2. CentOS安装\"></a>2. CentOS安装</h2><h3 id=\"2-1-更新包\"><a href=\"#2-1-更新包\" class=\"headerlink\" title=\"2.1 更新包\"></a>2.1 更新包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-添加yum源\"><a href=\"#2-2-添加yum源\" class=\"headerlink\" title=\"2.2 添加yum源\"></a>2.2 添加yum源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/yum.repos.d/docker.repo &lt;&lt; EOF</span><br><span class=\"line\">[DockerRepo]</span><br><span class=\"line\">name=Docker Repository</span><br><span class=\"line\">baseurl=https://yum.dockerproject.org/repo/main/centos/7/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://yum.dockerproject.org/gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-安装docker包\"><a href=\"#2-3-安装docker包\" class=\"headerlink\" title=\"2.3 安装docker包\"></a>2.3 安装docker包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum -y install docker-engine</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-开启启动\"><a href=\"#2-4-开启启动\" class=\"headerlink\" title=\"2.4 开启启动\"></a>2.4 开启启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable docker.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-启动服务\"><a href=\"#2-5-启动服务\" class=\"headerlink\" title=\"2.5 启动服务\"></a>2.5 启动服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-验证docker是否安装成功\"><a href=\"#3-验证docker是否安装成功\" class=\"headerlink\" title=\"3. 验证docker是否安装成功\"></a>3. 验证docker是否安装成功</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run --rm hello-world</span><br><span class=\"line\"></span><br><span class=\"line\">Unable to find image &apos;hello-world:latest&apos; locally</span><br><span class=\"line\"> latest: Pulling from library/hello-world</span><br><span class=\"line\"> c04b14da8d14: Pull complete</span><br><span class=\"line\"> Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9</span><br><span class=\"line\"> Status: Downloaded newer image for hello-world:latest</span><br><span class=\"line\"></span><br><span class=\"line\"> Hello from Docker!</span><br><span class=\"line\"> This message shows that your installation appears to be working correctly.</span><br><span class=\"line\"></span><br><span class=\"line\"> To generate this message, Docker took the following steps:</span><br><span class=\"line\">  1. The Docker client contacted the Docker daemon.</span><br><span class=\"line\">  2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class=\"line\">  3. The Docker daemon created a new container from that image which runs the</span><br><span class=\"line\">     executable that produces the output you are currently reading.</span><br><span class=\"line\">  4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class=\"line\">     to your terminal.</span><br><span class=\"line\"></span><br><span class=\"line\"> To try something more ambitious, you can run an Ubuntu container with:</span><br><span class=\"line\">  $ docker run -it ubuntu bash</span><br><span class=\"line\"></span><br><span class=\"line\"> Share images, automate workflows, and more with a free Docker Hub account:</span><br><span class=\"line\">  https://hub.docker.com</span><br><span class=\"line\"></span><br><span class=\"line\"> For more examples and ideas, visit:</span><br><span class=\"line\">  https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/docker/docker\" target=\"_blank\" rel=\"noopener\">docker on github</a><br><a href=\"https://docs.docker.com/engine/installation/\" target=\"_blank\" rel=\"noopener\">docker install mothed</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-ubuntu通过Docker源安装最新版本\"><a href=\"#1-ubuntu通过Docker源安装最新版本\" class=\"headerlink\" title=\"1. ubuntu通过Docker源安装最新版本\"></a>1. ubuntu通过Docker源安装最新版本</h2><h3 id=\"1-1-安装依赖\"><a href=\"#1-1-安装依赖\" class=\"headerlink\" title=\"1.1 安装依赖\"></a>1.1 安装依赖</h3><p>要安装最新的Docker版本，首先需要安装apt-transport-https支持，之后通过添加源来安装。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install apt-transport-https ca-certificates</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-2-添加GPG-key\"><a href=\"#1-2-添加GPG-key\" class=\"headerlink\" title=\"1.2 添加GPG key\"></a>1.2 添加GPG key</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv \\</span><br><span class=\"line\">               --keyserver hkp://ha.pool.sks-keyservers.net:80 \\</span><br><span class=\"line\">               --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-添加对应的源\"><a href=\"#1-3-添加对应的源\" class=\"headerlink\" title=\"1.3 添加对应的源\"></a>1.3 添加对应的源</h3><p>源列表</p>\n<table>\n<thead>\n<tr>\n<th>Ubuntu version</th>\n<th>Repository</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Precise 12.04 (LTS)</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-precise main</td>\n</tr>\n<tr>\n<td>Trusty 14.04 (LTS)</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-trusty main</td>\n</tr>\n<tr>\n<td>Wily 15.10</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-wily main</td>\n</tr>\n<tr>\n<td>Xenial 16.04 (LTS)</td>\n<td>deb <a href=\"https://apt.dockerproject.org/repo\" target=\"_blank\" rel=\"noopener\">https://apt.dockerproject.org/repo</a> ubuntu-xenial main</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;&lt;REPO&gt;&quot; | sudo tee /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-更新apt包的index\"><a href=\"#1-4-更新apt包的index\" class=\"headerlink\" title=\"1.4 更新apt包的index\"></a>1.4 更新apt包的index</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-安装docker\"><a href=\"#1-5-安装docker\" class=\"headerlink\" title=\"1.5  安装docker\"></a>1.5  安装docker</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-engine</span><br><span class=\"line\">sudo service docker start</span><br><span class=\"line\">sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-CentOS安装\"><a href=\"#2-CentOS安装\" class=\"headerlink\" title=\"2. CentOS安装\"></a>2. CentOS安装</h2><h3 id=\"2-1-更新包\"><a href=\"#2-1-更新包\" class=\"headerlink\" title=\"2.1 更新包\"></a>2.1 更新包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-添加yum源\"><a href=\"#2-2-添加yum源\" class=\"headerlink\" title=\"2.2 添加yum源\"></a>2.2 添加yum源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/yum.repos.d/docker.repo &lt;&lt; EOF</span><br><span class=\"line\">[DockerRepo]</span><br><span class=\"line\">name=Docker Repository</span><br><span class=\"line\">baseurl=https://yum.dockerproject.org/repo/main/centos/7/</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://yum.dockerproject.org/gpg</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-安装docker包\"><a href=\"#2-3-安装docker包\" class=\"headerlink\" title=\"2.3 安装docker包\"></a>2.3 安装docker包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum -y install docker-engine</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-开启启动\"><a href=\"#2-4-开启启动\" class=\"headerlink\" title=\"2.4 开启启动\"></a>2.4 开启启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable docker.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-启动服务\"><a href=\"#2-5-启动服务\" class=\"headerlink\" title=\"2.5 启动服务\"></a>2.5 启动服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-验证docker是否安装成功\"><a href=\"#3-验证docker是否安装成功\" class=\"headerlink\" title=\"3. 验证docker是否安装成功\"></a>3. 验证docker是否安装成功</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run --rm hello-world</span><br><span class=\"line\"></span><br><span class=\"line\">Unable to find image &apos;hello-world:latest&apos; locally</span><br><span class=\"line\"> latest: Pulling from library/hello-world</span><br><span class=\"line\"> c04b14da8d14: Pull complete</span><br><span class=\"line\"> Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9</span><br><span class=\"line\"> Status: Downloaded newer image for hello-world:latest</span><br><span class=\"line\"></span><br><span class=\"line\"> Hello from Docker!</span><br><span class=\"line\"> This message shows that your installation appears to be working correctly.</span><br><span class=\"line\"></span><br><span class=\"line\"> To generate this message, Docker took the following steps:</span><br><span class=\"line\">  1. The Docker client contacted the Docker daemon.</span><br><span class=\"line\">  2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class=\"line\">  3. The Docker daemon created a new container from that image which runs the</span><br><span class=\"line\">     executable that produces the output you are currently reading.</span><br><span class=\"line\">  4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class=\"line\">     to your terminal.</span><br><span class=\"line\"></span><br><span class=\"line\"> To try something more ambitious, you can run an Ubuntu container with:</span><br><span class=\"line\">  $ docker run -it ubuntu bash</span><br><span class=\"line\"></span><br><span class=\"line\"> Share images, automate workflows, and more with a free Docker Hub account:</span><br><span class=\"line\">  https://hub.docker.com</span><br><span class=\"line\"></span><br><span class=\"line\"> For more examples and ideas, visit:</span><br><span class=\"line\">  https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/docker/docker\" target=\"_blank\" rel=\"noopener\">docker on github</a><br><a href=\"https://docs.docker.com/engine/installation/\" target=\"_blank\" rel=\"noopener\">docker install mothed</a></p>\n"},{"title":"docker-registry","date":"2017-02-27T11:44:00.000Z","_content":"\n## 1. 启动registry\n```\ndocker run -d -p 5000:5000 --name registry registry\n```\n**说明**\n\n| 参数                      | 说明                                                    |  \n| -----                     | ------                                                  |\n| `-p 5000:5000`              | 第一个是host的端口，第二个是container的端口             |\n| `--name registry registry1` | registry是镜像名字，registry1是自定义的私有registry名字 |\n\n## 2. 测试私有仓库\n\n### 2.1 新pull一个镜像\n```\nsudo docker pull busybox\n```\n\n### 2.2 给镜像打个tag\n```\nsudo docker tag busybox xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n### 2.3 push到私有仓库\n```\nsudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n### 2.4 查看私有镜像仓库中的镜像\n```\ncurl http://xxx.xxx.xxx.xxx:5000/v2/_catalog\n```\n\n### 2.5 删除本地的镜像\n```\nsudo docker rmi xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n### 2.6 将刚才的删除的镜像，从私有镜像仓库pull回来\n```\nsudo docker pull xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n\n## 3. 报错及处理\n### 3.1 在本地push时，出现如下错误\n```\nsudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage\nThe push refers to a repository [xxx.xxx.xxx.xxx:5000/myfirstimage]\nGet https://xxx.xxx.xxx.xxx:5000/v1/_ping: http: server gave HTTP response to HTTPS client\n```\n**解决方案**\n1. 修改配置\n```\nsudo vi /etc/default/docker\n```\n2. 添加如下内容\n```\nDOCKER_OPTS=\"--insecure-registry xxx.xxx.xxx.xxx:5000\"\n```\n3. 重启docker服务\n```\nsudo service docker restart\n```\n4. 重新执行\n```\nsudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n","source":"_posts/docker-registry.md","raw":"---\ntitle: docker-registry\ndate: 2017-02-27 19:44:00\ntags: docker\n---\n\n## 1. 启动registry\n```\ndocker run -d -p 5000:5000 --name registry registry\n```\n**说明**\n\n| 参数                      | 说明                                                    |  \n| -----                     | ------                                                  |\n| `-p 5000:5000`              | 第一个是host的端口，第二个是container的端口             |\n| `--name registry registry1` | registry是镜像名字，registry1是自定义的私有registry名字 |\n\n## 2. 测试私有仓库\n\n### 2.1 新pull一个镜像\n```\nsudo docker pull busybox\n```\n\n### 2.2 给镜像打个tag\n```\nsudo docker tag busybox xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n### 2.3 push到私有仓库\n```\nsudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n### 2.4 查看私有镜像仓库中的镜像\n```\ncurl http://xxx.xxx.xxx.xxx:5000/v2/_catalog\n```\n\n### 2.5 删除本地的镜像\n```\nsudo docker rmi xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n### 2.6 将刚才的删除的镜像，从私有镜像仓库pull回来\n```\nsudo docker pull xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n\n## 3. 报错及处理\n### 3.1 在本地push时，出现如下错误\n```\nsudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage\nThe push refers to a repository [xxx.xxx.xxx.xxx:5000/myfirstimage]\nGet https://xxx.xxx.xxx.xxx:5000/v1/_ping: http: server gave HTTP response to HTTPS client\n```\n**解决方案**\n1. 修改配置\n```\nsudo vi /etc/default/docker\n```\n2. 添加如下内容\n```\nDOCKER_OPTS=\"--insecure-registry xxx.xxx.xxx.xxx:5000\"\n```\n3. 重启docker服务\n```\nsudo service docker restart\n```\n4. 重新执行\n```\nsudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage\n```\n\n","slug":"docker-registry","published":1,"updated":"2017-08-29T15:13:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsie0001x0s6ufsn5h5p","content":"<h2 id=\"1-启动registry\"><a href=\"#1-启动registry\" class=\"headerlink\" title=\"1. 启动registry\"></a>1. 启动registry</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 5000:5000 --name registry registry</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p 5000:5000</code></td>\n<td>第一个是host的端口，第二个是container的端口</td>\n</tr>\n<tr>\n<td><code>--name registry registry1</code></td>\n<td>registry是镜像名字，registry1是自定义的私有registry名字</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-测试私有仓库\"><a href=\"#2-测试私有仓库\" class=\"headerlink\" title=\"2. 测试私有仓库\"></a>2. 测试私有仓库</h2><h3 id=\"2-1-新pull一个镜像\"><a href=\"#2-1-新pull一个镜像\" class=\"headerlink\" title=\"2.1 新pull一个镜像\"></a>2.1 新pull一个镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull busybox</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-给镜像打个tag\"><a href=\"#2-2-给镜像打个tag\" class=\"headerlink\" title=\"2.2 给镜像打个tag\"></a>2.2 给镜像打个tag</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker tag busybox xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-push到私有仓库\"><a href=\"#2-3-push到私有仓库\" class=\"headerlink\" title=\"2.3 push到私有仓库\"></a>2.3 push到私有仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-查看私有镜像仓库中的镜像\"><a href=\"#2-4-查看私有镜像仓库中的镜像\" class=\"headerlink\" title=\"2.4 查看私有镜像仓库中的镜像\"></a>2.4 查看私有镜像仓库中的镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://xxx.xxx.xxx.xxx:5000/v2/_catalog</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-删除本地的镜像\"><a href=\"#2-5-删除本地的镜像\" class=\"headerlink\" title=\"2.5 删除本地的镜像\"></a>2.5 删除本地的镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker rmi xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-将刚才的删除的镜像，从私有镜像仓库pull回来\"><a href=\"#2-6-将刚才的删除的镜像，从私有镜像仓库pull回来\" class=\"headerlink\" title=\"2.6 将刚才的删除的镜像，从私有镜像仓库pull回来\"></a>2.6 将刚才的删除的镜像，从私有镜像仓库pull回来</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-报错及处理\"><a href=\"#3-报错及处理\" class=\"headerlink\" title=\"3. 报错及处理\"></a>3. 报错及处理</h2><h3 id=\"3-1-在本地push时，出现如下错误\"><a href=\"#3-1-在本地push时，出现如下错误\" class=\"headerlink\" title=\"3.1 在本地push时，出现如下错误\"></a>3.1 在本地push时，出现如下错误</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage</span><br><span class=\"line\">The push refers to a repository [xxx.xxx.xxx.xxx:5000/myfirstimage]</span><br><span class=\"line\">Get https://xxx.xxx.xxx.xxx:5000/v1/_ping: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure>\n<p><strong>解决方案</strong></p>\n<ol>\n<li><p>修改配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;--insecure-registry xxx.xxx.xxx.xxx:5000&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-启动registry\"><a href=\"#1-启动registry\" class=\"headerlink\" title=\"1. 启动registry\"></a>1. 启动registry</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 5000:5000 --name registry registry</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p 5000:5000</code></td>\n<td>第一个是host的端口，第二个是container的端口</td>\n</tr>\n<tr>\n<td><code>--name registry registry1</code></td>\n<td>registry是镜像名字，registry1是自定义的私有registry名字</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-测试私有仓库\"><a href=\"#2-测试私有仓库\" class=\"headerlink\" title=\"2. 测试私有仓库\"></a>2. 测试私有仓库</h2><h3 id=\"2-1-新pull一个镜像\"><a href=\"#2-1-新pull一个镜像\" class=\"headerlink\" title=\"2.1 新pull一个镜像\"></a>2.1 新pull一个镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull busybox</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-给镜像打个tag\"><a href=\"#2-2-给镜像打个tag\" class=\"headerlink\" title=\"2.2 给镜像打个tag\"></a>2.2 给镜像打个tag</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker tag busybox xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-push到私有仓库\"><a href=\"#2-3-push到私有仓库\" class=\"headerlink\" title=\"2.3 push到私有仓库\"></a>2.3 push到私有仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-查看私有镜像仓库中的镜像\"><a href=\"#2-4-查看私有镜像仓库中的镜像\" class=\"headerlink\" title=\"2.4 查看私有镜像仓库中的镜像\"></a>2.4 查看私有镜像仓库中的镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://xxx.xxx.xxx.xxx:5000/v2/_catalog</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-删除本地的镜像\"><a href=\"#2-5-删除本地的镜像\" class=\"headerlink\" title=\"2.5 删除本地的镜像\"></a>2.5 删除本地的镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker rmi xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-将刚才的删除的镜像，从私有镜像仓库pull回来\"><a href=\"#2-6-将刚才的删除的镜像，从私有镜像仓库pull回来\" class=\"headerlink\" title=\"2.6 将刚才的删除的镜像，从私有镜像仓库pull回来\"></a>2.6 将刚才的删除的镜像，从私有镜像仓库pull回来</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-报错及处理\"><a href=\"#3-报错及处理\" class=\"headerlink\" title=\"3. 报错及处理\"></a>3. 报错及处理</h2><h3 id=\"3-1-在本地push时，出现如下错误\"><a href=\"#3-1-在本地push时，出现如下错误\" class=\"headerlink\" title=\"3.1 在本地push时，出现如下错误\"></a>3.1 在本地push时，出现如下错误</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage</span><br><span class=\"line\">The push refers to a repository [xxx.xxx.xxx.xxx:5000/myfirstimage]</span><br><span class=\"line\">Get https://xxx.xxx.xxx.xxx:5000/v1/_ping: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure>\n<p><strong>解决方案</strong></p>\n<ol>\n<li><p>修改配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>添加如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DOCKER_OPTS=&quot;--insecure-registry xxx.xxx.xxx.xxx:5000&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker restart</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push xxx.xxx.xxx.xxx:5000/myfirstimage</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"docker镜像","date":"2017-02-27T09:15:33.000Z","_content":"\n## 1. 获取镜像\n```\nsudo docker pull 镜像名\n```\n例：从Docker Hub仓库下载一个Ubuntu 12.04的操作系统的镜像\n```\nubuntu@ubuntu:~$ sudo docker pull ubuntu:12.04\n12.04: Pulling from ubuntu\n\n8941035ae797: Pull complete \n191c4e1e4400: Pull complete \nfd04a9dc157f: Pull complete \nbe08d59fa177: Pull complete \necf8c2069900: Pull complete \n8ea067ad7a27: Pull complete \nDigest: sha256:57a83f4b4f43f2d008c8ceaa9663a6f7ecd061fefa80da8f32e0f22c7b923390\nStatus: Downloaded newer image for ubuntu:12.04\n```\n\n## 2. 显示本地镜像\n```\nsudo docker images\n```\n\n```\nubuntu@ubuntu:~$ sudo docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu              12.04               8ea067ad7a27        4 weeks ago         103.6 MB\n```\n\n## 3. 创建镜像\n\n### 3.1 修改已有的镜像\n\n- 使用下载的镜像启动一个容器\n```\nsudo docker run -t -i 镜像名 /bin/bash\n```\n例： 使用镜像ubuntu:12.04来启动一个容器\n```\nubuntu@ubuntu:~$ sudo docker run -t -i ubuntu:12.04 /bin/bash\nroot@c2b59b70c1b7:/# pwd\n/\nroot@f93c7537832d:/# ls\nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var\nroot@f93c7537832d:/# ps \n  PID TTY          TIME CMD\n    1 ?        00:00:00 bash\n   12 ?        00:00:00 ps\n```\n- 在容器中对安装软件\n结束操作后，执行`exit`来退出。\n\n- 提交更新后的副本\n```\nsudo docker commit -m \"提交说明\" -a 指定更新的用户信息 用来创建镜像的容器的ID 指定目标镜像的仓库名和tag信息\n```\n创建成功后会返回这个镜像的ID信息\n例：\n```\nsudo docker commit -m \"Add node\" -a \"username\" aeee120a81fc testnode \n\nsudo docker images 查看新创建的镜像\nsudo docker run -t -i testnode /bin/bash  使用新创建的镜像启动容器\n```\n\n### 3.2 使用Dockerfile来创建镜像\ntodo\n\n### 3.3 从本地导入\n```\nsudo cat ubuntu-14.04.tar.gz | docker import - ubuntu:14.04\nsudo docker images\n```\n\n### 3.4 上传镜像\n用户在Docker Hub上完成注册后，可以可以通过`docker push`命令，把自己创建的镜像上传到docker的公共仓库来共享。\n```\nsudo docker push 镜像名\n```\n\n## 4. 存出镜像\n```\nsudo docker images\nsudo docker save -o 保存文件名 镜像名\n```\n\n## 5. 载入镜像\n可以使用`docker load`从导出的本地文件中再导入到本地镜像库。\n```\nsudo docker load --input ubuntu_14.04.tar\n```\n或\n```\nsudo docker load < ubuntu_14.04.tar\n```\n这将导入镜像以及相关的元数据信息（包括标签等）\n\n\n## 6. 删除本地镜像\n```\nsudo docker rmi IMAGE_ID\n```\n","source":"_posts/docker镜像.md","raw":"---\ntitle: docker镜像\ndate: 2017-02-27 17:15:33\ntags: docker\n---\n\n## 1. 获取镜像\n```\nsudo docker pull 镜像名\n```\n例：从Docker Hub仓库下载一个Ubuntu 12.04的操作系统的镜像\n```\nubuntu@ubuntu:~$ sudo docker pull ubuntu:12.04\n12.04: Pulling from ubuntu\n\n8941035ae797: Pull complete \n191c4e1e4400: Pull complete \nfd04a9dc157f: Pull complete \nbe08d59fa177: Pull complete \necf8c2069900: Pull complete \n8ea067ad7a27: Pull complete \nDigest: sha256:57a83f4b4f43f2d008c8ceaa9663a6f7ecd061fefa80da8f32e0f22c7b923390\nStatus: Downloaded newer image for ubuntu:12.04\n```\n\n## 2. 显示本地镜像\n```\nsudo docker images\n```\n\n```\nubuntu@ubuntu:~$ sudo docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu              12.04               8ea067ad7a27        4 weeks ago         103.6 MB\n```\n\n## 3. 创建镜像\n\n### 3.1 修改已有的镜像\n\n- 使用下载的镜像启动一个容器\n```\nsudo docker run -t -i 镜像名 /bin/bash\n```\n例： 使用镜像ubuntu:12.04来启动一个容器\n```\nubuntu@ubuntu:~$ sudo docker run -t -i ubuntu:12.04 /bin/bash\nroot@c2b59b70c1b7:/# pwd\n/\nroot@f93c7537832d:/# ls\nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var\nroot@f93c7537832d:/# ps \n  PID TTY          TIME CMD\n    1 ?        00:00:00 bash\n   12 ?        00:00:00 ps\n```\n- 在容器中对安装软件\n结束操作后，执行`exit`来退出。\n\n- 提交更新后的副本\n```\nsudo docker commit -m \"提交说明\" -a 指定更新的用户信息 用来创建镜像的容器的ID 指定目标镜像的仓库名和tag信息\n```\n创建成功后会返回这个镜像的ID信息\n例：\n```\nsudo docker commit -m \"Add node\" -a \"username\" aeee120a81fc testnode \n\nsudo docker images 查看新创建的镜像\nsudo docker run -t -i testnode /bin/bash  使用新创建的镜像启动容器\n```\n\n### 3.2 使用Dockerfile来创建镜像\ntodo\n\n### 3.3 从本地导入\n```\nsudo cat ubuntu-14.04.tar.gz | docker import - ubuntu:14.04\nsudo docker images\n```\n\n### 3.4 上传镜像\n用户在Docker Hub上完成注册后，可以可以通过`docker push`命令，把自己创建的镜像上传到docker的公共仓库来共享。\n```\nsudo docker push 镜像名\n```\n\n## 4. 存出镜像\n```\nsudo docker images\nsudo docker save -o 保存文件名 镜像名\n```\n\n## 5. 载入镜像\n可以使用`docker load`从导出的本地文件中再导入到本地镜像库。\n```\nsudo docker load --input ubuntu_14.04.tar\n```\n或\n```\nsudo docker load < ubuntu_14.04.tar\n```\n这将导入镜像以及相关的元数据信息（包括标签等）\n\n\n## 6. 删除本地镜像\n```\nsudo docker rmi IMAGE_ID\n```\n","slug":"docker镜像","published":1,"updated":"2017-03-13T13:34:57.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsij0003x0s6046rr9zs","content":"<h2 id=\"1-获取镜像\"><a href=\"#1-获取镜像\" class=\"headerlink\" title=\"1. 获取镜像\"></a>1. 获取镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull 镜像名</span><br></pre></td></tr></table></figure>\n<p>例：从Docker Hub仓库下载一个Ubuntu 12.04的操作系统的镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker pull ubuntu:12.04</span><br><span class=\"line\">12.04: Pulling from ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\">8941035ae797: Pull complete </span><br><span class=\"line\">191c4e1e4400: Pull complete </span><br><span class=\"line\">fd04a9dc157f: Pull complete </span><br><span class=\"line\">be08d59fa177: Pull complete </span><br><span class=\"line\">ecf8c2069900: Pull complete </span><br><span class=\"line\">8ea067ad7a27: Pull complete </span><br><span class=\"line\">Digest: sha256:57a83f4b4f43f2d008c8ceaa9663a6f7ecd061fefa80da8f32e0f22c7b923390</span><br><span class=\"line\">Status: Downloaded newer image for ubuntu:12.04</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-显示本地镜像\"><a href=\"#2-显示本地镜像\" class=\"headerlink\" title=\"2. 显示本地镜像\"></a>2. 显示本地镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker images</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker images</span><br><span class=\"line\">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class=\"line\">ubuntu              12.04               8ea067ad7a27        4 weeks ago         103.6 MB</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-创建镜像\"><a href=\"#3-创建镜像\" class=\"headerlink\" title=\"3. 创建镜像\"></a>3. 创建镜像</h2><h3 id=\"3-1-修改已有的镜像\"><a href=\"#3-1-修改已有的镜像\" class=\"headerlink\" title=\"3.1 修改已有的镜像\"></a>3.1 修改已有的镜像</h3><ul>\n<li>使用下载的镜像启动一个容器<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -t -i 镜像名 /bin/bash</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>例： 使用镜像ubuntu:12.04来启动一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker run -t -i ubuntu:12.04 /bin/bash</span><br><span class=\"line\">root@c2b59b70c1b7:/# pwd</span><br><span class=\"line\">/</span><br><span class=\"line\">root@f93c7537832d:/# ls</span><br><span class=\"line\">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var</span><br><span class=\"line\">root@f93c7537832d:/# ps </span><br><span class=\"line\">  PID TTY          TIME CMD</span><br><span class=\"line\">    1 ?        00:00:00 bash</span><br><span class=\"line\">   12 ?        00:00:00 ps</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>在容器中对安装软件<br>结束操作后，执行<code>exit</code>来退出。</p>\n</li>\n<li><p>提交更新后的副本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker commit -m &quot;提交说明&quot; -a 指定更新的用户信息 用来创建镜像的容器的ID 指定目标镜像的仓库名和tag信息</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>创建成功后会返回这个镜像的ID信息<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker commit -m &quot;Add node&quot; -a &quot;username&quot; aeee120a81fc testnode </span><br><span class=\"line\"></span><br><span class=\"line\">sudo docker images 查看新创建的镜像</span><br><span class=\"line\">sudo docker run -t -i testnode /bin/bash  使用新创建的镜像启动容器</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-2-使用Dockerfile来创建镜像\"><a href=\"#3-2-使用Dockerfile来创建镜像\" class=\"headerlink\" title=\"3.2 使用Dockerfile来创建镜像\"></a>3.2 使用Dockerfile来创建镜像</h3><p>todo</p>\n<h3 id=\"3-3-从本地导入\"><a href=\"#3-3-从本地导入\" class=\"headerlink\" title=\"3.3 从本地导入\"></a>3.3 从本地导入</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cat ubuntu-14.04.tar.gz | docker import - ubuntu:14.04</span><br><span class=\"line\">sudo docker images</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-上传镜像\"><a href=\"#3-4-上传镜像\" class=\"headerlink\" title=\"3.4 上传镜像\"></a>3.4 上传镜像</h3><p>用户在Docker Hub上完成注册后，可以可以通过<code>docker push</code>命令，把自己创建的镜像上传到docker的公共仓库来共享。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push 镜像名</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-存出镜像\"><a href=\"#4-存出镜像\" class=\"headerlink\" title=\"4. 存出镜像\"></a>4. 存出镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker images</span><br><span class=\"line\">sudo docker save -o 保存文件名 镜像名</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-载入镜像\"><a href=\"#5-载入镜像\" class=\"headerlink\" title=\"5. 载入镜像\"></a>5. 载入镜像</h2><p>可以使用<code>docker load</code>从导出的本地文件中再导入到本地镜像库。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker load --input ubuntu_14.04.tar</span><br></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker load &lt; ubuntu_14.04.tar</span><br></pre></td></tr></table></figure></p>\n<p>这将导入镜像以及相关的元数据信息（包括标签等）</p>\n<h2 id=\"6-删除本地镜像\"><a href=\"#6-删除本地镜像\" class=\"headerlink\" title=\"6. 删除本地镜像\"></a>6. 删除本地镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker rmi IMAGE_ID</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-获取镜像\"><a href=\"#1-获取镜像\" class=\"headerlink\" title=\"1. 获取镜像\"></a>1. 获取镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker pull 镜像名</span><br></pre></td></tr></table></figure>\n<p>例：从Docker Hub仓库下载一个Ubuntu 12.04的操作系统的镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker pull ubuntu:12.04</span><br><span class=\"line\">12.04: Pulling from ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\">8941035ae797: Pull complete </span><br><span class=\"line\">191c4e1e4400: Pull complete </span><br><span class=\"line\">fd04a9dc157f: Pull complete </span><br><span class=\"line\">be08d59fa177: Pull complete </span><br><span class=\"line\">ecf8c2069900: Pull complete </span><br><span class=\"line\">8ea067ad7a27: Pull complete </span><br><span class=\"line\">Digest: sha256:57a83f4b4f43f2d008c8ceaa9663a6f7ecd061fefa80da8f32e0f22c7b923390</span><br><span class=\"line\">Status: Downloaded newer image for ubuntu:12.04</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-显示本地镜像\"><a href=\"#2-显示本地镜像\" class=\"headerlink\" title=\"2. 显示本地镜像\"></a>2. 显示本地镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker images</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker images</span><br><span class=\"line\">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class=\"line\">ubuntu              12.04               8ea067ad7a27        4 weeks ago         103.6 MB</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-创建镜像\"><a href=\"#3-创建镜像\" class=\"headerlink\" title=\"3. 创建镜像\"></a>3. 创建镜像</h2><h3 id=\"3-1-修改已有的镜像\"><a href=\"#3-1-修改已有的镜像\" class=\"headerlink\" title=\"3.1 修改已有的镜像\"></a>3.1 修改已有的镜像</h3><ul>\n<li>使用下载的镜像启动一个容器<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -t -i 镜像名 /bin/bash</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>例： 使用镜像ubuntu:12.04来启动一个容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker run -t -i ubuntu:12.04 /bin/bash</span><br><span class=\"line\">root@c2b59b70c1b7:/# pwd</span><br><span class=\"line\">/</span><br><span class=\"line\">root@f93c7537832d:/# ls</span><br><span class=\"line\">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var</span><br><span class=\"line\">root@f93c7537832d:/# ps </span><br><span class=\"line\">  PID TTY          TIME CMD</span><br><span class=\"line\">    1 ?        00:00:00 bash</span><br><span class=\"line\">   12 ?        00:00:00 ps</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>在容器中对安装软件<br>结束操作后，执行<code>exit</code>来退出。</p>\n</li>\n<li><p>提交更新后的副本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker commit -m &quot;提交说明&quot; -a 指定更新的用户信息 用来创建镜像的容器的ID 指定目标镜像的仓库名和tag信息</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>创建成功后会返回这个镜像的ID信息<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker commit -m &quot;Add node&quot; -a &quot;username&quot; aeee120a81fc testnode </span><br><span class=\"line\"></span><br><span class=\"line\">sudo docker images 查看新创建的镜像</span><br><span class=\"line\">sudo docker run -t -i testnode /bin/bash  使用新创建的镜像启动容器</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-2-使用Dockerfile来创建镜像\"><a href=\"#3-2-使用Dockerfile来创建镜像\" class=\"headerlink\" title=\"3.2 使用Dockerfile来创建镜像\"></a>3.2 使用Dockerfile来创建镜像</h3><p>todo</p>\n<h3 id=\"3-3-从本地导入\"><a href=\"#3-3-从本地导入\" class=\"headerlink\" title=\"3.3 从本地导入\"></a>3.3 从本地导入</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cat ubuntu-14.04.tar.gz | docker import - ubuntu:14.04</span><br><span class=\"line\">sudo docker images</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-4-上传镜像\"><a href=\"#3-4-上传镜像\" class=\"headerlink\" title=\"3.4 上传镜像\"></a>3.4 上传镜像</h3><p>用户在Docker Hub上完成注册后，可以可以通过<code>docker push</code>命令，把自己创建的镜像上传到docker的公共仓库来共享。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker push 镜像名</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-存出镜像\"><a href=\"#4-存出镜像\" class=\"headerlink\" title=\"4. 存出镜像\"></a>4. 存出镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker images</span><br><span class=\"line\">sudo docker save -o 保存文件名 镜像名</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-载入镜像\"><a href=\"#5-载入镜像\" class=\"headerlink\" title=\"5. 载入镜像\"></a>5. 载入镜像</h2><p>可以使用<code>docker load</code>从导出的本地文件中再导入到本地镜像库。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker load --input ubuntu_14.04.tar</span><br></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker load &lt; ubuntu_14.04.tar</span><br></pre></td></tr></table></figure></p>\n<p>这将导入镜像以及相关的元数据信息（包括标签等）</p>\n<h2 id=\"6-删除本地镜像\"><a href=\"#6-删除本地镜像\" class=\"headerlink\" title=\"6. 删除本地镜像\"></a>6. 删除本地镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker rmi IMAGE_ID</span><br></pre></td></tr></table></figure>\n"},{"title":"ceph","date":"2017-03-13T13:13:03.000Z","_content":"# ceph的搭建\n\n**注** 如果在安装过程中，想要重新安装，需要执行如下命令清除\n```\nsudo stop ceph-all  #停止所有CEPH进程\nceph-deploy uninstall  [{ceph-node}]   #卸载所有ceph程序\nceph-deploy purge   [[ceph-node} [{ceph-node}] #删除ceph相关的包\nceph-deploy purgedata {ceph-node} [{ceph-node}]   #删除ceph相关的包\nceph-deploy forgetkeys #删除key  \n```\n\n## 1. 安装前准备\n### 1.1 添加hosts解析\n```\nsudo vi /etc/hosts\n\n# 添加如下内容\n192.168.1.174\tnode1\n192.168.1.175\tnode2\n```\n**注:  <font color=red>node1 node2必须为hostname，因为在安装过程中会验证hostname是否为node{1,2}\n遇到这个错误，需要完全清理ceph软件和配置数据，从头再来\n</font>**\n\n\n### 1.2 免密码登录\n```\n# 生成密钥对\nssh-keygen -t rsa\n\n# admin节点需要通过密钥对登录到其他节点\nssh-copy-id ceph@node1\nssh-copy-id ceph@node2\n```\n\n在**每个Ceph节点**中为用户增加 root 权限\n```\necho \"ceph ALL = (root) NOPASSWD:ALL\" | sudo tee /etc/sudoers.d/ceph\nsudo chmod 0440 /etc/sudoers.d/ceph\n```\n\n### 1.3 安装ceph-deploy软件\n\n```\nwget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add -\n\n# 添加Ceph软件包源，用Ceph稳定版（如cuttlefish 、 dumpling 、 emperor 、 firefly 等等）替换掉 {ceph-stable-release}\n# echo deb http://download.ceph.com/debian-{ceph-stable-release}/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list\n# 例如：\necho deb http://download.ceph.com/debian-dumpling/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list\nsudo apt-get update\nsudo apt-get install ceph-deploy\n```\n\n## 2. 创建ceph目录\n\n我们使用ceph-deploy部署，**后续操作均在admin节点操作**。\n首先需要创建工作环境，该环境会保存所有的配置文件：\n```\nmkdir opt/ceph\ncd opt/ceph\n```\n\n## 3. 创建集群\n\n```\nceph@node1:~/opt/ceph$ ceph-deploy new node1\n```\n其中node1是mon节点，执行该命令会生成ceph配置文件、monitor密钥文件以及日志文件。\n```\nceph@node1:~/opt/ceph$ ls\nceph.conf  ceph.log  ceph.mon.keyring\n```\n\n## 4. 修改默认冗余份数\n\n### 4.1 设置osd冗余份数\n由于我们目前只有两个osd节点，而默认的冗余份数是3，因此我们需要设置为2，如果osd节点大于2，则此步骤省略。\n修改ceph.conf文件，在[global]下增加以下内容：\n```\nceph@node1:~/opt/ceph$ echo \"osd pool default size = 2\" >> ceph.conf\n```\n**如果有多块网卡需要配置使用哪块网卡**\n```\nmon_host = `对应网卡的IP地址`\n```\n\n### 4.2 在节点上安装ceph软件\n```\nceph@node1:~/opt/ceph$ ceph-deploy install node1 node2\n```\n如果失败会报如下错误\n```\n[node1][ERROR ] RuntimeError: command returned non-zero exit status: 100\n[ceph_deploy][ERROR ] RuntimeError: Failed to execute command: apt-get -q update\n```\n**解决方法**\n- 1.同步配置\n```\nceph@node1:~/opt/ceph$ rsync -avz ../ceph ceph@node2:~/opt/\n```\n- 2.在<font color=red>所有节点</font>分别安装ceph\n```\nceph@node1:~/opt/ceph$ sudo apt-get install ceph\n```\n\n## 5. 初始化mon节点和收集密钥信息\n```\nceph@node1:~/opt/ceph$ ceph-deploy mon create-initial\n```\n如果报如下错误\n```\n[node1][DEBUG ] get remote short hostname\n[node1][WARNIN] ********************************************************************************\n[node1][WARNIN] provided hostname must match remote hostname\n[node1][WARNIN] provided hostname: node1\n[node1][WARNIN] remote hostname: ubuntu\n[node1][WARNIN] monitors may not reach quorum and create-keys will not complete\n```\n因为/etc/hosts中解析的`ip地址 主机名`和远端的主机名不匹配所致，在/etc/hosts中修改为正确的hostname，清理下从头重新安装。\n\n执行完毕，目录应该有以下文件：\n```\n{cluster-name}.client.admin.keyring\n{cluster-name}.bootstrap-osd.keyring\n{cluster-name}.bootstrap-mds.keyring\n{cluster-name}.bootstrap-rgw.keyring\n```\n\n## 6. 配置osd节点\n首先格式化磁盘，注意我们使用的是/dev/sdb：\n```\nceph@node1:~/opt/ceph$ ceph-deploy disk zap node1:sdb\nceph@node1:~/opt/ceph$ ceph-deploy disk zap node2:sdb\n```\n以上步骤会<font color=red>清空磁盘的所有数据</font>。\n\n接下来创建osd，注意由于我们只是测试，故没有使用单独的磁盘作为journal\n(todo分析具体什么)\n实际在生产环境下，需要配备SSD分区作为journal，能够最大化IO吞吐量。\n```\nceph@node1:~/opt/ceph$ ceph-deploy osd create node1:sdb\nceph@node1:~/opt/ceph$ ceph-deploy osd create node2:sdb\n```\n在节点上执行`df -h`会得到如下结果\n```\n/dev/sdb1        35G   36M   35G   1% /var/lib/ceph/osd/ceph-0\n```\n\n\n## 7. 配置admin节点\nadmin节点同时也作为我们的client节点，需要拷贝其他节点的配置文件以及密钥，使得不需要指定mon地址以及用户信息就可以直接管理我们的ceph集群，执行以下命令即可：\n```\nceph@node1:~/opt/ceph$ ceph-deploy admin node1 node2\nceph@node1:~/opt/ceph$ sudo chmod +r /etc/ceph/ceph.client.admin.keyring # 保证具有读取的密钥的权限\n```\n\n## 8. 测试结果\n\n运行以下命令：\n```\nceph@node1:~/opt/ceph$ ceph health\nceph@node1:~/opt/ceph$ ceph -s\n```\n结果若返回active + clean状态，则说明部署成功！\n\n\n## 9. 配置mds\n[Adding MDS参考链接](http://docs.ceph.com/docs/master/install/manual-deployment/#adding-mds)\n### 9.1 安装mds\n```\nceph@node1:~/opt/ceph$ sudo apt-get install ceph-mds\n```\n\n### 9.2 配置\n{id}是一个任意的名字,例如可以是电脑的主机名\n\n编辑`ceph.conf`，添加MDS区域\n```\n[mds]\n  mds data = /var/lib/ceph/mds/mds.$id\n  keyring = /var/lib/ceph/mds/mds.$id/mds.$id.keyring\n\n[mds.0] # 0为id\n  host = 0 # {id}\n```\n\n### 9.3 创建目录\n```\nceph@node1:~/opt/ceph$ mkdir -p /var/lib/ceph/mds/{cluster-name}-{id}\n```\n\n### 9.4 生成keyring\n```\nceph@node1:~/opt/ceph$ ceph-authtool --create-keyring /var/lib/ceph/mds/{cluster-name}-{id}/keyring --gen-key -n mds.{id}\n```\n\nImport the keyring and set caps.:\n\n### 9.5 导入keyring\n```\nceph@node1:~/opt/ceph$ ceph auth add mds.{id} osd \"allow rwx\" mds \"allow\" mon \"allow profile mds\" -i /var/lib/ceph/mds/{cluster}-{id}/keyring\n```\n### 9.6 修改配置文件\nAdd to ceph.conf.:\n```\n[mds.{id}]\nhost = {id}\n```\n### 9.7 手动启动\nStart the daemon the manual way.:\n```\nceph@node1:~/opt/ceph$ ceph-mds --cluster {cluster-name} -i {id} -m {mon-hostname}:{mon-port} [-f]\n```\n```\nceph@node1:~/opt/ceph$ service ceph start\nceph@node1:~/opt/ceph$ sudo service ceph start mds\n```\n检查进程是否存在\n```\nceph@node1:~/opt/ceph$ ps -ef | grep ceph\nroot      4032     1  0 17:18 ?        00:00:00 /usr/bin/ceph-mon --cluster=ceph -i node1 -f\nroot      4687     1  0 17:19 ?        00:00:04 /usr/bin/ceph-osd --cluster=ceph -i 0 -f\nroot      5196     1  0 17:23 ?        00:00:00 ceph-mds --cluster mds -i 0 -m 192.168.1.176:6789\n```\n如果已经存在，下面步骤跳过，直接执行第10步的挂载\n\n如果mds起不来，可以执行如下命令，查看具体报错信息\n```\nceph@node1:~/opt/ceph$ sudo ceph-mds --cluster node1 -i 0 -m 192.168.1.176:6789 -f\nstarting mds.0 at :/0\n2017-03-13 15:15:49.485908 7f32b07bb800 -1 did not load config file, using default settings.\n2017-03-13 15:15:49.488414 7f32b07bb800 -1 monclient(hunting): ERROR: missing keyring, cannot use cephx for authentication\n2017-03-13 15:15:49.490934 7f32b07bb800 -1 mds.-1.0 ERROR: failed to authenticate: (95) Operation not supported\n```\n\n> If starting the daemon fails with this error:\n> mds.-1.0 ERROR: failed to authenticate: (22) Invalid argument\n> Then make sure you do not have a keyring set in ceph.conf in the global section; move it to the client section; or add a keyring setting specific to this mds daemon. And verify that you see the same key in the mds data directory and ceph auth get mds.{id} output.\n\n** 检查步骤 **  \n查看如下结果是否一致\n```\nceph@node1:~/opt/ceph$ ceph auth get mds.0\nexported keyring for mds.0\n[mds.0]\n        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==\n        caps mds = \"allow\"\n        caps mon = \"allow profile mds\"\n        caps osd = \"allow rwx\"\n\n\nceph@node1:~/opt/ceph$ cat /var/lib/ceph/mds/mds-0/keyring\n[mds.0]\n        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==\n```\n\n如果仍然报如上错误，可以尝试\n```\nceph@node1:~/opt/ceph$ sudo chown -R ceph:ceph /var/lib/ceph/mds/mds-0\n```\n重新生成认证文件应该就会成功,<font color=red>不过不确定对后续操作的影响</font>\n\n[也可以尝试这里的步骤，不过不保证会好使](https://www.sebastien-han.fr/blog/2013/05/13/deploy-a-ceph-mds-server/)\n\n\nNow you are ready to create a Ceph filesystem.\n\n## 10. 挂载\n\n```\nceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs\nceph@node1:~/opt/ceph$ sudo ceph-fuse -m {ip-address-of-monitor}:6789 /mnt/cephfs\nceph@node1:~/opt/ceph$ df -h\n```\n\n在node2上执行 安装ceph-fuse\n```\nceph@node1:~/opt/ceph$ sudo apt-get install ceph-fuse\nceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs\nceph@node1:~/opt/ceph$ sudo ceph-fuse -m {ip-address-of-monitor}:6789 /mnt/cephfs\nceph@node1:~/opt/ceph$ df -h\n```\n\n## 11. 注意事项\n<font color=red>用户ceph不能够锁定，为了安全问题，只能将用户ceph改为nologin</font>\n \n## 12. 服务器重启\n服务器重启后，对于mon节点来说`osd`和`mon`会自动启动\nosd节点的osd服务也会自动启动\n \n mon节点的`mds`服务需要手动启动，启动方法为\n ```\n sudo ceph-mds --cluster {cluster-name} -i {id} -m {mon-hostname}:{mon-port} [-f]\n ```\n **另**\n 启动完mds后还需要执行挂载命令\n ```\n sudo ceph-fuse -m {ip-address-of-monitor}:6789 /mnt/cephfs\n ```\n 可以将以上命令**放入到开机启动项中**，但是服务器重启完成后要进行检查ceph的运行状态\n `ceph -s`或者`ps -ef | grep ceph` 或者 通过`df -h`查看ceph-fuse是否成功挂载目录\n 如果长时间没成功，并且`ceph -s`报错，可以尝试将另一节点node2也重启，node1可以成功挂载。\n\n","source":"_posts/ceph.md","raw":"---\ntitle: ceph\ndate: 2017-03-13 21:13:03\ncategories: ceph\ntags: ceph\n---\n# ceph的搭建\n\n**注** 如果在安装过程中，想要重新安装，需要执行如下命令清除\n```\nsudo stop ceph-all  #停止所有CEPH进程\nceph-deploy uninstall  [{ceph-node}]   #卸载所有ceph程序\nceph-deploy purge   [[ceph-node} [{ceph-node}] #删除ceph相关的包\nceph-deploy purgedata {ceph-node} [{ceph-node}]   #删除ceph相关的包\nceph-deploy forgetkeys #删除key  \n```\n\n## 1. 安装前准备\n### 1.1 添加hosts解析\n```\nsudo vi /etc/hosts\n\n# 添加如下内容\n192.168.1.174\tnode1\n192.168.1.175\tnode2\n```\n**注:  <font color=red>node1 node2必须为hostname，因为在安装过程中会验证hostname是否为node{1,2}\n遇到这个错误，需要完全清理ceph软件和配置数据，从头再来\n</font>**\n\n\n### 1.2 免密码登录\n```\n# 生成密钥对\nssh-keygen -t rsa\n\n# admin节点需要通过密钥对登录到其他节点\nssh-copy-id ceph@node1\nssh-copy-id ceph@node2\n```\n\n在**每个Ceph节点**中为用户增加 root 权限\n```\necho \"ceph ALL = (root) NOPASSWD:ALL\" | sudo tee /etc/sudoers.d/ceph\nsudo chmod 0440 /etc/sudoers.d/ceph\n```\n\n### 1.3 安装ceph-deploy软件\n\n```\nwget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add -\n\n# 添加Ceph软件包源，用Ceph稳定版（如cuttlefish 、 dumpling 、 emperor 、 firefly 等等）替换掉 {ceph-stable-release}\n# echo deb http://download.ceph.com/debian-{ceph-stable-release}/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list\n# 例如：\necho deb http://download.ceph.com/debian-dumpling/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list\nsudo apt-get update\nsudo apt-get install ceph-deploy\n```\n\n## 2. 创建ceph目录\n\n我们使用ceph-deploy部署，**后续操作均在admin节点操作**。\n首先需要创建工作环境，该环境会保存所有的配置文件：\n```\nmkdir opt/ceph\ncd opt/ceph\n```\n\n## 3. 创建集群\n\n```\nceph@node1:~/opt/ceph$ ceph-deploy new node1\n```\n其中node1是mon节点，执行该命令会生成ceph配置文件、monitor密钥文件以及日志文件。\n```\nceph@node1:~/opt/ceph$ ls\nceph.conf  ceph.log  ceph.mon.keyring\n```\n\n## 4. 修改默认冗余份数\n\n### 4.1 设置osd冗余份数\n由于我们目前只有两个osd节点，而默认的冗余份数是3，因此我们需要设置为2，如果osd节点大于2，则此步骤省略。\n修改ceph.conf文件，在[global]下增加以下内容：\n```\nceph@node1:~/opt/ceph$ echo \"osd pool default size = 2\" >> ceph.conf\n```\n**如果有多块网卡需要配置使用哪块网卡**\n```\nmon_host = `对应网卡的IP地址`\n```\n\n### 4.2 在节点上安装ceph软件\n```\nceph@node1:~/opt/ceph$ ceph-deploy install node1 node2\n```\n如果失败会报如下错误\n```\n[node1][ERROR ] RuntimeError: command returned non-zero exit status: 100\n[ceph_deploy][ERROR ] RuntimeError: Failed to execute command: apt-get -q update\n```\n**解决方法**\n- 1.同步配置\n```\nceph@node1:~/opt/ceph$ rsync -avz ../ceph ceph@node2:~/opt/\n```\n- 2.在<font color=red>所有节点</font>分别安装ceph\n```\nceph@node1:~/opt/ceph$ sudo apt-get install ceph\n```\n\n## 5. 初始化mon节点和收集密钥信息\n```\nceph@node1:~/opt/ceph$ ceph-deploy mon create-initial\n```\n如果报如下错误\n```\n[node1][DEBUG ] get remote short hostname\n[node1][WARNIN] ********************************************************************************\n[node1][WARNIN] provided hostname must match remote hostname\n[node1][WARNIN] provided hostname: node1\n[node1][WARNIN] remote hostname: ubuntu\n[node1][WARNIN] monitors may not reach quorum and create-keys will not complete\n```\n因为/etc/hosts中解析的`ip地址 主机名`和远端的主机名不匹配所致，在/etc/hosts中修改为正确的hostname，清理下从头重新安装。\n\n执行完毕，目录应该有以下文件：\n```\n{cluster-name}.client.admin.keyring\n{cluster-name}.bootstrap-osd.keyring\n{cluster-name}.bootstrap-mds.keyring\n{cluster-name}.bootstrap-rgw.keyring\n```\n\n## 6. 配置osd节点\n首先格式化磁盘，注意我们使用的是/dev/sdb：\n```\nceph@node1:~/opt/ceph$ ceph-deploy disk zap node1:sdb\nceph@node1:~/opt/ceph$ ceph-deploy disk zap node2:sdb\n```\n以上步骤会<font color=red>清空磁盘的所有数据</font>。\n\n接下来创建osd，注意由于我们只是测试，故没有使用单独的磁盘作为journal\n(todo分析具体什么)\n实际在生产环境下，需要配备SSD分区作为journal，能够最大化IO吞吐量。\n```\nceph@node1:~/opt/ceph$ ceph-deploy osd create node1:sdb\nceph@node1:~/opt/ceph$ ceph-deploy osd create node2:sdb\n```\n在节点上执行`df -h`会得到如下结果\n```\n/dev/sdb1        35G   36M   35G   1% /var/lib/ceph/osd/ceph-0\n```\n\n\n## 7. 配置admin节点\nadmin节点同时也作为我们的client节点，需要拷贝其他节点的配置文件以及密钥，使得不需要指定mon地址以及用户信息就可以直接管理我们的ceph集群，执行以下命令即可：\n```\nceph@node1:~/opt/ceph$ ceph-deploy admin node1 node2\nceph@node1:~/opt/ceph$ sudo chmod +r /etc/ceph/ceph.client.admin.keyring # 保证具有读取的密钥的权限\n```\n\n## 8. 测试结果\n\n运行以下命令：\n```\nceph@node1:~/opt/ceph$ ceph health\nceph@node1:~/opt/ceph$ ceph -s\n```\n结果若返回active + clean状态，则说明部署成功！\n\n\n## 9. 配置mds\n[Adding MDS参考链接](http://docs.ceph.com/docs/master/install/manual-deployment/#adding-mds)\n### 9.1 安装mds\n```\nceph@node1:~/opt/ceph$ sudo apt-get install ceph-mds\n```\n\n### 9.2 配置\n{id}是一个任意的名字,例如可以是电脑的主机名\n\n编辑`ceph.conf`，添加MDS区域\n```\n[mds]\n  mds data = /var/lib/ceph/mds/mds.$id\n  keyring = /var/lib/ceph/mds/mds.$id/mds.$id.keyring\n\n[mds.0] # 0为id\n  host = 0 # {id}\n```\n\n### 9.3 创建目录\n```\nceph@node1:~/opt/ceph$ mkdir -p /var/lib/ceph/mds/{cluster-name}-{id}\n```\n\n### 9.4 生成keyring\n```\nceph@node1:~/opt/ceph$ ceph-authtool --create-keyring /var/lib/ceph/mds/{cluster-name}-{id}/keyring --gen-key -n mds.{id}\n```\n\nImport the keyring and set caps.:\n\n### 9.5 导入keyring\n```\nceph@node1:~/opt/ceph$ ceph auth add mds.{id} osd \"allow rwx\" mds \"allow\" mon \"allow profile mds\" -i /var/lib/ceph/mds/{cluster}-{id}/keyring\n```\n### 9.6 修改配置文件\nAdd to ceph.conf.:\n```\n[mds.{id}]\nhost = {id}\n```\n### 9.7 手动启动\nStart the daemon the manual way.:\n```\nceph@node1:~/opt/ceph$ ceph-mds --cluster {cluster-name} -i {id} -m {mon-hostname}:{mon-port} [-f]\n```\n```\nceph@node1:~/opt/ceph$ service ceph start\nceph@node1:~/opt/ceph$ sudo service ceph start mds\n```\n检查进程是否存在\n```\nceph@node1:~/opt/ceph$ ps -ef | grep ceph\nroot      4032     1  0 17:18 ?        00:00:00 /usr/bin/ceph-mon --cluster=ceph -i node1 -f\nroot      4687     1  0 17:19 ?        00:00:04 /usr/bin/ceph-osd --cluster=ceph -i 0 -f\nroot      5196     1  0 17:23 ?        00:00:00 ceph-mds --cluster mds -i 0 -m 192.168.1.176:6789\n```\n如果已经存在，下面步骤跳过，直接执行第10步的挂载\n\n如果mds起不来，可以执行如下命令，查看具体报错信息\n```\nceph@node1:~/opt/ceph$ sudo ceph-mds --cluster node1 -i 0 -m 192.168.1.176:6789 -f\nstarting mds.0 at :/0\n2017-03-13 15:15:49.485908 7f32b07bb800 -1 did not load config file, using default settings.\n2017-03-13 15:15:49.488414 7f32b07bb800 -1 monclient(hunting): ERROR: missing keyring, cannot use cephx for authentication\n2017-03-13 15:15:49.490934 7f32b07bb800 -1 mds.-1.0 ERROR: failed to authenticate: (95) Operation not supported\n```\n\n> If starting the daemon fails with this error:\n> mds.-1.0 ERROR: failed to authenticate: (22) Invalid argument\n> Then make sure you do not have a keyring set in ceph.conf in the global section; move it to the client section; or add a keyring setting specific to this mds daemon. And verify that you see the same key in the mds data directory and ceph auth get mds.{id} output.\n\n** 检查步骤 **  \n查看如下结果是否一致\n```\nceph@node1:~/opt/ceph$ ceph auth get mds.0\nexported keyring for mds.0\n[mds.0]\n        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==\n        caps mds = \"allow\"\n        caps mon = \"allow profile mds\"\n        caps osd = \"allow rwx\"\n\n\nceph@node1:~/opt/ceph$ cat /var/lib/ceph/mds/mds-0/keyring\n[mds.0]\n        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==\n```\n\n如果仍然报如上错误，可以尝试\n```\nceph@node1:~/opt/ceph$ sudo chown -R ceph:ceph /var/lib/ceph/mds/mds-0\n```\n重新生成认证文件应该就会成功,<font color=red>不过不确定对后续操作的影响</font>\n\n[也可以尝试这里的步骤，不过不保证会好使](https://www.sebastien-han.fr/blog/2013/05/13/deploy-a-ceph-mds-server/)\n\n\nNow you are ready to create a Ceph filesystem.\n\n## 10. 挂载\n\n```\nceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs\nceph@node1:~/opt/ceph$ sudo ceph-fuse -m {ip-address-of-monitor}:6789 /mnt/cephfs\nceph@node1:~/opt/ceph$ df -h\n```\n\n在node2上执行 安装ceph-fuse\n```\nceph@node1:~/opt/ceph$ sudo apt-get install ceph-fuse\nceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs\nceph@node1:~/opt/ceph$ sudo ceph-fuse -m {ip-address-of-monitor}:6789 /mnt/cephfs\nceph@node1:~/opt/ceph$ df -h\n```\n\n## 11. 注意事项\n<font color=red>用户ceph不能够锁定，为了安全问题，只能将用户ceph改为nologin</font>\n \n## 12. 服务器重启\n服务器重启后，对于mon节点来说`osd`和`mon`会自动启动\nosd节点的osd服务也会自动启动\n \n mon节点的`mds`服务需要手动启动，启动方法为\n ```\n sudo ceph-mds --cluster {cluster-name} -i {id} -m {mon-hostname}:{mon-port} [-f]\n ```\n **另**\n 启动完mds后还需要执行挂载命令\n ```\n sudo ceph-fuse -m {ip-address-of-monitor}:6789 /mnt/cephfs\n ```\n 可以将以上命令**放入到开机启动项中**，但是服务器重启完成后要进行检查ceph的运行状态\n `ceph -s`或者`ps -ef | grep ceph` 或者 通过`df -h`查看ceph-fuse是否成功挂载目录\n 如果长时间没成功，并且`ceph -s`报错，可以尝试将另一节点node2也重启，node1可以成功挂载。\n\n","slug":"ceph","published":1,"updated":"2017-06-04T13:38:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsik0004x0s6tmdvshvx","content":"<h1 id=\"ceph的搭建\"><a href=\"#ceph的搭建\" class=\"headerlink\" title=\"ceph的搭建\"></a>ceph的搭建</h1><p><strong>注</strong> 如果在安装过程中，想要重新安装，需要执行如下命令清除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo stop ceph-all  #停止所有CEPH进程</span><br><span class=\"line\">ceph-deploy uninstall  [&#123;ceph-node&#125;]   #卸载所有ceph程序</span><br><span class=\"line\">ceph-deploy purge   [[ceph-node&#125; [&#123;ceph-node&#125;] #删除ceph相关的包</span><br><span class=\"line\">ceph-deploy purgedata &#123;ceph-node&#125; [&#123;ceph-node&#125;]   #删除ceph相关的包</span><br><span class=\"line\">ceph-deploy forgetkeys #删除key</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-安装前准备\"><a href=\"#1-安装前准备\" class=\"headerlink\" title=\"1. 安装前准备\"></a>1. 安装前准备</h2><h3 id=\"1-1-添加hosts解析\"><a href=\"#1-1-添加hosts解析\" class=\"headerlink\" title=\"1.1 添加hosts解析\"></a>1.1 添加hosts解析</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加如下内容</span><br><span class=\"line\">192.168.1.174\tnode1</span><br><span class=\"line\">192.168.1.175\tnode2</span><br></pre></td></tr></table></figure>\n<p><strong>注:  <font color=\"red\">node1 node2必须为hostname，因为在安装过程中会验证hostname是否为node{1,2}<br>遇到这个错误，需要完全清理ceph软件和配置数据，从头再来<br></font></strong></p>\n<h3 id=\"1-2-免密码登录\"><a href=\"#1-2-免密码登录\" class=\"headerlink\" title=\"1.2 免密码登录\"></a>1.2 免密码登录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成密钥对</span><br><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\"></span><br><span class=\"line\"># admin节点需要通过密钥对登录到其他节点</span><br><span class=\"line\">ssh-copy-id ceph@node1</span><br><span class=\"line\">ssh-copy-id ceph@node2</span><br></pre></td></tr></table></figure>\n<p>在<strong>每个Ceph节点</strong>中为用户增加 root 权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;ceph ALL = (root) NOPASSWD:ALL&quot; | sudo tee /etc/sudoers.d/ceph</span><br><span class=\"line\">sudo chmod 0440 /etc/sudoers.d/ceph</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-3-安装ceph-deploy软件\"><a href=\"#1-3-安装ceph-deploy软件\" class=\"headerlink\" title=\"1.3 安装ceph-deploy软件\"></a>1.3 安装ceph-deploy软件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -q -O- &apos;https://download.ceph.com/keys/release.asc&apos; | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加Ceph软件包源，用Ceph稳定版（如cuttlefish 、 dumpling 、 emperor 、 firefly 等等）替换掉 &#123;ceph-stable-release&#125;</span><br><span class=\"line\"># echo deb http://download.ceph.com/debian-&#123;ceph-stable-release&#125;/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</span><br><span class=\"line\"># 例如：</span><br><span class=\"line\">echo deb http://download.ceph.com/debian-dumpling/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install ceph-deploy</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-创建ceph目录\"><a href=\"#2-创建ceph目录\" class=\"headerlink\" title=\"2. 创建ceph目录\"></a>2. 创建ceph目录</h2><p>我们使用ceph-deploy部署，<strong>后续操作均在admin节点操作</strong>。<br>首先需要创建工作环境，该环境会保存所有的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir opt/ceph</span><br><span class=\"line\">cd opt/ceph</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-创建集群\"><a href=\"#3-创建集群\" class=\"headerlink\" title=\"3. 创建集群\"></a>3. 创建集群</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy new node1</span><br></pre></td></tr></table></figure>\n<p>其中node1是mon节点，执行该命令会生成ceph配置文件、monitor密钥文件以及日志文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ls</span><br><span class=\"line\">ceph.conf  ceph.log  ceph.mon.keyring</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-修改默认冗余份数\"><a href=\"#4-修改默认冗余份数\" class=\"headerlink\" title=\"4. 修改默认冗余份数\"></a>4. 修改默认冗余份数</h2><h3 id=\"4-1-设置osd冗余份数\"><a href=\"#4-1-设置osd冗余份数\" class=\"headerlink\" title=\"4.1 设置osd冗余份数\"></a>4.1 设置osd冗余份数</h3><p>由于我们目前只有两个osd节点，而默认的冗余份数是3，因此我们需要设置为2，如果osd节点大于2，则此步骤省略。<br>修改ceph.conf文件，在[global]下增加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ echo &quot;osd pool default size = 2&quot; &gt;&gt; ceph.conf</span><br></pre></td></tr></table></figure></p>\n<p><strong>如果有多块网卡需要配置使用哪块网卡</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mon_host = `对应网卡的IP地址`</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-2-在节点上安装ceph软件\"><a href=\"#4-2-在节点上安装ceph软件\" class=\"headerlink\" title=\"4.2 在节点上安装ceph软件\"></a>4.2 在节点上安装ceph软件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy install node1 node2</span><br></pre></td></tr></table></figure>\n<p>如果失败会报如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[node1][ERROR ] RuntimeError: command returned non-zero exit status: 100</span><br><span class=\"line\">[ceph_deploy][ERROR ] RuntimeError: Failed to execute command: apt-get -q update</span><br></pre></td></tr></table></figure></p>\n<p><strong>解决方法</strong></p>\n<ul>\n<li><p>1.同步配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ rsync -avz ../ceph ceph@node2:~/opt/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.在<font color=\"red\">所有节点</font>分别安装ceph</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo apt-get install ceph</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"5-初始化mon节点和收集密钥信息\"><a href=\"#5-初始化mon节点和收集密钥信息\" class=\"headerlink\" title=\"5. 初始化mon节点和收集密钥信息\"></a>5. 初始化mon节点和收集密钥信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy mon create-initial</span><br></pre></td></tr></table></figure>\n<p>如果报如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[node1][DEBUG ] get remote short hostname</span><br><span class=\"line\">[node1][WARNIN] ********************************************************************************</span><br><span class=\"line\">[node1][WARNIN] provided hostname must match remote hostname</span><br><span class=\"line\">[node1][WARNIN] provided hostname: node1</span><br><span class=\"line\">[node1][WARNIN] remote hostname: ubuntu</span><br><span class=\"line\">[node1][WARNIN] monitors may not reach quorum and create-keys will not complete</span><br></pre></td></tr></table></figure></p>\n<p>因为/etc/hosts中解析的<code>ip地址 主机名</code>和远端的主机名不匹配所致，在/etc/hosts中修改为正确的hostname，清理下从头重新安装。</p>\n<p>执行完毕，目录应该有以下文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;cluster-name&#125;.client.admin.keyring</span><br><span class=\"line\">&#123;cluster-name&#125;.bootstrap-osd.keyring</span><br><span class=\"line\">&#123;cluster-name&#125;.bootstrap-mds.keyring</span><br><span class=\"line\">&#123;cluster-name&#125;.bootstrap-rgw.keyring</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"6-配置osd节点\"><a href=\"#6-配置osd节点\" class=\"headerlink\" title=\"6. 配置osd节点\"></a>6. 配置osd节点</h2><p>首先格式化磁盘，注意我们使用的是/dev/sdb：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy disk zap node1:sdb</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy disk zap node2:sdb</span><br></pre></td></tr></table></figure></p>\n<p>以上步骤会<font color=\"red\">清空磁盘的所有数据</font>。</p>\n<p>接下来创建osd，注意由于我们只是测试，故没有使用单独的磁盘作为journal<br>(todo分析具体什么)<br>实际在生产环境下，需要配备SSD分区作为journal，能够最大化IO吞吐量。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy osd create node1:sdb</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy osd create node2:sdb</span><br></pre></td></tr></table></figure></p>\n<p>在节点上执行<code>df -h</code>会得到如下结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dev/sdb1        35G   36M   35G   1% /var/lib/ceph/osd/ceph-0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7-配置admin节点\"><a href=\"#7-配置admin节点\" class=\"headerlink\" title=\"7. 配置admin节点\"></a>7. 配置admin节点</h2><p>admin节点同时也作为我们的client节点，需要拷贝其他节点的配置文件以及密钥，使得不需要指定mon地址以及用户信息就可以直接管理我们的ceph集群，执行以下命令即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy admin node1 node2</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo chmod +r /etc/ceph/ceph.client.admin.keyring # 保证具有读取的密钥的权限</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-测试结果\"><a href=\"#8-测试结果\" class=\"headerlink\" title=\"8. 测试结果\"></a>8. 测试结果</h2><p>运行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph health</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ ceph -s</span><br></pre></td></tr></table></figure></p>\n<p>结果若返回active + clean状态，则说明部署成功！</p>\n<h2 id=\"9-配置mds\"><a href=\"#9-配置mds\" class=\"headerlink\" title=\"9. 配置mds\"></a>9. 配置mds</h2><p><a href=\"http://docs.ceph.com/docs/master/install/manual-deployment/#adding-mds\" target=\"_blank\" rel=\"noopener\">Adding MDS参考链接</a></p>\n<h3 id=\"9-1-安装mds\"><a href=\"#9-1-安装mds\" class=\"headerlink\" title=\"9.1 安装mds\"></a>9.1 安装mds</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo apt-get install ceph-mds</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-2-配置\"><a href=\"#9-2-配置\" class=\"headerlink\" title=\"9.2 配置\"></a>9.2 配置</h3><p>{id}是一个任意的名字,例如可以是电脑的主机名</p>\n<p>编辑<code>ceph.conf</code>，添加MDS区域<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mds]</span><br><span class=\"line\">  mds data = /var/lib/ceph/mds/mds.$id</span><br><span class=\"line\">  keyring = /var/lib/ceph/mds/mds.$id/mds.$id.keyring</span><br><span class=\"line\"></span><br><span class=\"line\">[mds.0] # 0为id</span><br><span class=\"line\">  host = 0 # &#123;id&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"9-3-创建目录\"><a href=\"#9-3-创建目录\" class=\"headerlink\" title=\"9.3 创建目录\"></a>9.3 创建目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ mkdir -p /var/lib/ceph/mds/&#123;cluster-name&#125;-&#123;id&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-4-生成keyring\"><a href=\"#9-4-生成keyring\" class=\"headerlink\" title=\"9.4 生成keyring\"></a>9.4 生成keyring</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-authtool --create-keyring /var/lib/ceph/mds/&#123;cluster-name&#125;-&#123;id&#125;/keyring --gen-key -n mds.&#123;id&#125;</span><br></pre></td></tr></table></figure>\n<p>Import the keyring and set caps.:</p>\n<h3 id=\"9-5-导入keyring\"><a href=\"#9-5-导入keyring\" class=\"headerlink\" title=\"9.5 导入keyring\"></a>9.5 导入keyring</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph auth add mds.&#123;id&#125; osd &quot;allow rwx&quot; mds &quot;allow&quot; mon &quot;allow profile mds&quot; -i /var/lib/ceph/mds/&#123;cluster&#125;-&#123;id&#125;/keyring</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-6-修改配置文件\"><a href=\"#9-6-修改配置文件\" class=\"headerlink\" title=\"9.6 修改配置文件\"></a>9.6 修改配置文件</h3><p>Add to ceph.conf.:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mds.&#123;id&#125;]</span><br><span class=\"line\">host = &#123;id&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"9-7-手动启动\"><a href=\"#9-7-手动启动\" class=\"headerlink\" title=\"9.7 手动启动\"></a>9.7 手动启动</h3><p>Start the daemon the manual way.:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-mds --cluster &#123;cluster-name&#125; -i &#123;id&#125; -m &#123;mon-hostname&#125;:&#123;mon-port&#125; [-f]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ service ceph start</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo service ceph start mds</span><br></pre></td></tr></table></figure>\n<p>检查进程是否存在<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ps -ef | grep ceph</span><br><span class=\"line\">root      4032     1  0 17:18 ?        00:00:00 /usr/bin/ceph-mon --cluster=ceph -i node1 -f</span><br><span class=\"line\">root      4687     1  0 17:19 ?        00:00:04 /usr/bin/ceph-osd --cluster=ceph -i 0 -f</span><br><span class=\"line\">root      5196     1  0 17:23 ?        00:00:00 ceph-mds --cluster mds -i 0 -m 192.168.1.176:6789</span><br></pre></td></tr></table></figure></p>\n<p>如果已经存在，下面步骤跳过，直接执行第10步的挂载</p>\n<p>如果mds起不来，可以执行如下命令，查看具体报错信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo ceph-mds --cluster node1 -i 0 -m 192.168.1.176:6789 -f</span><br><span class=\"line\">starting mds.0 at :/0</span><br><span class=\"line\">2017-03-13 15:15:49.485908 7f32b07bb800 -1 did not load config file, using default settings.</span><br><span class=\"line\">2017-03-13 15:15:49.488414 7f32b07bb800 -1 monclient(hunting): ERROR: missing keyring, cannot use cephx for authentication</span><br><span class=\"line\">2017-03-13 15:15:49.490934 7f32b07bb800 -1 mds.-1.0 ERROR: failed to authenticate: (95) Operation not supported</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>If starting the daemon fails with this error:<br>mds.-1.0 ERROR: failed to authenticate: (22) Invalid argument<br>Then make sure you do not have a keyring set in ceph.conf in the global section; move it to the client section; or add a keyring setting specific to this mds daemon. And verify that you see the same key in the mds data directory and ceph auth get mds.{id} output.</p>\n</blockquote>\n<p><strong> 检查步骤 </strong><br>查看如下结果是否一致<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph auth get mds.0</span><br><span class=\"line\">exported keyring for mds.0</span><br><span class=\"line\">[mds.0]</span><br><span class=\"line\">        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==</span><br><span class=\"line\">        caps mds = &quot;allow&quot;</span><br><span class=\"line\">        caps mon = &quot;allow profile mds&quot;</span><br><span class=\"line\">        caps osd = &quot;allow rwx&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ceph@node1:~/opt/ceph$ cat /var/lib/ceph/mds/mds-0/keyring</span><br><span class=\"line\">[mds.0]</span><br><span class=\"line\">        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==</span><br></pre></td></tr></table></figure></p>\n<p>如果仍然报如上错误，可以尝试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo chown -R ceph:ceph /var/lib/ceph/mds/mds-0</span><br></pre></td></tr></table></figure></p>\n<p>重新生成认证文件应该就会成功,<font color=\"red\">不过不确定对后续操作的影响</font></p>\n<p><a href=\"https://www.sebastien-han.fr/blog/2013/05/13/deploy-a-ceph-mds-server/\" target=\"_blank\" rel=\"noopener\">也可以尝试这里的步骤，不过不保证会好使</a></p>\n<p>Now you are ready to create a Ceph filesystem.</p>\n<h2 id=\"10-挂载\"><a href=\"#10-挂载\" class=\"headerlink\" title=\"10. 挂载\"></a>10. 挂载</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ df -h</span><br></pre></td></tr></table></figure>\n<p>在node2上执行 安装ceph-fuse<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo apt-get install ceph-fuse</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ df -h</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"11-注意事项\"><a href=\"#11-注意事项\" class=\"headerlink\" title=\"11. 注意事项\"></a>11. 注意事项</h2><font color=\"red\">用户ceph不能够锁定，为了安全问题，只能将用户ceph改为nologin</font>\n\n<h2 id=\"12-服务器重启\"><a href=\"#12-服务器重启\" class=\"headerlink\" title=\"12. 服务器重启\"></a>12. 服务器重启</h2><p>服务器重启后，对于mon节点来说<code>osd</code>和<code>mon</code>会自动启动<br>osd节点的osd服务也会自动启动</p>\n<p> mon节点的<code>mds</code>服务需要手动启动，启动方法为<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ceph-mds --cluster &#123;cluster-name&#125; -i &#123;id&#125; -m &#123;mon-hostname&#125;:&#123;mon-port&#125; [-f]</span><br></pre></td></tr></table></figure></p>\n<p> <strong>另</strong><br> 启动完mds后还需要执行挂载命令<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</span><br></pre></td></tr></table></figure></p>\n<p> 可以将以上命令<strong>放入到开机启动项中</strong>，但是服务器重启完成后要进行检查ceph的运行状态<br> <code>ceph -s</code>或者<code>ps -ef | grep ceph</code> 或者 通过<code>df -h</code>查看ceph-fuse是否成功挂载目录<br> 如果长时间没成功，并且<code>ceph -s</code>报错，可以尝试将另一节点node2也重启，node1可以成功挂载。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ceph的搭建\"><a href=\"#ceph的搭建\" class=\"headerlink\" title=\"ceph的搭建\"></a>ceph的搭建</h1><p><strong>注</strong> 如果在安装过程中，想要重新安装，需要执行如下命令清除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo stop ceph-all  #停止所有CEPH进程</span><br><span class=\"line\">ceph-deploy uninstall  [&#123;ceph-node&#125;]   #卸载所有ceph程序</span><br><span class=\"line\">ceph-deploy purge   [[ceph-node&#125; [&#123;ceph-node&#125;] #删除ceph相关的包</span><br><span class=\"line\">ceph-deploy purgedata &#123;ceph-node&#125; [&#123;ceph-node&#125;]   #删除ceph相关的包</span><br><span class=\"line\">ceph-deploy forgetkeys #删除key</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-安装前准备\"><a href=\"#1-安装前准备\" class=\"headerlink\" title=\"1. 安装前准备\"></a>1. 安装前准备</h2><h3 id=\"1-1-添加hosts解析\"><a href=\"#1-1-添加hosts解析\" class=\"headerlink\" title=\"1.1 添加hosts解析\"></a>1.1 添加hosts解析</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加如下内容</span><br><span class=\"line\">192.168.1.174\tnode1</span><br><span class=\"line\">192.168.1.175\tnode2</span><br></pre></td></tr></table></figure>\n<p><strong>注:  <font color=\"red\">node1 node2必须为hostname，因为在安装过程中会验证hostname是否为node{1,2}<br>遇到这个错误，需要完全清理ceph软件和配置数据，从头再来<br></font></strong></p>\n<h3 id=\"1-2-免密码登录\"><a href=\"#1-2-免密码登录\" class=\"headerlink\" title=\"1.2 免密码登录\"></a>1.2 免密码登录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成密钥对</span><br><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\"></span><br><span class=\"line\"># admin节点需要通过密钥对登录到其他节点</span><br><span class=\"line\">ssh-copy-id ceph@node1</span><br><span class=\"line\">ssh-copy-id ceph@node2</span><br></pre></td></tr></table></figure>\n<p>在<strong>每个Ceph节点</strong>中为用户增加 root 权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;ceph ALL = (root) NOPASSWD:ALL&quot; | sudo tee /etc/sudoers.d/ceph</span><br><span class=\"line\">sudo chmod 0440 /etc/sudoers.d/ceph</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-3-安装ceph-deploy软件\"><a href=\"#1-3-安装ceph-deploy软件\" class=\"headerlink\" title=\"1.3 安装ceph-deploy软件\"></a>1.3 安装ceph-deploy软件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -q -O- &apos;https://download.ceph.com/keys/release.asc&apos; | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加Ceph软件包源，用Ceph稳定版（如cuttlefish 、 dumpling 、 emperor 、 firefly 等等）替换掉 &#123;ceph-stable-release&#125;</span><br><span class=\"line\"># echo deb http://download.ceph.com/debian-&#123;ceph-stable-release&#125;/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</span><br><span class=\"line\"># 例如：</span><br><span class=\"line\">echo deb http://download.ceph.com/debian-dumpling/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install ceph-deploy</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-创建ceph目录\"><a href=\"#2-创建ceph目录\" class=\"headerlink\" title=\"2. 创建ceph目录\"></a>2. 创建ceph目录</h2><p>我们使用ceph-deploy部署，<strong>后续操作均在admin节点操作</strong>。<br>首先需要创建工作环境，该环境会保存所有的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir opt/ceph</span><br><span class=\"line\">cd opt/ceph</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-创建集群\"><a href=\"#3-创建集群\" class=\"headerlink\" title=\"3. 创建集群\"></a>3. 创建集群</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy new node1</span><br></pre></td></tr></table></figure>\n<p>其中node1是mon节点，执行该命令会生成ceph配置文件、monitor密钥文件以及日志文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ls</span><br><span class=\"line\">ceph.conf  ceph.log  ceph.mon.keyring</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-修改默认冗余份数\"><a href=\"#4-修改默认冗余份数\" class=\"headerlink\" title=\"4. 修改默认冗余份数\"></a>4. 修改默认冗余份数</h2><h3 id=\"4-1-设置osd冗余份数\"><a href=\"#4-1-设置osd冗余份数\" class=\"headerlink\" title=\"4.1 设置osd冗余份数\"></a>4.1 设置osd冗余份数</h3><p>由于我们目前只有两个osd节点，而默认的冗余份数是3，因此我们需要设置为2，如果osd节点大于2，则此步骤省略。<br>修改ceph.conf文件，在[global]下增加以下内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ echo &quot;osd pool default size = 2&quot; &gt;&gt; ceph.conf</span><br></pre></td></tr></table></figure></p>\n<p><strong>如果有多块网卡需要配置使用哪块网卡</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mon_host = `对应网卡的IP地址`</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-2-在节点上安装ceph软件\"><a href=\"#4-2-在节点上安装ceph软件\" class=\"headerlink\" title=\"4.2 在节点上安装ceph软件\"></a>4.2 在节点上安装ceph软件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy install node1 node2</span><br></pre></td></tr></table></figure>\n<p>如果失败会报如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[node1][ERROR ] RuntimeError: command returned non-zero exit status: 100</span><br><span class=\"line\">[ceph_deploy][ERROR ] RuntimeError: Failed to execute command: apt-get -q update</span><br></pre></td></tr></table></figure></p>\n<p><strong>解决方法</strong></p>\n<ul>\n<li><p>1.同步配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ rsync -avz ../ceph ceph@node2:~/opt/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.在<font color=\"red\">所有节点</font>分别安装ceph</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo apt-get install ceph</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"5-初始化mon节点和收集密钥信息\"><a href=\"#5-初始化mon节点和收集密钥信息\" class=\"headerlink\" title=\"5. 初始化mon节点和收集密钥信息\"></a>5. 初始化mon节点和收集密钥信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy mon create-initial</span><br></pre></td></tr></table></figure>\n<p>如果报如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[node1][DEBUG ] get remote short hostname</span><br><span class=\"line\">[node1][WARNIN] ********************************************************************************</span><br><span class=\"line\">[node1][WARNIN] provided hostname must match remote hostname</span><br><span class=\"line\">[node1][WARNIN] provided hostname: node1</span><br><span class=\"line\">[node1][WARNIN] remote hostname: ubuntu</span><br><span class=\"line\">[node1][WARNIN] monitors may not reach quorum and create-keys will not complete</span><br></pre></td></tr></table></figure></p>\n<p>因为/etc/hosts中解析的<code>ip地址 主机名</code>和远端的主机名不匹配所致，在/etc/hosts中修改为正确的hostname，清理下从头重新安装。</p>\n<p>执行完毕，目录应该有以下文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;cluster-name&#125;.client.admin.keyring</span><br><span class=\"line\">&#123;cluster-name&#125;.bootstrap-osd.keyring</span><br><span class=\"line\">&#123;cluster-name&#125;.bootstrap-mds.keyring</span><br><span class=\"line\">&#123;cluster-name&#125;.bootstrap-rgw.keyring</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"6-配置osd节点\"><a href=\"#6-配置osd节点\" class=\"headerlink\" title=\"6. 配置osd节点\"></a>6. 配置osd节点</h2><p>首先格式化磁盘，注意我们使用的是/dev/sdb：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy disk zap node1:sdb</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy disk zap node2:sdb</span><br></pre></td></tr></table></figure></p>\n<p>以上步骤会<font color=\"red\">清空磁盘的所有数据</font>。</p>\n<p>接下来创建osd，注意由于我们只是测试，故没有使用单独的磁盘作为journal<br>(todo分析具体什么)<br>实际在生产环境下，需要配备SSD分区作为journal，能够最大化IO吞吐量。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy osd create node1:sdb</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy osd create node2:sdb</span><br></pre></td></tr></table></figure></p>\n<p>在节点上执行<code>df -h</code>会得到如下结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dev/sdb1        35G   36M   35G   1% /var/lib/ceph/osd/ceph-0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"7-配置admin节点\"><a href=\"#7-配置admin节点\" class=\"headerlink\" title=\"7. 配置admin节点\"></a>7. 配置admin节点</h2><p>admin节点同时也作为我们的client节点，需要拷贝其他节点的配置文件以及密钥，使得不需要指定mon地址以及用户信息就可以直接管理我们的ceph集群，执行以下命令即可：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-deploy admin node1 node2</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo chmod +r /etc/ceph/ceph.client.admin.keyring # 保证具有读取的密钥的权限</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-测试结果\"><a href=\"#8-测试结果\" class=\"headerlink\" title=\"8. 测试结果\"></a>8. 测试结果</h2><p>运行以下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph health</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ ceph -s</span><br></pre></td></tr></table></figure></p>\n<p>结果若返回active + clean状态，则说明部署成功！</p>\n<h2 id=\"9-配置mds\"><a href=\"#9-配置mds\" class=\"headerlink\" title=\"9. 配置mds\"></a>9. 配置mds</h2><p><a href=\"http://docs.ceph.com/docs/master/install/manual-deployment/#adding-mds\" target=\"_blank\" rel=\"noopener\">Adding MDS参考链接</a></p>\n<h3 id=\"9-1-安装mds\"><a href=\"#9-1-安装mds\" class=\"headerlink\" title=\"9.1 安装mds\"></a>9.1 安装mds</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo apt-get install ceph-mds</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-2-配置\"><a href=\"#9-2-配置\" class=\"headerlink\" title=\"9.2 配置\"></a>9.2 配置</h3><p>{id}是一个任意的名字,例如可以是电脑的主机名</p>\n<p>编辑<code>ceph.conf</code>，添加MDS区域<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mds]</span><br><span class=\"line\">  mds data = /var/lib/ceph/mds/mds.$id</span><br><span class=\"line\">  keyring = /var/lib/ceph/mds/mds.$id/mds.$id.keyring</span><br><span class=\"line\"></span><br><span class=\"line\">[mds.0] # 0为id</span><br><span class=\"line\">  host = 0 # &#123;id&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"9-3-创建目录\"><a href=\"#9-3-创建目录\" class=\"headerlink\" title=\"9.3 创建目录\"></a>9.3 创建目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ mkdir -p /var/lib/ceph/mds/&#123;cluster-name&#125;-&#123;id&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-4-生成keyring\"><a href=\"#9-4-生成keyring\" class=\"headerlink\" title=\"9.4 生成keyring\"></a>9.4 生成keyring</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-authtool --create-keyring /var/lib/ceph/mds/&#123;cluster-name&#125;-&#123;id&#125;/keyring --gen-key -n mds.&#123;id&#125;</span><br></pre></td></tr></table></figure>\n<p>Import the keyring and set caps.:</p>\n<h3 id=\"9-5-导入keyring\"><a href=\"#9-5-导入keyring\" class=\"headerlink\" title=\"9.5 导入keyring\"></a>9.5 导入keyring</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph auth add mds.&#123;id&#125; osd &quot;allow rwx&quot; mds &quot;allow&quot; mon &quot;allow profile mds&quot; -i /var/lib/ceph/mds/&#123;cluster&#125;-&#123;id&#125;/keyring</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-6-修改配置文件\"><a href=\"#9-6-修改配置文件\" class=\"headerlink\" title=\"9.6 修改配置文件\"></a>9.6 修改配置文件</h3><p>Add to ceph.conf.:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mds.&#123;id&#125;]</span><br><span class=\"line\">host = &#123;id&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"9-7-手动启动\"><a href=\"#9-7-手动启动\" class=\"headerlink\" title=\"9.7 手动启动\"></a>9.7 手动启动</h3><p>Start the daemon the manual way.:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph-mds --cluster &#123;cluster-name&#125; -i &#123;id&#125; -m &#123;mon-hostname&#125;:&#123;mon-port&#125; [-f]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ service ceph start</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo service ceph start mds</span><br></pre></td></tr></table></figure>\n<p>检查进程是否存在<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ps -ef | grep ceph</span><br><span class=\"line\">root      4032     1  0 17:18 ?        00:00:00 /usr/bin/ceph-mon --cluster=ceph -i node1 -f</span><br><span class=\"line\">root      4687     1  0 17:19 ?        00:00:04 /usr/bin/ceph-osd --cluster=ceph -i 0 -f</span><br><span class=\"line\">root      5196     1  0 17:23 ?        00:00:00 ceph-mds --cluster mds -i 0 -m 192.168.1.176:6789</span><br></pre></td></tr></table></figure></p>\n<p>如果已经存在，下面步骤跳过，直接执行第10步的挂载</p>\n<p>如果mds起不来，可以执行如下命令，查看具体报错信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo ceph-mds --cluster node1 -i 0 -m 192.168.1.176:6789 -f</span><br><span class=\"line\">starting mds.0 at :/0</span><br><span class=\"line\">2017-03-13 15:15:49.485908 7f32b07bb800 -1 did not load config file, using default settings.</span><br><span class=\"line\">2017-03-13 15:15:49.488414 7f32b07bb800 -1 monclient(hunting): ERROR: missing keyring, cannot use cephx for authentication</span><br><span class=\"line\">2017-03-13 15:15:49.490934 7f32b07bb800 -1 mds.-1.0 ERROR: failed to authenticate: (95) Operation not supported</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>If starting the daemon fails with this error:<br>mds.-1.0 ERROR: failed to authenticate: (22) Invalid argument<br>Then make sure you do not have a keyring set in ceph.conf in the global section; move it to the client section; or add a keyring setting specific to this mds daemon. And verify that you see the same key in the mds data directory and ceph auth get mds.{id} output.</p>\n</blockquote>\n<p><strong> 检查步骤 </strong><br>查看如下结果是否一致<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ ceph auth get mds.0</span><br><span class=\"line\">exported keyring for mds.0</span><br><span class=\"line\">[mds.0]</span><br><span class=\"line\">        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==</span><br><span class=\"line\">        caps mds = &quot;allow&quot;</span><br><span class=\"line\">        caps mon = &quot;allow profile mds&quot;</span><br><span class=\"line\">        caps osd = &quot;allow rwx&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ceph@node1:~/opt/ceph$ cat /var/lib/ceph/mds/mds-0/keyring</span><br><span class=\"line\">[mds.0]</span><br><span class=\"line\">        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==</span><br></pre></td></tr></table></figure></p>\n<p>如果仍然报如上错误，可以尝试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo chown -R ceph:ceph /var/lib/ceph/mds/mds-0</span><br></pre></td></tr></table></figure></p>\n<p>重新生成认证文件应该就会成功,<font color=\"red\">不过不确定对后续操作的影响</font></p>\n<p><a href=\"https://www.sebastien-han.fr/blog/2013/05/13/deploy-a-ceph-mds-server/\" target=\"_blank\" rel=\"noopener\">也可以尝试这里的步骤，不过不保证会好使</a></p>\n<p>Now you are ready to create a Ceph filesystem.</p>\n<h2 id=\"10-挂载\"><a href=\"#10-挂载\" class=\"headerlink\" title=\"10. 挂载\"></a>10. 挂载</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ df -h</span><br></pre></td></tr></table></figure>\n<p>在node2上执行 安装ceph-fuse<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ceph@node1:~/opt/ceph$ sudo apt-get install ceph-fuse</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</span><br><span class=\"line\">ceph@node1:~/opt/ceph$ df -h</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"11-注意事项\"><a href=\"#11-注意事项\" class=\"headerlink\" title=\"11. 注意事项\"></a>11. 注意事项</h2><font color=\"red\">用户ceph不能够锁定，为了安全问题，只能将用户ceph改为nologin</font>\n\n<h2 id=\"12-服务器重启\"><a href=\"#12-服务器重启\" class=\"headerlink\" title=\"12. 服务器重启\"></a>12. 服务器重启</h2><p>服务器重启后，对于mon节点来说<code>osd</code>和<code>mon</code>会自动启动<br>osd节点的osd服务也会自动启动</p>\n<p> mon节点的<code>mds</code>服务需要手动启动，启动方法为<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ceph-mds --cluster &#123;cluster-name&#125; -i &#123;id&#125; -m &#123;mon-hostname&#125;:&#123;mon-port&#125; [-f]</span><br></pre></td></tr></table></figure></p>\n<p> <strong>另</strong><br> 启动完mds后还需要执行挂载命令<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</span><br></pre></td></tr></table></figure></p>\n<p> 可以将以上命令<strong>放入到开机启动项中</strong>，但是服务器重启完成后要进行检查ceph的运行状态<br> <code>ceph -s</code>或者<code>ps -ef | grep ceph</code> 或者 通过<code>df -h</code>查看ceph-fuse是否成功挂载目录<br> 如果长时间没成功，并且<code>ceph -s</code>报错，可以尝试将另一节点node2也重启，node1可以成功挂载。</p>\n"},{"title":"git tag操作","date":"2017-03-22T05:17:19.000Z","_content":"\n# 1. 显示本地tag\n不带任何参数执行git tag，即可显示当前版本库里的tag列表\n```\ngit tag\n```\n显示说明 `-n<num>` 显示最多num行的说明\n```\ngit tag -n1\n```\n只显示名称和通配符相符的tag\n```\ngit tag -l string*\n```\n# 2. 创建tag\n## 2.1 创建轻量级里程碑\n```\ngit tag <tagname> [<commitID>]\n```\n## 2.2 创建带说明的tag\n```\ngit tag -a <tagname> [<commitID>]\n或\ngit tag -m <msg> <tagname> [<commitID>] //直接通过-m参数提供tag说明\n```\n\n## 2.3 创建带GnuPG签名的tag\n```\ngit tag -s <tagname> [<commitID>]\n或\ngit tag -u <key-id>  <tagname> [<commitID>] //-u参数选择指定的私钥进行签名\n```\n创建tag需要输入tag的名称(<tagname>)和一个可选的提交ID(<commitID>)。<font color=red>如果没有提供提交ID，则基于头指针HEAD创建tag。</font>\n\n# 3. 删除tag\n本地\n```\ngit tag -d <tagname> \n```\n远程\n```\ngit push origin --delete tag <tagname>\n或\ngit tag -d <tagname> \ngit push origin :refs/tags/<tagname>  #推送一个空tag到远程\n```\n# 4. 提交tag\n提交单个tag\n```\ngit push origin <tagname>\n或\ngit push tag <tagname>\n```\n提交所有tag\n```\ngit push --tags\n或\ngit push origin --tags\n```\n\n","source":"_posts/git-tag操作.md","raw":"---\ntitle: git tag操作\ndate: 2017-03-22 13:17:19\ntags: git\n---\n\n# 1. 显示本地tag\n不带任何参数执行git tag，即可显示当前版本库里的tag列表\n```\ngit tag\n```\n显示说明 `-n<num>` 显示最多num行的说明\n```\ngit tag -n1\n```\n只显示名称和通配符相符的tag\n```\ngit tag -l string*\n```\n# 2. 创建tag\n## 2.1 创建轻量级里程碑\n```\ngit tag <tagname> [<commitID>]\n```\n## 2.2 创建带说明的tag\n```\ngit tag -a <tagname> [<commitID>]\n或\ngit tag -m <msg> <tagname> [<commitID>] //直接通过-m参数提供tag说明\n```\n\n## 2.3 创建带GnuPG签名的tag\n```\ngit tag -s <tagname> [<commitID>]\n或\ngit tag -u <key-id>  <tagname> [<commitID>] //-u参数选择指定的私钥进行签名\n```\n创建tag需要输入tag的名称(<tagname>)和一个可选的提交ID(<commitID>)。<font color=red>如果没有提供提交ID，则基于头指针HEAD创建tag。</font>\n\n# 3. 删除tag\n本地\n```\ngit tag -d <tagname> \n```\n远程\n```\ngit push origin --delete tag <tagname>\n或\ngit tag -d <tagname> \ngit push origin :refs/tags/<tagname>  #推送一个空tag到远程\n```\n# 4. 提交tag\n提交单个tag\n```\ngit push origin <tagname>\n或\ngit push tag <tagname>\n```\n提交所有tag\n```\ngit push --tags\n或\ngit push origin --tags\n```\n\n","slug":"git-tag操作","published":1,"updated":"2018-03-22T22:58:30.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsil0005x0s6x2p76oo6","content":"<h1 id=\"1-显示本地tag\"><a href=\"#1-显示本地tag\" class=\"headerlink\" title=\"1. 显示本地tag\"></a>1. 显示本地tag</h1><p>不带任何参数执行git tag，即可显示当前版本库里的tag列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure></p>\n<p>显示说明 <code>-n&lt;num&gt;</code> 显示最多num行的说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -n1</span><br></pre></td></tr></table></figure></p>\n<p>只显示名称和通配符相符的tag<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -l string*</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-创建tag\"><a href=\"#2-创建tag\" class=\"headerlink\" title=\"2. 创建tag\"></a>2. 创建tag</h1><h2 id=\"2-1-创建轻量级里程碑\"><a href=\"#2-1-创建轻量级里程碑\" class=\"headerlink\" title=\"2.1 创建轻量级里程碑\"></a>2.1 创建轻量级里程碑</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tagname&gt; [&lt;commitID&gt;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-创建带说明的tag\"><a href=\"#2-2-创建带说明的tag\" class=\"headerlink\" title=\"2.2 创建带说明的tag\"></a>2.2 创建带说明的tag</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a &lt;tagname&gt; [&lt;commitID&gt;]</span><br><span class=\"line\">或</span><br><span class=\"line\">git tag -m &lt;msg&gt; &lt;tagname&gt; [&lt;commitID&gt;] //直接通过-m参数提供tag说明</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-创建带GnuPG签名的tag\"><a href=\"#2-3-创建带GnuPG签名的tag\" class=\"headerlink\" title=\"2.3 创建带GnuPG签名的tag\"></a>2.3 创建带GnuPG签名的tag</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -s &lt;tagname&gt; [&lt;commitID&gt;]</span><br><span class=\"line\">或</span><br><span class=\"line\">git tag -u &lt;key-id&gt;  &lt;tagname&gt; [&lt;commitID&gt;] //-u参数选择指定的私钥进行签名</span><br></pre></td></tr></table></figure>\n<p>创建tag需要输入tag的名称(<tagname>)和一个可选的提交ID(<commitid>)。<font color=\"red\">如果没有提供提交ID，则基于头指针HEAD创建tag。</font></commitid></tagname></p>\n<h1 id=\"3-删除tag\"><a href=\"#3-删除tag\" class=\"headerlink\" title=\"3. 删除tag\"></a>3. 删除tag</h1><p>本地<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tagname&gt;</span><br></pre></td></tr></table></figure></p>\n<p>远程<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete tag &lt;tagname&gt;</span><br><span class=\"line\">或</span><br><span class=\"line\">git tag -d &lt;tagname&gt; </span><br><span class=\"line\">git push origin :refs/tags/&lt;tagname&gt;  #推送一个空tag到远程</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"4-提交tag\"><a href=\"#4-提交tag\" class=\"headerlink\" title=\"4. 提交tag\"></a>4. 提交tag</h1><p>提交单个tag<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;tagname&gt;</span><br><span class=\"line\">或</span><br><span class=\"line\">git push tag &lt;tagname&gt;</span><br></pre></td></tr></table></figure></p>\n<p>提交所有tag<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --tags</span><br><span class=\"line\">或</span><br><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-显示本地tag\"><a href=\"#1-显示本地tag\" class=\"headerlink\" title=\"1. 显示本地tag\"></a>1. 显示本地tag</h1><p>不带任何参数执行git tag，即可显示当前版本库里的tag列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure></p>\n<p>显示说明 <code>-n&lt;num&gt;</code> 显示最多num行的说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -n1</span><br></pre></td></tr></table></figure></p>\n<p>只显示名称和通配符相符的tag<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -l string*</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-创建tag\"><a href=\"#2-创建tag\" class=\"headerlink\" title=\"2. 创建tag\"></a>2. 创建tag</h1><h2 id=\"2-1-创建轻量级里程碑\"><a href=\"#2-1-创建轻量级里程碑\" class=\"headerlink\" title=\"2.1 创建轻量级里程碑\"></a>2.1 创建轻量级里程碑</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tagname&gt; [&lt;commitID&gt;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-创建带说明的tag\"><a href=\"#2-2-创建带说明的tag\" class=\"headerlink\" title=\"2.2 创建带说明的tag\"></a>2.2 创建带说明的tag</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -a &lt;tagname&gt; [&lt;commitID&gt;]</span><br><span class=\"line\">或</span><br><span class=\"line\">git tag -m &lt;msg&gt; &lt;tagname&gt; [&lt;commitID&gt;] //直接通过-m参数提供tag说明</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-创建带GnuPG签名的tag\"><a href=\"#2-3-创建带GnuPG签名的tag\" class=\"headerlink\" title=\"2.3 创建带GnuPG签名的tag\"></a>2.3 创建带GnuPG签名的tag</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -s &lt;tagname&gt; [&lt;commitID&gt;]</span><br><span class=\"line\">或</span><br><span class=\"line\">git tag -u &lt;key-id&gt;  &lt;tagname&gt; [&lt;commitID&gt;] //-u参数选择指定的私钥进行签名</span><br></pre></td></tr></table></figure>\n<p>创建tag需要输入tag的名称(<tagname>)和一个可选的提交ID(<commitid>)。<font color=\"red\">如果没有提供提交ID，则基于头指针HEAD创建tag。</font></commitid></tagname></p>\n<h1 id=\"3-删除tag\"><a href=\"#3-删除tag\" class=\"headerlink\" title=\"3. 删除tag\"></a>3. 删除tag</h1><p>本地<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tagname&gt;</span><br></pre></td></tr></table></figure></p>\n<p>远程<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete tag &lt;tagname&gt;</span><br><span class=\"line\">或</span><br><span class=\"line\">git tag -d &lt;tagname&gt; </span><br><span class=\"line\">git push origin :refs/tags/&lt;tagname&gt;  #推送一个空tag到远程</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"4-提交tag\"><a href=\"#4-提交tag\" class=\"headerlink\" title=\"4. 提交tag\"></a>4. 提交tag</h1><p>提交单个tag<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;tagname&gt;</span><br><span class=\"line\">或</span><br><span class=\"line\">git push tag &lt;tagname&gt;</span><br></pre></td></tr></table></figure></p>\n<p>提交所有tag<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --tags</span><br><span class=\"line\">或</span><br><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure></p>\n"},{"title":"docker容器","date":"2017-02-27T09:26:49.000Z","_content":"\n\n## 1. 新建并启动容器\n`docker run`\n例：下面的命令输出一个“Hello World”并终止容器\n```\nsudo docker run ubuntu:14.04 /bin/echo 'Hello World'\nHello World\n```\n启动一个bash终端并允许交互\n```\nsudo docker run -t -i ubuntu:14.04 /bin/bash\nroot@3060c837bd2d:/#\n```\n`-t`让docker分配一个伪终端并绑定到容器的标准输入上，`-i`则让容器的标准输入保持打开。\n\n## 2. 启动已终止的容器\n```\nsudo docker ps -a 找到容器ID\nsudo docker start CONTAINER_ID\n```\n\n## 3. 守护态运行\n```\n$sudo docker run -d ubuntu:14.04 /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n```\n在使用`-d`参数时,容器启动后会进入后台。某些时候需要进入容器进行操作,有很多种方法,包括使用`docker attach`命令或nsenter工具等。\n```\nubuntu@ubuntu:~$ sudo docker ps\nCONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES\n428e85fb5182        ubuntu:12.04        \"/bin/sh -c 'while t   3 minutes ago       Up 3 minutes                            pensive_kirch       \nubuntu@ubuntu:~$ sudo docker attach 428e85fb5182\nhello world\nhello world\nhello world\n^Cubuntu@ubuntu:~$ \nubuntu@ubuntu:~$ sudo docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n```\n获取容器的输出信息，可以通过`docker log`命令。\n```\nsudo docker logs CONTAINER_ID\n```\n\n## 4. 终止容器\n```\nsudo docker stop CONTAINER_ID\n```\n处于终止态的容器可以通过`sudo docker start CONTAINER_ID`命令来重新启动。\n`sudo docker restart CONTAINER_ID`命令可以重启一个运行态的容器。\n\n\n## 5. 进入容器\n```\nsudo docker attach CONTAINER_ID\n```\n用attach命令有时候并不方便。当多个窗口同时attach到同一个容器的时候,所有窗口都会同步显示。当某个窗口因命令阻塞时,其他窗口也无法执行操作了。\n\n\n## 6. 导出容器\n```\nsudo docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS           PORTS             NAMES\n3060c837bd2d        ubuntu:14.04        \"/bin/bash\"              3 days ago          Up 6 hours                         nonghe\n\nsudo docker export 3060c837bd2d > ubuntu.tar\n```\n这样导出容器快照到本地文件。\n\n## 7. 导入容器快照\n```\ncat ubuntu.tar | sudo docker import - test/ubuntu:v1.0\nsudo docker images\n```\n通过指定URL或者某个目录来导入\n```\nsudo docker import http://example.com/exampleimage.tgz example/imagerepo\n```\n既可以使用`docker load`来导入镜像存储文件到本地镜像库，也可以使用`docker import`来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保持容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。\n\n\n## 8. 删除容器\n处于终止状态的容器可以通过如下命令来删除\n```\nsudo docker rm CONTAINER_ID\n```\n如果要删除一个运行中的容器，可以添加`-f`参数。docker会发送SIGKILL信号给容器。\n\n","source":"_posts/docker容器.md","raw":"---\ntitle: docker容器\ndate: 2017-02-27 17:26:49\ntags: docker\n---\n\n\n## 1. 新建并启动容器\n`docker run`\n例：下面的命令输出一个“Hello World”并终止容器\n```\nsudo docker run ubuntu:14.04 /bin/echo 'Hello World'\nHello World\n```\n启动一个bash终端并允许交互\n```\nsudo docker run -t -i ubuntu:14.04 /bin/bash\nroot@3060c837bd2d:/#\n```\n`-t`让docker分配一个伪终端并绑定到容器的标准输入上，`-i`则让容器的标准输入保持打开。\n\n## 2. 启动已终止的容器\n```\nsudo docker ps -a 找到容器ID\nsudo docker start CONTAINER_ID\n```\n\n## 3. 守护态运行\n```\n$sudo docker run -d ubuntu:14.04 /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n```\n在使用`-d`参数时,容器启动后会进入后台。某些时候需要进入容器进行操作,有很多种方法,包括使用`docker attach`命令或nsenter工具等。\n```\nubuntu@ubuntu:~$ sudo docker ps\nCONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES\n428e85fb5182        ubuntu:12.04        \"/bin/sh -c 'while t   3 minutes ago       Up 3 minutes                            pensive_kirch       \nubuntu@ubuntu:~$ sudo docker attach 428e85fb5182\nhello world\nhello world\nhello world\n^Cubuntu@ubuntu:~$ \nubuntu@ubuntu:~$ sudo docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n```\n获取容器的输出信息，可以通过`docker log`命令。\n```\nsudo docker logs CONTAINER_ID\n```\n\n## 4. 终止容器\n```\nsudo docker stop CONTAINER_ID\n```\n处于终止态的容器可以通过`sudo docker start CONTAINER_ID`命令来重新启动。\n`sudo docker restart CONTAINER_ID`命令可以重启一个运行态的容器。\n\n\n## 5. 进入容器\n```\nsudo docker attach CONTAINER_ID\n```\n用attach命令有时候并不方便。当多个窗口同时attach到同一个容器的时候,所有窗口都会同步显示。当某个窗口因命令阻塞时,其他窗口也无法执行操作了。\n\n\n## 6. 导出容器\n```\nsudo docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS           PORTS             NAMES\n3060c837bd2d        ubuntu:14.04        \"/bin/bash\"              3 days ago          Up 6 hours                         nonghe\n\nsudo docker export 3060c837bd2d > ubuntu.tar\n```\n这样导出容器快照到本地文件。\n\n## 7. 导入容器快照\n```\ncat ubuntu.tar | sudo docker import - test/ubuntu:v1.0\nsudo docker images\n```\n通过指定URL或者某个目录来导入\n```\nsudo docker import http://example.com/exampleimage.tgz example/imagerepo\n```\n既可以使用`docker load`来导入镜像存储文件到本地镜像库，也可以使用`docker import`来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保持容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。\n\n\n## 8. 删除容器\n处于终止状态的容器可以通过如下命令来删除\n```\nsudo docker rm CONTAINER_ID\n```\n如果要删除一个运行中的容器，可以添加`-f`参数。docker会发送SIGKILL信号给容器。\n\n","slug":"docker容器","published":1,"updated":"2017-03-13T13:34:57.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsio0009x0s696xe9ksy","content":"<h2 id=\"1-新建并启动容器\"><a href=\"#1-新建并启动容器\" class=\"headerlink\" title=\"1. 新建并启动容器\"></a>1. 新建并启动容器</h2><p><code>docker run</code><br>例：下面的命令输出一个“Hello World”并终止容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run ubuntu:14.04 /bin/echo &apos;Hello World&apos;</span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure></p>\n<p>启动一个bash终端并允许交互<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -t -i ubuntu:14.04 /bin/bash</span><br><span class=\"line\">root@3060c837bd2d:/#</span><br></pre></td></tr></table></figure></p>\n<p><code>-t</code>让docker分配一个伪终端并绑定到容器的标准输入上，<code>-i</code>则让容器的标准输入保持打开。</p>\n<h2 id=\"2-启动已终止的容器\"><a href=\"#2-启动已终止的容器\" class=\"headerlink\" title=\"2. 启动已终止的容器\"></a>2. 启动已终止的容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker ps -a 找到容器ID</span><br><span class=\"line\">sudo docker start CONTAINER_ID</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-守护态运行\"><a href=\"#3-守护态运行\" class=\"headerlink\" title=\"3. 守护态运行\"></a>3. 守护态运行</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo docker run -d ubuntu:14.04 /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</span><br></pre></td></tr></table></figure>\n<p>在使用<code>-d</code>参数时,容器启动后会进入后台。某些时候需要进入容器进行操作,有很多种方法,包括使用<code>docker attach</code>命令或nsenter工具等。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker ps</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES</span><br><span class=\"line\">428e85fb5182        ubuntu:12.04        &quot;/bin/sh -c &apos;while t   3 minutes ago       Up 3 minutes                            pensive_kirch       </span><br><span class=\"line\">ubuntu@ubuntu:~$ sudo docker attach 428e85fb5182</span><br><span class=\"line\">hello world</span><br><span class=\"line\">hello world</span><br><span class=\"line\">hello world</span><br><span class=\"line\">^Cubuntu@ubuntu:~$ </span><br><span class=\"line\">ubuntu@ubuntu:~$ sudo docker ps</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br></pre></td></tr></table></figure></p>\n<p>获取容器的输出信息，可以通过<code>docker log</code>命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker logs CONTAINER_ID</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-终止容器\"><a href=\"#4-终止容器\" class=\"headerlink\" title=\"4. 终止容器\"></a>4. 终止容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker stop CONTAINER_ID</span><br></pre></td></tr></table></figure>\n<p>处于终止态的容器可以通过<code>sudo docker start CONTAINER_ID</code>命令来重新启动。<br><code>sudo docker restart CONTAINER_ID</code>命令可以重启一个运行态的容器。</p>\n<h2 id=\"5-进入容器\"><a href=\"#5-进入容器\" class=\"headerlink\" title=\"5. 进入容器\"></a>5. 进入容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker attach CONTAINER_ID</span><br></pre></td></tr></table></figure>\n<p>用attach命令有时候并不方便。当多个窗口同时attach到同一个容器的时候,所有窗口都会同步显示。当某个窗口因命令阻塞时,其他窗口也无法执行操作了。</p>\n<h2 id=\"6-导出容器\"><a href=\"#6-导出容器\" class=\"headerlink\" title=\"6. 导出容器\"></a>6. 导出容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS           PORTS             NAMES</span><br><span class=\"line\">3060c837bd2d        ubuntu:14.04        &quot;/bin/bash&quot;              3 days ago          Up 6 hours                         nonghe</span><br><span class=\"line\"></span><br><span class=\"line\">sudo docker export 3060c837bd2d &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>\n<p>这样导出容器快照到本地文件。</p>\n<h2 id=\"7-导入容器快照\"><a href=\"#7-导入容器快照\" class=\"headerlink\" title=\"7. 导入容器快照\"></a>7. 导入容器快照</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ubuntu.tar | sudo docker import - test/ubuntu:v1.0</span><br><span class=\"line\">sudo docker images</span><br></pre></td></tr></table></figure>\n<p>通过指定URL或者某个目录来导入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker import http://example.com/exampleimage.tgz example/imagerepo</span><br></pre></td></tr></table></figure></p>\n<p>既可以使用<code>docker load</code>来导入镜像存储文件到本地镜像库，也可以使用<code>docker import</code>来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保持容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</p>\n<h2 id=\"8-删除容器\"><a href=\"#8-删除容器\" class=\"headerlink\" title=\"8. 删除容器\"></a>8. 删除容器</h2><p>处于终止状态的容器可以通过如下命令来删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker rm CONTAINER_ID</span><br></pre></td></tr></table></figure></p>\n<p>如果要删除一个运行中的容器，可以添加<code>-f</code>参数。docker会发送SIGKILL信号给容器。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-新建并启动容器\"><a href=\"#1-新建并启动容器\" class=\"headerlink\" title=\"1. 新建并启动容器\"></a>1. 新建并启动容器</h2><p><code>docker run</code><br>例：下面的命令输出一个“Hello World”并终止容器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run ubuntu:14.04 /bin/echo &apos;Hello World&apos;</span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure></p>\n<p>启动一个bash终端并允许交互<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -t -i ubuntu:14.04 /bin/bash</span><br><span class=\"line\">root@3060c837bd2d:/#</span><br></pre></td></tr></table></figure></p>\n<p><code>-t</code>让docker分配一个伪终端并绑定到容器的标准输入上，<code>-i</code>则让容器的标准输入保持打开。</p>\n<h2 id=\"2-启动已终止的容器\"><a href=\"#2-启动已终止的容器\" class=\"headerlink\" title=\"2. 启动已终止的容器\"></a>2. 启动已终止的容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker ps -a 找到容器ID</span><br><span class=\"line\">sudo docker start CONTAINER_ID</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-守护态运行\"><a href=\"#3-守护态运行\" class=\"headerlink\" title=\"3. 守护态运行\"></a>3. 守护态运行</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo docker run -d ubuntu:14.04 /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</span><br></pre></td></tr></table></figure>\n<p>在使用<code>-d</code>参数时,容器启动后会进入后台。某些时候需要进入容器进行操作,有很多种方法,包括使用<code>docker attach</code>命令或nsenter工具等。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu@ubuntu:~$ sudo docker ps</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES</span><br><span class=\"line\">428e85fb5182        ubuntu:12.04        &quot;/bin/sh -c &apos;while t   3 minutes ago       Up 3 minutes                            pensive_kirch       </span><br><span class=\"line\">ubuntu@ubuntu:~$ sudo docker attach 428e85fb5182</span><br><span class=\"line\">hello world</span><br><span class=\"line\">hello world</span><br><span class=\"line\">hello world</span><br><span class=\"line\">^Cubuntu@ubuntu:~$ </span><br><span class=\"line\">ubuntu@ubuntu:~$ sudo docker ps</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br></pre></td></tr></table></figure></p>\n<p>获取容器的输出信息，可以通过<code>docker log</code>命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker logs CONTAINER_ID</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-终止容器\"><a href=\"#4-终止容器\" class=\"headerlink\" title=\"4. 终止容器\"></a>4. 终止容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker stop CONTAINER_ID</span><br></pre></td></tr></table></figure>\n<p>处于终止态的容器可以通过<code>sudo docker start CONTAINER_ID</code>命令来重新启动。<br><code>sudo docker restart CONTAINER_ID</code>命令可以重启一个运行态的容器。</p>\n<h2 id=\"5-进入容器\"><a href=\"#5-进入容器\" class=\"headerlink\" title=\"5. 进入容器\"></a>5. 进入容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker attach CONTAINER_ID</span><br></pre></td></tr></table></figure>\n<p>用attach命令有时候并不方便。当多个窗口同时attach到同一个容器的时候,所有窗口都会同步显示。当某个窗口因命令阻塞时,其他窗口也无法执行操作了。</p>\n<h2 id=\"6-导出容器\"><a href=\"#6-导出容器\" class=\"headerlink\" title=\"6. 导出容器\"></a>6. 导出容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker ps -a</span><br><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS           PORTS             NAMES</span><br><span class=\"line\">3060c837bd2d        ubuntu:14.04        &quot;/bin/bash&quot;              3 days ago          Up 6 hours                         nonghe</span><br><span class=\"line\"></span><br><span class=\"line\">sudo docker export 3060c837bd2d &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>\n<p>这样导出容器快照到本地文件。</p>\n<h2 id=\"7-导入容器快照\"><a href=\"#7-导入容器快照\" class=\"headerlink\" title=\"7. 导入容器快照\"></a>7. 导入容器快照</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat ubuntu.tar | sudo docker import - test/ubuntu:v1.0</span><br><span class=\"line\">sudo docker images</span><br></pre></td></tr></table></figure>\n<p>通过指定URL或者某个目录来导入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker import http://example.com/exampleimage.tgz example/imagerepo</span><br></pre></td></tr></table></figure></p>\n<p>既可以使用<code>docker load</code>来导入镜像存储文件到本地镜像库，也可以使用<code>docker import</code>来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保持容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</p>\n<h2 id=\"8-删除容器\"><a href=\"#8-删除容器\" class=\"headerlink\" title=\"8. 删除容器\"></a>8. 删除容器</h2><p>处于终止状态的容器可以通过如下命令来删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker rm CONTAINER_ID</span><br></pre></td></tr></table></figure></p>\n<p>如果要删除一个运行中的容器，可以添加<code>-f</code>参数。docker会发送SIGKILL信号给容器。</p>\n"},{"title":"git bisect","date":"2017-08-30T14:06:12.000Z","_content":"\n# git bisect\n在提交了多次代码后，发现代码不能正确运行了，但是很确定的是某一个commit是好使的，比如昨天晚上或者上午的某次提交是可以正确运行的，这个时候可以通过`git bisect`来通过二分查找出问题的那次提交\n\n## 1. 开始\n```\ngit bisect start\n```\n## 2.标记当前的HEAD为bad\n```\ngit bisect bad\n```\n\n## 3.标记最近一次可以正确运行的commit为good\n```\ngit bisect good <commit-id> \n```\n## 4.检查中间的那次提交状态是正确还是错误\n- 如果是正确，标记为good\n```\ngit bisect good\n```\n这时候，git会从这个good到最初标记的bad进行二分查找\n\n- 如果是出错的，标记为bad\n```\ngit bisect bad\n```\n这时候，git会从这个bad到最初标记的good位置进行二分查找\n\n\n## 5.重复步骤4\n即可找到最初的bad是在哪次commit不小心引入的。\n\n## 6.结束\n查找到引入bug的commit之后，回到最初的HEAD\n```\ngit bisect reset\n```\n\n\n\n\n\n\n\n\n","source":"_posts/git-bisect.md","raw":"---\ntitle: git bisect\ndate: 2017-08-30 22:06:12\ntags: git\n---\n\n# git bisect\n在提交了多次代码后，发现代码不能正确运行了，但是很确定的是某一个commit是好使的，比如昨天晚上或者上午的某次提交是可以正确运行的，这个时候可以通过`git bisect`来通过二分查找出问题的那次提交\n\n## 1. 开始\n```\ngit bisect start\n```\n## 2.标记当前的HEAD为bad\n```\ngit bisect bad\n```\n\n## 3.标记最近一次可以正确运行的commit为good\n```\ngit bisect good <commit-id> \n```\n## 4.检查中间的那次提交状态是正确还是错误\n- 如果是正确，标记为good\n```\ngit bisect good\n```\n这时候，git会从这个good到最初标记的bad进行二分查找\n\n- 如果是出错的，标记为bad\n```\ngit bisect bad\n```\n这时候，git会从这个bad到最初标记的good位置进行二分查找\n\n\n## 5.重复步骤4\n即可找到最初的bad是在哪次commit不小心引入的。\n\n## 6.结束\n查找到引入bug的commit之后，回到最初的HEAD\n```\ngit bisect reset\n```\n\n\n\n\n\n\n\n\n","slug":"git-bisect","published":1,"updated":"2017-08-30T14:10:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsip000ax0s6g7xntqt1","content":"<h1 id=\"git-bisect\"><a href=\"#git-bisect\" class=\"headerlink\" title=\"git bisect\"></a>git bisect</h1><p>在提交了多次代码后，发现代码不能正确运行了，但是很确定的是某一个commit是好使的，比如昨天晚上或者上午的某次提交是可以正确运行的，这个时候可以通过<code>git bisect</code>来通过二分查找出问题的那次提交</p>\n<h2 id=\"1-开始\"><a href=\"#1-开始\" class=\"headerlink\" title=\"1. 开始\"></a>1. 开始</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect start</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-标记当前的HEAD为bad\"><a href=\"#2-标记当前的HEAD为bad\" class=\"headerlink\" title=\"2.标记当前的HEAD为bad\"></a>2.标记当前的HEAD为bad</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect bad</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-标记最近一次可以正确运行的commit为good\"><a href=\"#3-标记最近一次可以正确运行的commit为good\" class=\"headerlink\" title=\"3.标记最近一次可以正确运行的commit为good\"></a>3.标记最近一次可以正确运行的commit为good</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect good &lt;commit-id&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-检查中间的那次提交状态是正确还是错误\"><a href=\"#4-检查中间的那次提交状态是正确还是错误\" class=\"headerlink\" title=\"4.检查中间的那次提交状态是正确还是错误\"></a>4.检查中间的那次提交状态是正确还是错误</h2><ul>\n<li>如果是正确，标记为good<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect good</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这时候，git会从这个good到最初标记的bad进行二分查找</p>\n<ul>\n<li>如果是出错的，标记为bad<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect bad</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这时候，git会从这个bad到最初标记的good位置进行二分查找</p>\n<h2 id=\"5-重复步骤4\"><a href=\"#5-重复步骤4\" class=\"headerlink\" title=\"5.重复步骤4\"></a>5.重复步骤4</h2><p>即可找到最初的bad是在哪次commit不小心引入的。</p>\n<h2 id=\"6-结束\"><a href=\"#6-结束\" class=\"headerlink\" title=\"6.结束\"></a>6.结束</h2><p>查找到引入bug的commit之后，回到最初的HEAD<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect reset</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"git-bisect\"><a href=\"#git-bisect\" class=\"headerlink\" title=\"git bisect\"></a>git bisect</h1><p>在提交了多次代码后，发现代码不能正确运行了，但是很确定的是某一个commit是好使的，比如昨天晚上或者上午的某次提交是可以正确运行的，这个时候可以通过<code>git bisect</code>来通过二分查找出问题的那次提交</p>\n<h2 id=\"1-开始\"><a href=\"#1-开始\" class=\"headerlink\" title=\"1. 开始\"></a>1. 开始</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect start</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-标记当前的HEAD为bad\"><a href=\"#2-标记当前的HEAD为bad\" class=\"headerlink\" title=\"2.标记当前的HEAD为bad\"></a>2.标记当前的HEAD为bad</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect bad</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-标记最近一次可以正确运行的commit为good\"><a href=\"#3-标记最近一次可以正确运行的commit为good\" class=\"headerlink\" title=\"3.标记最近一次可以正确运行的commit为good\"></a>3.标记最近一次可以正确运行的commit为good</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect good &lt;commit-id&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-检查中间的那次提交状态是正确还是错误\"><a href=\"#4-检查中间的那次提交状态是正确还是错误\" class=\"headerlink\" title=\"4.检查中间的那次提交状态是正确还是错误\"></a>4.检查中间的那次提交状态是正确还是错误</h2><ul>\n<li>如果是正确，标记为good<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect good</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这时候，git会从这个good到最初标记的bad进行二分查找</p>\n<ul>\n<li>如果是出错的，标记为bad<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect bad</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这时候，git会从这个bad到最初标记的good位置进行二分查找</p>\n<h2 id=\"5-重复步骤4\"><a href=\"#5-重复步骤4\" class=\"headerlink\" title=\"5.重复步骤4\"></a>5.重复步骤4</h2><p>即可找到最初的bad是在哪次commit不小心引入的。</p>\n<h2 id=\"6-结束\"><a href=\"#6-结束\" class=\"headerlink\" title=\"6.结束\"></a>6.结束</h2><p>查找到引入bug的commit之后，回到最初的HEAD<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git bisect reset</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Hello World","date":"2017-01-10T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-01-11 \n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-03-13T13:42:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsir000dx0s6ds57e4oq","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"git 基本操作","date":"2017-01-11T03:54:12.000Z","_content":"\n## 1 安装\n- ubuntu\n```\n$ sudo apt-get install git gitk\n```\n- windows\n[下载链接](https://www.git-scm.com/download/win)\n- 其他系统\n[点击这里](https://www.git-scm.com/downloads)\n\n\n## 2 设置\n- 全局设置（你的每次提交都会使用这些设置）  \n```\n$ git config --global user.name \"姓名\"\n$ git config --global user.email \"邮箱地址\"\n```\n- 局部设置（只在当前项目中生效）\n```\n$ git config --local user.name \"姓名\"\n$ git config --local user.email \"邮箱地址\"\n```\n\n## 3 更新本地代码\n```\n$ cd the/project/directory\n$ git pull\n```\n\n## 4 提交代码\n修改完成之后 提交修改的步骤如下\n### 4.1 查看修改的文件\n```\n$ git status\n```\n### 4.2 查看修改的内容\n```\n$ git diff\n```\n### 4.3 从服务器上更新代码\n```\n$ git pull\n```\n### 4.4 将修改添加到本地仓库\n```\n$ git add 修改的文件名\n```\n```\n$ git add . (当前目录下的所有修改)\n```\n例如 \n```\ngit add a.txt c/b.txt\n```\n### 4.5 添加本次修改的描述\n```\n$ git commit -m \"大致说明本次修改了什么\"\n```\n### 4.6 将本地修改提交到服务器\n```\n$ git push\n```\n## 5 分支操作\n### 5.1 查看所有分支\n```\n$ git branch -a\n```\n### 5.2 切换分支\n- 第一次切换\n```\n$ git checkout -b *** origin/***\n```\n- 以后切换\n```\n$ git checkout ***\n```\n### 5.3 删除本地分支\n```\n$ git checkout the/other/branch\n$ git branch -D the/delete/branch\n```\n\n** 补充 **  \n[点击查看更详细的用法](https://mp.weixin.qq.com/s?__biz=MjM5NjQ4MjYwMQ==&mid=207476935&idx=1&sn=7e2df0fc83583b2970be033e295d595d&scene=4&srcid=0914UZRLJAd9vzLoflDXei0Y&pass_ticket=HC7otQjvd7%2FlrKPIl%2FUdQOZ4wjnTDDOzJXOZps0L2JZRnBVO0WgCnxedN7YVcvQi#rd)\n","source":"_posts/git-基本操作.md","raw":"---\ntitle: git 基本操作 \ndate: 2017-01-11 11:54:12\ncategories: git\ntags: git\n---\n\n## 1 安装\n- ubuntu\n```\n$ sudo apt-get install git gitk\n```\n- windows\n[下载链接](https://www.git-scm.com/download/win)\n- 其他系统\n[点击这里](https://www.git-scm.com/downloads)\n\n\n## 2 设置\n- 全局设置（你的每次提交都会使用这些设置）  \n```\n$ git config --global user.name \"姓名\"\n$ git config --global user.email \"邮箱地址\"\n```\n- 局部设置（只在当前项目中生效）\n```\n$ git config --local user.name \"姓名\"\n$ git config --local user.email \"邮箱地址\"\n```\n\n## 3 更新本地代码\n```\n$ cd the/project/directory\n$ git pull\n```\n\n## 4 提交代码\n修改完成之后 提交修改的步骤如下\n### 4.1 查看修改的文件\n```\n$ git status\n```\n### 4.2 查看修改的内容\n```\n$ git diff\n```\n### 4.3 从服务器上更新代码\n```\n$ git pull\n```\n### 4.4 将修改添加到本地仓库\n```\n$ git add 修改的文件名\n```\n```\n$ git add . (当前目录下的所有修改)\n```\n例如 \n```\ngit add a.txt c/b.txt\n```\n### 4.5 添加本次修改的描述\n```\n$ git commit -m \"大致说明本次修改了什么\"\n```\n### 4.6 将本地修改提交到服务器\n```\n$ git push\n```\n## 5 分支操作\n### 5.1 查看所有分支\n```\n$ git branch -a\n```\n### 5.2 切换分支\n- 第一次切换\n```\n$ git checkout -b *** origin/***\n```\n- 以后切换\n```\n$ git checkout ***\n```\n### 5.3 删除本地分支\n```\n$ git checkout the/other/branch\n$ git branch -D the/delete/branch\n```\n\n** 补充 **  \n[点击查看更详细的用法](https://mp.weixin.qq.com/s?__biz=MjM5NjQ4MjYwMQ==&mid=207476935&idx=1&sn=7e2df0fc83583b2970be033e295d595d&scene=4&srcid=0914UZRLJAd9vzLoflDXei0Y&pass_ticket=HC7otQjvd7%2FlrKPIl%2FUdQOZ4wjnTDDOzJXOZps0L2JZRnBVO0WgCnxedN7YVcvQi#rd)\n","slug":"git-基本操作","published":1,"updated":"2017-01-12T08:51:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsis000fx0s6nzjczgt3","content":"<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1 安装\"></a>1 安装</h2><ul>\n<li><p>ubuntu</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install git gitk</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>windows<br><a href=\"https://www.git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">下载链接</a></p>\n</li>\n<li>其他系统<br><a href=\"https://www.git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">点击这里</a></li>\n</ul>\n<h2 id=\"2-设置\"><a href=\"#2-设置\" class=\"headerlink\" title=\"2 设置\"></a>2 设置</h2><ul>\n<li><p>全局设置（你的每次提交都会使用这些设置）  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;姓名&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>局部设置（只在当前项目中生效）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --local user.name &quot;姓名&quot;</span><br><span class=\"line\">$ git config --local user.email &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-更新本地代码\"><a href=\"#3-更新本地代码\" class=\"headerlink\" title=\"3 更新本地代码\"></a>3 更新本地代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd the/project/directory</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-提交代码\"><a href=\"#4-提交代码\" class=\"headerlink\" title=\"4 提交代码\"></a>4 提交代码</h2><p>修改完成之后 提交修改的步骤如下</p>\n<h3 id=\"4-1-查看修改的文件\"><a href=\"#4-1-查看修改的文件\" class=\"headerlink\" title=\"4.1 查看修改的文件\"></a>4.1 查看修改的文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-查看修改的内容\"><a href=\"#4-2-查看修改的内容\" class=\"headerlink\" title=\"4.2 查看修改的内容\"></a>4.2 查看修改的内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-从服务器上更新代码\"><a href=\"#4-3-从服务器上更新代码\" class=\"headerlink\" title=\"4.3 从服务器上更新代码\"></a>4.3 从服务器上更新代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-将修改添加到本地仓库\"><a href=\"#4-4-将修改添加到本地仓库\" class=\"headerlink\" title=\"4.4 将修改添加到本地仓库\"></a>4.4 将修改添加到本地仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add 修改的文件名</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add . (当前目录下的所有修改)</span><br></pre></td></tr></table></figure>\n<p>例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add a.txt c/b.txt</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-5-添加本次修改的描述\"><a href=\"#4-5-添加本次修改的描述\" class=\"headerlink\" title=\"4.5 添加本次修改的描述\"></a>4.5 添加本次修改的描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &quot;大致说明本次修改了什么&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-6-将本地修改提交到服务器\"><a href=\"#4-6-将本地修改提交到服务器\" class=\"headerlink\" title=\"4.6 将本地修改提交到服务器\"></a>4.6 将本地修改提交到服务器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-分支操作\"><a href=\"#5-分支操作\" class=\"headerlink\" title=\"5 分支操作\"></a>5 分支操作</h2><h3 id=\"5-1-查看所有分支\"><a href=\"#5-1-查看所有分支\" class=\"headerlink\" title=\"5.1 查看所有分支\"></a>5.1 查看所有分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -a</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-切换分支\"><a href=\"#5-2-切换分支\" class=\"headerlink\" title=\"5.2 切换分支\"></a>5.2 切换分支</h3><ul>\n<li><p>第一次切换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b *** origin/***</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以后切换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout ***</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"5-3-删除本地分支\"><a href=\"#5-3-删除本地分支\" class=\"headerlink\" title=\"5.3 删除本地分支\"></a>5.3 删除本地分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout the/other/branch</span><br><span class=\"line\">$ git branch -D the/delete/branch</span><br></pre></td></tr></table></figure>\n<p><strong> 补充 </strong><br><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5NjQ4MjYwMQ==&amp;mid=207476935&amp;idx=1&amp;sn=7e2df0fc83583b2970be033e295d595d&amp;scene=4&amp;srcid=0914UZRLJAd9vzLoflDXei0Y&amp;pass_ticket=HC7otQjvd7%2FlrKPIl%2FUdQOZ4wjnTDDOzJXOZps0L2JZRnBVO0WgCnxedN7YVcvQi#rd\" target=\"_blank\" rel=\"noopener\">点击查看更详细的用法</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1 安装\"></a>1 安装</h2><ul>\n<li><p>ubuntu</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install git gitk</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>windows<br><a href=\"https://www.git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">下载链接</a></p>\n</li>\n<li>其他系统<br><a href=\"https://www.git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">点击这里</a></li>\n</ul>\n<h2 id=\"2-设置\"><a href=\"#2-设置\" class=\"headerlink\" title=\"2 设置\"></a>2 设置</h2><ul>\n<li><p>全局设置（你的每次提交都会使用这些设置）  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;姓名&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>局部设置（只在当前项目中生效）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --local user.name &quot;姓名&quot;</span><br><span class=\"line\">$ git config --local user.email &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-更新本地代码\"><a href=\"#3-更新本地代码\" class=\"headerlink\" title=\"3 更新本地代码\"></a>3 更新本地代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd the/project/directory</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-提交代码\"><a href=\"#4-提交代码\" class=\"headerlink\" title=\"4 提交代码\"></a>4 提交代码</h2><p>修改完成之后 提交修改的步骤如下</p>\n<h3 id=\"4-1-查看修改的文件\"><a href=\"#4-1-查看修改的文件\" class=\"headerlink\" title=\"4.1 查看修改的文件\"></a>4.1 查看修改的文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-查看修改的内容\"><a href=\"#4-2-查看修改的内容\" class=\"headerlink\" title=\"4.2 查看修改的内容\"></a>4.2 查看修改的内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-从服务器上更新代码\"><a href=\"#4-3-从服务器上更新代码\" class=\"headerlink\" title=\"4.3 从服务器上更新代码\"></a>4.3 从服务器上更新代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-将修改添加到本地仓库\"><a href=\"#4-4-将修改添加到本地仓库\" class=\"headerlink\" title=\"4.4 将修改添加到本地仓库\"></a>4.4 将修改添加到本地仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add 修改的文件名</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add . (当前目录下的所有修改)</span><br></pre></td></tr></table></figure>\n<p>例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add a.txt c/b.txt</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-5-添加本次修改的描述\"><a href=\"#4-5-添加本次修改的描述\" class=\"headerlink\" title=\"4.5 添加本次修改的描述\"></a>4.5 添加本次修改的描述</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &quot;大致说明本次修改了什么&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-6-将本地修改提交到服务器\"><a href=\"#4-6-将本地修改提交到服务器\" class=\"headerlink\" title=\"4.6 将本地修改提交到服务器\"></a>4.6 将本地修改提交到服务器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-分支操作\"><a href=\"#5-分支操作\" class=\"headerlink\" title=\"5 分支操作\"></a>5 分支操作</h2><h3 id=\"5-1-查看所有分支\"><a href=\"#5-1-查看所有分支\" class=\"headerlink\" title=\"5.1 查看所有分支\"></a>5.1 查看所有分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -a</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-切换分支\"><a href=\"#5-2-切换分支\" class=\"headerlink\" title=\"5.2 切换分支\"></a>5.2 切换分支</h3><ul>\n<li><p>第一次切换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b *** origin/***</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>以后切换</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout ***</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"5-3-删除本地分支\"><a href=\"#5-3-删除本地分支\" class=\"headerlink\" title=\"5.3 删除本地分支\"></a>5.3 删除本地分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout the/other/branch</span><br><span class=\"line\">$ git branch -D the/delete/branch</span><br></pre></td></tr></table></figure>\n<p><strong> 补充 </strong><br><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5NjQ4MjYwMQ==&amp;mid=207476935&amp;idx=1&amp;sn=7e2df0fc83583b2970be033e295d595d&amp;scene=4&amp;srcid=0914UZRLJAd9vzLoflDXei0Y&amp;pass_ticket=HC7otQjvd7%2FlrKPIl%2FUdQOZ4wjnTDDOzJXOZps0L2JZRnBVO0WgCnxedN7YVcvQi#rd\" target=\"_blank\" rel=\"noopener\">点击查看更详细的用法</a></p>\n"},{"title":"linux系统监控基本命令","date":"2017-03-25T09:09:57.000Z","_content":"\n## 1. nmon软件\n\n### 1.1 运行nmon软件\n\n```\n:~$ nmon \n```\n\n```\n┌nmon─14g──────[H for help]───Hostname=localhost────Refresh= 2secs ───16:48.29────────────────────────┐\n------------------------------       For help type H or ...                                           │\n│  #    #  #    #   ####   #    #        nmon -?  - hint                                              │\n│  ##   #  ##  ##  #    #  ##   #        nmon -h  - full                                              │\n│  # #  #  # ## #  #    #  # #  #                                                                     │\n│  #  # #  #    #  #    #  #  # #       To start the same way every time                              │\n│  #   ##  #    #  #    #  #   ##        set the NMON ksh variable                                    │\n│  #    #  #    #   ####   #    #                                                                     │\n│  ------------------------------                                                                     │\n│                                                                                                     │\n│  Use these keys to toggle statistics on/off:                                                        │\n│     c = CPU        l = CPU Long-term   - = Faster screen updates                                    │\n│     m = Memory     j = Filesystems     + = Slower screen updates                                    │\n│     d = Disks      n = Network         V = Virtual Memory                                           │\n│     r = Resource   N = NFS             v = Verbose hints                                            │\n│     k = kernel     t = Top-processes   . = only busy disks/procs                                    │\n│     h = more options                 q = Quit                                                       │\n│─────────────────────────────────────────────────────────────────────────────────────────────────────│\n```\n\n\n### 1.2 显示CPU信息\n\n```\n│ CPU Utilisation ──────────────────────────────────────────────────────────────\n│---------------------------+-------------------------------------------------+\n│CPU  User%  Sys% Wait% Idle|0          |25         |50          |75       100|\n│  1  15.2   1.5   0.0  83.2|UUUUUUU           >                              |\n│  2   7.1   2.6   0.0  90.3|UUUs             >                               |\n│  3  17.5   1.0   0.5  81.0|UUUUUUUU        >                                |\n│  4  13.6   3.0   0.0  83.3|UUUUUUs            >                             |\n│---------------------------+-------------------------------------------------+\n│Avg  13.4   2.1   0.3  84.3|UUUUUUs        >                                 |\n│---------------------------+-------------------------------------------------+\n\n```\n\n### 1.3 显示内存信息\n```\n│ Memory Stats ──────────────────────────────────────────────────────────────────\n                RAM     High      Low     Swap    Page Size=4 KB\n│ Total MB      7843.5     -0.0     -0.0   3916.0\n│ Free  MB      1259.8     -0.0     -0.0   3915.6\n│ Free Percent    16.1%   100.0%   100.0%   100.0%\n│             MB                  MB                  MB\n│                      Cached=  2912.7     Active=  3842.7\n│ Buffers=   929.4 Swapcached=     0.0  Inactive =  1789.8\n│ Dirty  =     0.1 Writeback =     0.0  Mapped   =   946.5\n│ Slab   =   799.7 Commit_AS =  6624.9 PageTables=    40.2\n\n```\n\n### 1.4 显示磁盘信息\n\n```\n Disk I/O ──/proc/diskstats────mostly in KB/s─────Warning:contains duplicates────\n│DiskName Busy  Read WriteKB|0          |25         |50          |75       100|\n│sda        5%    0.0   42.0|WW>                                              |\n│sda1       0%    0.0    0.0|>                                                |\n│sda2       0%    0.0    0.0|>                                                |\n│sda5       5%    0.0   42.0|WW>                                              |\n│sda6       0%    0.0    0.0|>                                                |\n│Totals Read-MB/s=0.0      Writes-MB/s=0.1      Transfers/sec=12.0 \n\n```\n\n### 1.5 显示网络信息\n\n```\n Network I/O ────────────────────────────────────────────────────────────────────\n│I/F Name Recv=KB/s Trans=KB/s packin packout insize outsize Peak->Recv Trans \n│      lo     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 \n│   wlan0     0.1     0.0       0.5      0.0   215.0    0.0        0.1     0.0 \n│ docker0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 \n│    eth0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0\n│ Network Error Counters ─────────────────────────────────────────────────────────\n│I/F Name iErrors iDrop iOverrun iFrame oErrors   oDrop oOverrun oCarrier oColls\n│      lo       0       0       0       0       0       0       0       0       0\n│   wlan0       0       0       0       0       0       0       0       0       0\n│ docker0       0       0       0       0       0       0       0       0       0\n│    eth0       0       0       0       0       0       0       0       0       0\n```\n\n### 1.6 显示内核信息\n```\nKernel Stats ────────────────────────────────────────────────────────────────────\n│ RunQueue              3   Load Average    CPU use since boot time\n│ ContextSwitch    2735.0    1 mins  0.54    Uptime Days=  0 Hours= 7 Mins=58\n│ Forks               0.5    5 mins  0.86    Idle   Days=  1 Hours= 1 Mins=36\n│ Interrupts        836.9   15 mins  0.92    Average CPU use=-221.51%\n\n```\n\n## 2. ethstatus\n`ethstatus`可以实时监控网卡的带宽占用。\n\n```\n───────────────────.EthStatus v0.4a.──────────────────────────────[0/910]──────────────────────│\n│                                                                                              │\n│                                                                                              │\n│                      ######                                                                  │\n│                                                                                              │\n│         ###                                                                                  │\n│        ON/OFF                      RX  TX                                                    │\n│                            0.00 B/s   0 Packets/s                                            │\n│                                                                                              │\n│                                                                                              │\n│     IP Address:          192.168.1.116                                                       │\n│     Interface name:      wlan0         Graphic Using Speed:    9.77 MB/s                     │\n│     Top Speed:           732.00 B/s    Top Packets/s:          5                             │\n│     Received Packets:    593428        Transmited Packets:     437965                        │\n│     Received:            399.68 MB     Transmitted:            54.73 MB                      │\n│     Errors on Receiving: 0             Errors on Transmission: 0                             │\n│                                                                                              │\n│                                                                                              │\n\n```\n\n## 3. iftop监控网卡实时流量\n常用参数列表\n\n| 参数 | 含义                                            | 例子                          |\n| --   | --                                              | --                            |\n| -i   | 指定需要监测的网卡                              | sudo iftop -i wlan0           |\n| -n   | 将输出的主机信息都通过ip显示，不进行DNS方向解析 | sudo iftop -n -i wlan0        |\n| -B   | 将输出以byte为单位显示网卡流量，默认是bit       | sudo iftop -B -i wlan0        |\n| -p   | 以混杂模式运行iftop,此时iftop可以作为网络嗅探器 | sudo iftop -p -i wlan0        |\n| -N   | 只显示链接端口号，不显示对应的服务名称          | sudo iftop -N -i wlan0        |\n| -P   | 显示主机及端口信息                              | sudo iftop -P -i wlan0        |\n| -F   | 显示特定网段的网卡进出流量                      | sudo iftop -F 192.168.1.10/24 |\n\n```\n                    12.5kb              25.0kb               37.5kb              50.0kb         [0/37]\n+-------------------+-------------------+--------------------+-------------------+--------------------\n192.168.1.116                         => 101.227.160.102                       17.6kb  3.55kb  1.90kb \n                                      <=                                       7.29kb  1.50kb   807b\n224.0.0.251                           => 192.168.1.165                            0b      0b      0b  \n                                      <=                                       1.72kb  2.21kb   566b\n192.168.1.116                         => 140.206.160.161                       4.89kb  0.98kb  1.21kb\n                                      <=                                       1.18kb   242b    302b\n192.168.1.116                         => 192.168.1.1                              0b    112b     96b  \n                                      <=                                          0b    378b    254b\n239.255.255.250                       => 192.168.1.148                            0b      0b      0b\n                                      <=                                       1.19kb   486b    730b\n224.0.0.251                           => 192.168.1.166                            0b      0b      0b\n                                      <=                                        272b     54b     14b\n192.168.1.165                         => all-routers.mcast.net                    0b     26b      6b\n                                      <=                                          0b      0b      0b\n192.168.1.116                         => 101.226.76.164                           0b      0b   2.11kb\n                                      <=                                          0b      0b    752b  \n192.168.1.116                         => dev                                      0b      0b   1.50kb\n                                      <=                                          0b      0b    544b\n192.168.1.116                         => stage                                    0b      0b   1.40kb\n                                      <=                                          0b      0b    504b\n239.255.255.250                       => 192.168.1.135                            0b      0b      0b\n                                      <=                                          0b      0b    161b\n239.255.255.250                       => 192.168.1.113                            0b      0b      0b\n                                      <=                                          0b      0b    160b\n------------------------------------------------------------------------------------------------------\nTX:             cum:   51.5kB   peak:   44.7kb                        rates:   22.4kb  4.64kb  8.27kb\nRX:                    46.8kB           28.5kb                                 11.6kb  4.87kb  4.94kb\nTOTAL:                 98.4kB           73.2kb                                 34.1kb  9.51kb  13.2kb\n```\n\n## 4. mtr\nmtr是Linux中有一个非常棒的网络连通性判断工具,它结合了`ping`，`traceroute`，`nslookup`的相关特性。\n相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。\n\n常用参数\n\n| 参数       | 说明                                          |\n| --         | --                                            |\n| -s         | 用来指定ping数据包的大小                      |\n| `--no-dns` | 不对IP地址做域名解析                          |\n| -a         | 使用这个参数来设置ICMP返回之间的要求默认是1秒 |\n| `--report` | 给主机发送10个ICMP包，然后输出报告            |\n\n\n```\n                    My traceroute  [v0.85]                                     [0/102]\nlocalhost (0.0.0.0)                            Sun Mar 26 20:25:43 2017\nKeys:  Help   Display mode   Restart statistics   Order of fields   quit\n                                            Packets               Pings\n Host                                    Loss%   Snt   Last   Avg  Best  Wrst StDev\n 1. 192.168.0.1                           0.0%     8    1.5   2.3   1.3   4.3   0.8\n 2. 192.168.1.1                           0.0%     8    1.7   4.6   1.7  13.7   5.2\n 3. 114.245.248.1                         0.0%     8   78.3 108.3   3.7 363.8 149.8\n 4. 123.126.26.45                         0.0%     8    7.9  19.6   3.8  76.7  26.3\n 5. 61.148.158.53                         0.0%     8    7.2  12.2   5.1  31.6   9.2\n 6. 61.51.115.106                         0.0%     8   78.8  15.4   4.6  78.8  25.7\n 7. 61.49.168.110                         0.0%     8    4.9   7.1   4.8  12.8   2.7\n 8. ???\n 9. ???\n10. 61.135.169.121                        0.0%     7    4.3   5.9   4.2  10.9   2.2\n\n```\n**说明**\n当分析mtr的输出时，需要注意两点:loss和latency\n如果你在任何一跳上看到loss的百分比，这就说明这一跳上可能有问题。当然也有可能是服务提供商人为限制了ICMP发送的速率，也会导致丢包。如果下一跳没有丢包，那说明该丢包是人为限制的。\n如果第4跳和第5跳都有50%的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是30%的丢包率，我们可以猜测30%的丢包率除了网络糟糕的原因之前还有人为限制ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。当出现短暂的10%丢包率的时候，不必担心，应用层的程序会弥补这点损失。\n\n## 5. htop\n常用功能键\n\n| 按键 | 说明                                       |\n| --   | --                                         |\n| F1   | 帮助                                       |\n| F2   | 设置                                       |\n| F3   | 搜索进程                                   |\n| F4   | 过滤器，按关键字搜索                       |\n| F5   | 显示树形结构                               |\n| F6   | 选择排序方式                               |\n| F7   | 减少nice值，可以提高对应进程的优先级       |\n| F8   | 增加nice值，可以降低对应进程的优先级       |\n| F9   | 杀掉选中的进程                             |\n| F10  | 退出                                       |\n| /    | 搜索字符                                   |\n| h    | 显示帮助                                   |\n| l    | 显示进程打开的文件 lsof                    |\n| u    | 显示所有用户，并可以选择某一特定用户的进程 |\n| s    | 将调用strace追踪进程的系统调用             |\n| t    | 显示树形结构                               |\n| H    | 显示/隐藏用户线程                          |\n| I    | 倒转排序                                   |\n| K    | 显示/隐藏内核线程                          |\n| M    | 按内存占用排序                             |\n| P    | 按CPU排序                                  |\n| T    | 按运行时间排序                             |\n\nhtop的左上角显示CPU、内存、交换区的使用情况，右边显示任务、负载、开机时间，下面是进程实时状态。\n最后一行是F1～F10的功能菜单和对应的字符快捷键。\n\n## 6. linux系统性能分析\n分析次序为cpu mem disk network\n","source":"_posts/linux系统监控基本命令.md","raw":"---\ntitle: linux系统监控基本命令\ndate: 2017-03-25 17:09:57\ntags: linux\n---\n\n## 1. nmon软件\n\n### 1.1 运行nmon软件\n\n```\n:~$ nmon \n```\n\n```\n┌nmon─14g──────[H for help]───Hostname=localhost────Refresh= 2secs ───16:48.29────────────────────────┐\n------------------------------       For help type H or ...                                           │\n│  #    #  #    #   ####   #    #        nmon -?  - hint                                              │\n│  ##   #  ##  ##  #    #  ##   #        nmon -h  - full                                              │\n│  # #  #  # ## #  #    #  # #  #                                                                     │\n│  #  # #  #    #  #    #  #  # #       To start the same way every time                              │\n│  #   ##  #    #  #    #  #   ##        set the NMON ksh variable                                    │\n│  #    #  #    #   ####   #    #                                                                     │\n│  ------------------------------                                                                     │\n│                                                                                                     │\n│  Use these keys to toggle statistics on/off:                                                        │\n│     c = CPU        l = CPU Long-term   - = Faster screen updates                                    │\n│     m = Memory     j = Filesystems     + = Slower screen updates                                    │\n│     d = Disks      n = Network         V = Virtual Memory                                           │\n│     r = Resource   N = NFS             v = Verbose hints                                            │\n│     k = kernel     t = Top-processes   . = only busy disks/procs                                    │\n│     h = more options                 q = Quit                                                       │\n│─────────────────────────────────────────────────────────────────────────────────────────────────────│\n```\n\n\n### 1.2 显示CPU信息\n\n```\n│ CPU Utilisation ──────────────────────────────────────────────────────────────\n│---------------------------+-------------------------------------------------+\n│CPU  User%  Sys% Wait% Idle|0          |25         |50          |75       100|\n│  1  15.2   1.5   0.0  83.2|UUUUUUU           >                              |\n│  2   7.1   2.6   0.0  90.3|UUUs             >                               |\n│  3  17.5   1.0   0.5  81.0|UUUUUUUU        >                                |\n│  4  13.6   3.0   0.0  83.3|UUUUUUs            >                             |\n│---------------------------+-------------------------------------------------+\n│Avg  13.4   2.1   0.3  84.3|UUUUUUs        >                                 |\n│---------------------------+-------------------------------------------------+\n\n```\n\n### 1.3 显示内存信息\n```\n│ Memory Stats ──────────────────────────────────────────────────────────────────\n                RAM     High      Low     Swap    Page Size=4 KB\n│ Total MB      7843.5     -0.0     -0.0   3916.0\n│ Free  MB      1259.8     -0.0     -0.0   3915.6\n│ Free Percent    16.1%   100.0%   100.0%   100.0%\n│             MB                  MB                  MB\n│                      Cached=  2912.7     Active=  3842.7\n│ Buffers=   929.4 Swapcached=     0.0  Inactive =  1789.8\n│ Dirty  =     0.1 Writeback =     0.0  Mapped   =   946.5\n│ Slab   =   799.7 Commit_AS =  6624.9 PageTables=    40.2\n\n```\n\n### 1.4 显示磁盘信息\n\n```\n Disk I/O ──/proc/diskstats────mostly in KB/s─────Warning:contains duplicates────\n│DiskName Busy  Read WriteKB|0          |25         |50          |75       100|\n│sda        5%    0.0   42.0|WW>                                              |\n│sda1       0%    0.0    0.0|>                                                |\n│sda2       0%    0.0    0.0|>                                                |\n│sda5       5%    0.0   42.0|WW>                                              |\n│sda6       0%    0.0    0.0|>                                                |\n│Totals Read-MB/s=0.0      Writes-MB/s=0.1      Transfers/sec=12.0 \n\n```\n\n### 1.5 显示网络信息\n\n```\n Network I/O ────────────────────────────────────────────────────────────────────\n│I/F Name Recv=KB/s Trans=KB/s packin packout insize outsize Peak->Recv Trans \n│      lo     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 \n│   wlan0     0.1     0.0       0.5      0.0   215.0    0.0        0.1     0.0 \n│ docker0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 \n│    eth0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0\n│ Network Error Counters ─────────────────────────────────────────────────────────\n│I/F Name iErrors iDrop iOverrun iFrame oErrors   oDrop oOverrun oCarrier oColls\n│      lo       0       0       0       0       0       0       0       0       0\n│   wlan0       0       0       0       0       0       0       0       0       0\n│ docker0       0       0       0       0       0       0       0       0       0\n│    eth0       0       0       0       0       0       0       0       0       0\n```\n\n### 1.6 显示内核信息\n```\nKernel Stats ────────────────────────────────────────────────────────────────────\n│ RunQueue              3   Load Average    CPU use since boot time\n│ ContextSwitch    2735.0    1 mins  0.54    Uptime Days=  0 Hours= 7 Mins=58\n│ Forks               0.5    5 mins  0.86    Idle   Days=  1 Hours= 1 Mins=36\n│ Interrupts        836.9   15 mins  0.92    Average CPU use=-221.51%\n\n```\n\n## 2. ethstatus\n`ethstatus`可以实时监控网卡的带宽占用。\n\n```\n───────────────────.EthStatus v0.4a.──────────────────────────────[0/910]──────────────────────│\n│                                                                                              │\n│                                                                                              │\n│                      ######                                                                  │\n│                                                                                              │\n│         ###                                                                                  │\n│        ON/OFF                      RX  TX                                                    │\n│                            0.00 B/s   0 Packets/s                                            │\n│                                                                                              │\n│                                                                                              │\n│     IP Address:          192.168.1.116                                                       │\n│     Interface name:      wlan0         Graphic Using Speed:    9.77 MB/s                     │\n│     Top Speed:           732.00 B/s    Top Packets/s:          5                             │\n│     Received Packets:    593428        Transmited Packets:     437965                        │\n│     Received:            399.68 MB     Transmitted:            54.73 MB                      │\n│     Errors on Receiving: 0             Errors on Transmission: 0                             │\n│                                                                                              │\n│                                                                                              │\n\n```\n\n## 3. iftop监控网卡实时流量\n常用参数列表\n\n| 参数 | 含义                                            | 例子                          |\n| --   | --                                              | --                            |\n| -i   | 指定需要监测的网卡                              | sudo iftop -i wlan0           |\n| -n   | 将输出的主机信息都通过ip显示，不进行DNS方向解析 | sudo iftop -n -i wlan0        |\n| -B   | 将输出以byte为单位显示网卡流量，默认是bit       | sudo iftop -B -i wlan0        |\n| -p   | 以混杂模式运行iftop,此时iftop可以作为网络嗅探器 | sudo iftop -p -i wlan0        |\n| -N   | 只显示链接端口号，不显示对应的服务名称          | sudo iftop -N -i wlan0        |\n| -P   | 显示主机及端口信息                              | sudo iftop -P -i wlan0        |\n| -F   | 显示特定网段的网卡进出流量                      | sudo iftop -F 192.168.1.10/24 |\n\n```\n                    12.5kb              25.0kb               37.5kb              50.0kb         [0/37]\n+-------------------+-------------------+--------------------+-------------------+--------------------\n192.168.1.116                         => 101.227.160.102                       17.6kb  3.55kb  1.90kb \n                                      <=                                       7.29kb  1.50kb   807b\n224.0.0.251                           => 192.168.1.165                            0b      0b      0b  \n                                      <=                                       1.72kb  2.21kb   566b\n192.168.1.116                         => 140.206.160.161                       4.89kb  0.98kb  1.21kb\n                                      <=                                       1.18kb   242b    302b\n192.168.1.116                         => 192.168.1.1                              0b    112b     96b  \n                                      <=                                          0b    378b    254b\n239.255.255.250                       => 192.168.1.148                            0b      0b      0b\n                                      <=                                       1.19kb   486b    730b\n224.0.0.251                           => 192.168.1.166                            0b      0b      0b\n                                      <=                                        272b     54b     14b\n192.168.1.165                         => all-routers.mcast.net                    0b     26b      6b\n                                      <=                                          0b      0b      0b\n192.168.1.116                         => 101.226.76.164                           0b      0b   2.11kb\n                                      <=                                          0b      0b    752b  \n192.168.1.116                         => dev                                      0b      0b   1.50kb\n                                      <=                                          0b      0b    544b\n192.168.1.116                         => stage                                    0b      0b   1.40kb\n                                      <=                                          0b      0b    504b\n239.255.255.250                       => 192.168.1.135                            0b      0b      0b\n                                      <=                                          0b      0b    161b\n239.255.255.250                       => 192.168.1.113                            0b      0b      0b\n                                      <=                                          0b      0b    160b\n------------------------------------------------------------------------------------------------------\nTX:             cum:   51.5kB   peak:   44.7kb                        rates:   22.4kb  4.64kb  8.27kb\nRX:                    46.8kB           28.5kb                                 11.6kb  4.87kb  4.94kb\nTOTAL:                 98.4kB           73.2kb                                 34.1kb  9.51kb  13.2kb\n```\n\n## 4. mtr\nmtr是Linux中有一个非常棒的网络连通性判断工具,它结合了`ping`，`traceroute`，`nslookup`的相关特性。\n相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。\n\n常用参数\n\n| 参数       | 说明                                          |\n| --         | --                                            |\n| -s         | 用来指定ping数据包的大小                      |\n| `--no-dns` | 不对IP地址做域名解析                          |\n| -a         | 使用这个参数来设置ICMP返回之间的要求默认是1秒 |\n| `--report` | 给主机发送10个ICMP包，然后输出报告            |\n\n\n```\n                    My traceroute  [v0.85]                                     [0/102]\nlocalhost (0.0.0.0)                            Sun Mar 26 20:25:43 2017\nKeys:  Help   Display mode   Restart statistics   Order of fields   quit\n                                            Packets               Pings\n Host                                    Loss%   Snt   Last   Avg  Best  Wrst StDev\n 1. 192.168.0.1                           0.0%     8    1.5   2.3   1.3   4.3   0.8\n 2. 192.168.1.1                           0.0%     8    1.7   4.6   1.7  13.7   5.2\n 3. 114.245.248.1                         0.0%     8   78.3 108.3   3.7 363.8 149.8\n 4. 123.126.26.45                         0.0%     8    7.9  19.6   3.8  76.7  26.3\n 5. 61.148.158.53                         0.0%     8    7.2  12.2   5.1  31.6   9.2\n 6. 61.51.115.106                         0.0%     8   78.8  15.4   4.6  78.8  25.7\n 7. 61.49.168.110                         0.0%     8    4.9   7.1   4.8  12.8   2.7\n 8. ???\n 9. ???\n10. 61.135.169.121                        0.0%     7    4.3   5.9   4.2  10.9   2.2\n\n```\n**说明**\n当分析mtr的输出时，需要注意两点:loss和latency\n如果你在任何一跳上看到loss的百分比，这就说明这一跳上可能有问题。当然也有可能是服务提供商人为限制了ICMP发送的速率，也会导致丢包。如果下一跳没有丢包，那说明该丢包是人为限制的。\n如果第4跳和第5跳都有50%的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是30%的丢包率，我们可以猜测30%的丢包率除了网络糟糕的原因之前还有人为限制ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。当出现短暂的10%丢包率的时候，不必担心，应用层的程序会弥补这点损失。\n\n## 5. htop\n常用功能键\n\n| 按键 | 说明                                       |\n| --   | --                                         |\n| F1   | 帮助                                       |\n| F2   | 设置                                       |\n| F3   | 搜索进程                                   |\n| F4   | 过滤器，按关键字搜索                       |\n| F5   | 显示树形结构                               |\n| F6   | 选择排序方式                               |\n| F7   | 减少nice值，可以提高对应进程的优先级       |\n| F8   | 增加nice值，可以降低对应进程的优先级       |\n| F9   | 杀掉选中的进程                             |\n| F10  | 退出                                       |\n| /    | 搜索字符                                   |\n| h    | 显示帮助                                   |\n| l    | 显示进程打开的文件 lsof                    |\n| u    | 显示所有用户，并可以选择某一特定用户的进程 |\n| s    | 将调用strace追踪进程的系统调用             |\n| t    | 显示树形结构                               |\n| H    | 显示/隐藏用户线程                          |\n| I    | 倒转排序                                   |\n| K    | 显示/隐藏内核线程                          |\n| M    | 按内存占用排序                             |\n| P    | 按CPU排序                                  |\n| T    | 按运行时间排序                             |\n\nhtop的左上角显示CPU、内存、交换区的使用情况，右边显示任务、负载、开机时间，下面是进程实时状态。\n最后一行是F1～F10的功能菜单和对应的字符快捷键。\n\n## 6. linux系统性能分析\n分析次序为cpu mem disk network\n","slug":"linux系统监控基本命令","published":1,"updated":"2017-03-27T13:25:05.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsit000ix0s6g1qynq5z","content":"<h2 id=\"1-nmon软件\"><a href=\"#1-nmon软件\" class=\"headerlink\" title=\"1. nmon软件\"></a>1. nmon软件</h2><h3 id=\"1-1-运行nmon软件\"><a href=\"#1-1-运行nmon软件\" class=\"headerlink\" title=\"1.1 运行nmon软件\"></a>1.1 运行nmon软件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:~$ nmon</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌nmon─14g──────[H for help]───Hostname=localhost────Refresh= 2secs ───16:48.29────────────────────────┐</span><br><span class=\"line\">------------------------------       For help type H or ...                                           │</span><br><span class=\"line\">│  #    #  #    #   ####   #    #        nmon -?  - hint                                              │</span><br><span class=\"line\">│  ##   #  ##  ##  #    #  ##   #        nmon -h  - full                                              │</span><br><span class=\"line\">│  # #  #  # ## #  #    #  # #  #                                                                     │</span><br><span class=\"line\">│  #  # #  #    #  #    #  #  # #       To start the same way every time                              │</span><br><span class=\"line\">│  #   ##  #    #  #    #  #   ##        set the NMON ksh variable                                    │</span><br><span class=\"line\">│  #    #  #    #   ####   #    #                                                                     │</span><br><span class=\"line\">│  ------------------------------                                                                     │</span><br><span class=\"line\">│                                                                                                     │</span><br><span class=\"line\">│  Use these keys to toggle statistics on/off:                                                        │</span><br><span class=\"line\">│     c = CPU        l = CPU Long-term   - = Faster screen updates                                    │</span><br><span class=\"line\">│     m = Memory     j = Filesystems     + = Slower screen updates                                    │</span><br><span class=\"line\">│     d = Disks      n = Network         V = Virtual Memory                                           │</span><br><span class=\"line\">│     r = Resource   N = NFS             v = Verbose hints                                            │</span><br><span class=\"line\">│     k = kernel     t = Top-processes   . = only busy disks/procs                                    │</span><br><span class=\"line\">│     h = more options                 q = Quit                                                       │</span><br><span class=\"line\">│─────────────────────────────────────────────────────────────────────────────────────────────────────│</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-显示CPU信息\"><a href=\"#1-2-显示CPU信息\" class=\"headerlink\" title=\"1.2 显示CPU信息\"></a>1.2 显示CPU信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│ CPU Utilisation ──────────────────────────────────────────────────────────────</span><br><span class=\"line\">│---------------------------+-------------------------------------------------+</span><br><span class=\"line\">│CPU  User%  Sys% Wait% Idle|0          |25         |50          |75       100|</span><br><span class=\"line\">│  1  15.2   1.5   0.0  83.2|UUUUUUU           &gt;                              |</span><br><span class=\"line\">│  2   7.1   2.6   0.0  90.3|UUUs             &gt;                               |</span><br><span class=\"line\">│  3  17.5   1.0   0.5  81.0|UUUUUUUU        &gt;                                |</span><br><span class=\"line\">│  4  13.6   3.0   0.0  83.3|UUUUUUs            &gt;                             |</span><br><span class=\"line\">│---------------------------+-------------------------------------------------+</span><br><span class=\"line\">│Avg  13.4   2.1   0.3  84.3|UUUUUUs        &gt;                                 |</span><br><span class=\"line\">│---------------------------+-------------------------------------------------+</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-显示内存信息\"><a href=\"#1-3-显示内存信息\" class=\"headerlink\" title=\"1.3 显示内存信息\"></a>1.3 显示内存信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│ Memory Stats ──────────────────────────────────────────────────────────────────</span><br><span class=\"line\">                RAM     High      Low     Swap    Page Size=4 KB</span><br><span class=\"line\">│ Total MB      7843.5     -0.0     -0.0   3916.0</span><br><span class=\"line\">│ Free  MB      1259.8     -0.0     -0.0   3915.6</span><br><span class=\"line\">│ Free Percent    16.1%   100.0%   100.0%   100.0%</span><br><span class=\"line\">│             MB                  MB                  MB</span><br><span class=\"line\">│                      Cached=  2912.7     Active=  3842.7</span><br><span class=\"line\">│ Buffers=   929.4 Swapcached=     0.0  Inactive =  1789.8</span><br><span class=\"line\">│ Dirty  =     0.1 Writeback =     0.0  Mapped   =   946.5</span><br><span class=\"line\">│ Slab   =   799.7 Commit_AS =  6624.9 PageTables=    40.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-显示磁盘信息\"><a href=\"#1-4-显示磁盘信息\" class=\"headerlink\" title=\"1.4 显示磁盘信息\"></a>1.4 显示磁盘信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Disk I/O ──/proc/diskstats────mostly in KB/s─────Warning:contains duplicates────</span><br><span class=\"line\">│DiskName Busy  Read WriteKB|0          |25         |50          |75       100|</span><br><span class=\"line\">│sda        5%    0.0   42.0|WW&gt;                                              |</span><br><span class=\"line\">│sda1       0%    0.0    0.0|&gt;                                                |</span><br><span class=\"line\">│sda2       0%    0.0    0.0|&gt;                                                |</span><br><span class=\"line\">│sda5       5%    0.0   42.0|WW&gt;                                              |</span><br><span class=\"line\">│sda6       0%    0.0    0.0|&gt;                                                |</span><br><span class=\"line\">│Totals Read-MB/s=0.0      Writes-MB/s=0.1      Transfers/sec=12.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-显示网络信息\"><a href=\"#1-5-显示网络信息\" class=\"headerlink\" title=\"1.5 显示网络信息\"></a>1.5 显示网络信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Network I/O ────────────────────────────────────────────────────────────────────</span><br><span class=\"line\">│I/F Name Recv=KB/s Trans=KB/s packin packout insize outsize Peak-&gt;Recv Trans </span><br><span class=\"line\">│      lo     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </span><br><span class=\"line\">│   wlan0     0.1     0.0       0.5      0.0   215.0    0.0        0.1     0.0 </span><br><span class=\"line\">│ docker0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </span><br><span class=\"line\">│    eth0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0</span><br><span class=\"line\">│ Network Error Counters ─────────────────────────────────────────────────────────</span><br><span class=\"line\">│I/F Name iErrors iDrop iOverrun iFrame oErrors   oDrop oOverrun oCarrier oColls</span><br><span class=\"line\">│      lo       0       0       0       0       0       0       0       0       0</span><br><span class=\"line\">│   wlan0       0       0       0       0       0       0       0       0       0</span><br><span class=\"line\">│ docker0       0       0       0       0       0       0       0       0       0</span><br><span class=\"line\">│    eth0       0       0       0       0       0       0       0       0       0</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-显示内核信息\"><a href=\"#1-6-显示内核信息\" class=\"headerlink\" title=\"1.6 显示内核信息\"></a>1.6 显示内核信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Kernel Stats ────────────────────────────────────────────────────────────────────</span><br><span class=\"line\">│ RunQueue              3   Load Average    CPU use since boot time</span><br><span class=\"line\">│ ContextSwitch    2735.0    1 mins  0.54    Uptime Days=  0 Hours= 7 Mins=58</span><br><span class=\"line\">│ Forks               0.5    5 mins  0.86    Idle   Days=  1 Hours= 1 Mins=36</span><br><span class=\"line\">│ Interrupts        836.9   15 mins  0.92    Average CPU use=-221.51%</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-ethstatus\"><a href=\"#2-ethstatus\" class=\"headerlink\" title=\"2. ethstatus\"></a>2. ethstatus</h2><p><code>ethstatus</code>可以实时监控网卡的带宽占用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">───────────────────.EthStatus v0.4a.──────────────────────────────[0/910]──────────────────────│</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                      ######                                                                  │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│         ###                                                                                  │</span><br><span class=\"line\">│        ON/OFF                      RX  TX                                                    │</span><br><span class=\"line\">│                            0.00 B/s   0 Packets/s                                            │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│     IP Address:          192.168.1.116                                                       │</span><br><span class=\"line\">│     Interface name:      wlan0         Graphic Using Speed:    9.77 MB/s                     │</span><br><span class=\"line\">│     Top Speed:           732.00 B/s    Top Packets/s:          5                             │</span><br><span class=\"line\">│     Received Packets:    593428        Transmited Packets:     437965                        │</span><br><span class=\"line\">│     Received:            399.68 MB     Transmitted:            54.73 MB                      │</span><br><span class=\"line\">│     Errors on Receiving: 0             Errors on Transmission: 0                             │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                                                                                              │</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-iftop监控网卡实时流量\"><a href=\"#3-iftop监控网卡实时流量\" class=\"headerlink\" title=\"3. iftop监控网卡实时流量\"></a>3. iftop监控网卡实时流量</h2><p>常用参数列表</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-i</td>\n<td>指定需要监测的网卡</td>\n<td>sudo iftop -i wlan0</td>\n</tr>\n<tr>\n<td>-n</td>\n<td>将输出的主机信息都通过ip显示，不进行DNS方向解析</td>\n<td>sudo iftop -n -i wlan0</td>\n</tr>\n<tr>\n<td>-B</td>\n<td>将输出以byte为单位显示网卡流量，默认是bit</td>\n<td>sudo iftop -B -i wlan0</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>以混杂模式运行iftop,此时iftop可以作为网络嗅探器</td>\n<td>sudo iftop -p -i wlan0</td>\n</tr>\n<tr>\n<td>-N</td>\n<td>只显示链接端口号，不显示对应的服务名称</td>\n<td>sudo iftop -N -i wlan0</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>显示主机及端口信息</td>\n<td>sudo iftop -P -i wlan0</td>\n</tr>\n<tr>\n<td>-F</td>\n<td>显示特定网段的网卡进出流量</td>\n<td>sudo iftop -F 192.168.1.10/24</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                    12.5kb              25.0kb               37.5kb              50.0kb         [0/37]</span><br><span class=\"line\">+-------------------+-------------------+--------------------+-------------------+--------------------</span><br><span class=\"line\">192.168.1.116                         =&gt; 101.227.160.102                       17.6kb  3.55kb  1.90kb </span><br><span class=\"line\">                                      &lt;=                                       7.29kb  1.50kb   807b</span><br><span class=\"line\">224.0.0.251                           =&gt; 192.168.1.165                            0b      0b      0b  </span><br><span class=\"line\">                                      &lt;=                                       1.72kb  2.21kb   566b</span><br><span class=\"line\">192.168.1.116                         =&gt; 140.206.160.161                       4.89kb  0.98kb  1.21kb</span><br><span class=\"line\">                                      &lt;=                                       1.18kb   242b    302b</span><br><span class=\"line\">192.168.1.116                         =&gt; 192.168.1.1                              0b    112b     96b  </span><br><span class=\"line\">                                      &lt;=                                          0b    378b    254b</span><br><span class=\"line\">239.255.255.250                       =&gt; 192.168.1.148                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                       1.19kb   486b    730b</span><br><span class=\"line\">224.0.0.251                           =&gt; 192.168.1.166                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                        272b     54b     14b</span><br><span class=\"line\">192.168.1.165                         =&gt; all-routers.mcast.net                    0b     26b      6b</span><br><span class=\"line\">                                      &lt;=                                          0b      0b      0b</span><br><span class=\"line\">192.168.1.116                         =&gt; 101.226.76.164                           0b      0b   2.11kb</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    752b  </span><br><span class=\"line\">192.168.1.116                         =&gt; dev                                      0b      0b   1.50kb</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    544b</span><br><span class=\"line\">192.168.1.116                         =&gt; stage                                    0b      0b   1.40kb</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    504b</span><br><span class=\"line\">239.255.255.250                       =&gt; 192.168.1.135                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    161b</span><br><span class=\"line\">239.255.255.250                       =&gt; 192.168.1.113                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    160b</span><br><span class=\"line\">------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">TX:             cum:   51.5kB   peak:   44.7kb                        rates:   22.4kb  4.64kb  8.27kb</span><br><span class=\"line\">RX:                    46.8kB           28.5kb                                 11.6kb  4.87kb  4.94kb</span><br><span class=\"line\">TOTAL:                 98.4kB           73.2kb                                 34.1kb  9.51kb  13.2kb</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-mtr\"><a href=\"#4-mtr\" class=\"headerlink\" title=\"4. mtr\"></a>4. mtr</h2><p>mtr是Linux中有一个非常棒的网络连通性判断工具,它结合了<code>ping</code>，<code>traceroute</code>，<code>nslookup</code>的相关特性。<br>相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。</p>\n<p>常用参数</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-s</td>\n<td>用来指定ping数据包的大小</td>\n</tr>\n<tr>\n<td><code>--no-dns</code></td>\n<td>不对IP地址做域名解析</td>\n</tr>\n<tr>\n<td>-a</td>\n<td>使用这个参数来设置ICMP返回之间的要求默认是1秒</td>\n</tr>\n<tr>\n<td><code>--report</code></td>\n<td>给主机发送10个ICMP包，然后输出报告</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                    My traceroute  [v0.85]                                     [0/102]</span><br><span class=\"line\">localhost (0.0.0.0)                            Sun Mar 26 20:25:43 2017</span><br><span class=\"line\">Keys:  Help   Display mode   Restart statistics   Order of fields   quit</span><br><span class=\"line\">                                            Packets               Pings</span><br><span class=\"line\"> Host                                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class=\"line\"> 1. 192.168.0.1                           0.0%     8    1.5   2.3   1.3   4.3   0.8</span><br><span class=\"line\"> 2. 192.168.1.1                           0.0%     8    1.7   4.6   1.7  13.7   5.2</span><br><span class=\"line\"> 3. 114.245.248.1                         0.0%     8   78.3 108.3   3.7 363.8 149.8</span><br><span class=\"line\"> 4. 123.126.26.45                         0.0%     8    7.9  19.6   3.8  76.7  26.3</span><br><span class=\"line\"> 5. 61.148.158.53                         0.0%     8    7.2  12.2   5.1  31.6   9.2</span><br><span class=\"line\"> 6. 61.51.115.106                         0.0%     8   78.8  15.4   4.6  78.8  25.7</span><br><span class=\"line\"> 7. 61.49.168.110                         0.0%     8    4.9   7.1   4.8  12.8   2.7</span><br><span class=\"line\"> 8. ???</span><br><span class=\"line\"> 9. ???</span><br><span class=\"line\">10. 61.135.169.121                        0.0%     7    4.3   5.9   4.2  10.9   2.2</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong><br>当分析mtr的输出时，需要注意两点:loss和latency<br>如果你在任何一跳上看到loss的百分比，这就说明这一跳上可能有问题。当然也有可能是服务提供商人为限制了ICMP发送的速率，也会导致丢包。如果下一跳没有丢包，那说明该丢包是人为限制的。<br>如果第4跳和第5跳都有50%的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是30%的丢包率，我们可以猜测30%的丢包率除了网络糟糕的原因之前还有人为限制ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。当出现短暂的10%丢包率的时候，不必担心，应用层的程序会弥补这点损失。</p>\n<h2 id=\"5-htop\"><a href=\"#5-htop\" class=\"headerlink\" title=\"5. htop\"></a>5. htop</h2><p>常用功能键</p>\n<table>\n<thead>\n<tr>\n<th>按键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>F1</td>\n<td>帮助</td>\n</tr>\n<tr>\n<td>F2</td>\n<td>设置</td>\n</tr>\n<tr>\n<td>F3</td>\n<td>搜索进程</td>\n</tr>\n<tr>\n<td>F4</td>\n<td>过滤器，按关键字搜索</td>\n</tr>\n<tr>\n<td>F5</td>\n<td>显示树形结构</td>\n</tr>\n<tr>\n<td>F6</td>\n<td>选择排序方式</td>\n</tr>\n<tr>\n<td>F7</td>\n<td>减少nice值，可以提高对应进程的优先级</td>\n</tr>\n<tr>\n<td>F8</td>\n<td>增加nice值，可以降低对应进程的优先级</td>\n</tr>\n<tr>\n<td>F9</td>\n<td>杀掉选中的进程</td>\n</tr>\n<tr>\n<td>F10</td>\n<td>退出</td>\n</tr>\n<tr>\n<td>/</td>\n<td>搜索字符</td>\n</tr>\n<tr>\n<td>h</td>\n<td>显示帮助</td>\n</tr>\n<tr>\n<td>l</td>\n<td>显示进程打开的文件 lsof</td>\n</tr>\n<tr>\n<td>u</td>\n<td>显示所有用户，并可以选择某一特定用户的进程</td>\n</tr>\n<tr>\n<td>s</td>\n<td>将调用strace追踪进程的系统调用</td>\n</tr>\n<tr>\n<td>t</td>\n<td>显示树形结构</td>\n</tr>\n<tr>\n<td>H</td>\n<td>显示/隐藏用户线程</td>\n</tr>\n<tr>\n<td>I</td>\n<td>倒转排序</td>\n</tr>\n<tr>\n<td>K</td>\n<td>显示/隐藏内核线程</td>\n</tr>\n<tr>\n<td>M</td>\n<td>按内存占用排序</td>\n</tr>\n<tr>\n<td>P</td>\n<td>按CPU排序</td>\n</tr>\n<tr>\n<td>T</td>\n<td>按运行时间排序</td>\n</tr>\n</tbody>\n</table>\n<p>htop的左上角显示CPU、内存、交换区的使用情况，右边显示任务、负载、开机时间，下面是进程实时状态。<br>最后一行是F1～F10的功能菜单和对应的字符快捷键。</p>\n<h2 id=\"6-linux系统性能分析\"><a href=\"#6-linux系统性能分析\" class=\"headerlink\" title=\"6. linux系统性能分析\"></a>6. linux系统性能分析</h2><p>分析次序为cpu mem disk network</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-nmon软件\"><a href=\"#1-nmon软件\" class=\"headerlink\" title=\"1. nmon软件\"></a>1. nmon软件</h2><h3 id=\"1-1-运行nmon软件\"><a href=\"#1-1-运行nmon软件\" class=\"headerlink\" title=\"1.1 运行nmon软件\"></a>1.1 运行nmon软件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:~$ nmon</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌nmon─14g──────[H for help]───Hostname=localhost────Refresh= 2secs ───16:48.29────────────────────────┐</span><br><span class=\"line\">------------------------------       For help type H or ...                                           │</span><br><span class=\"line\">│  #    #  #    #   ####   #    #        nmon -?  - hint                                              │</span><br><span class=\"line\">│  ##   #  ##  ##  #    #  ##   #        nmon -h  - full                                              │</span><br><span class=\"line\">│  # #  #  # ## #  #    #  # #  #                                                                     │</span><br><span class=\"line\">│  #  # #  #    #  #    #  #  # #       To start the same way every time                              │</span><br><span class=\"line\">│  #   ##  #    #  #    #  #   ##        set the NMON ksh variable                                    │</span><br><span class=\"line\">│  #    #  #    #   ####   #    #                                                                     │</span><br><span class=\"line\">│  ------------------------------                                                                     │</span><br><span class=\"line\">│                                                                                                     │</span><br><span class=\"line\">│  Use these keys to toggle statistics on/off:                                                        │</span><br><span class=\"line\">│     c = CPU        l = CPU Long-term   - = Faster screen updates                                    │</span><br><span class=\"line\">│     m = Memory     j = Filesystems     + = Slower screen updates                                    │</span><br><span class=\"line\">│     d = Disks      n = Network         V = Virtual Memory                                           │</span><br><span class=\"line\">│     r = Resource   N = NFS             v = Verbose hints                                            │</span><br><span class=\"line\">│     k = kernel     t = Top-processes   . = only busy disks/procs                                    │</span><br><span class=\"line\">│     h = more options                 q = Quit                                                       │</span><br><span class=\"line\">│─────────────────────────────────────────────────────────────────────────────────────────────────────│</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-显示CPU信息\"><a href=\"#1-2-显示CPU信息\" class=\"headerlink\" title=\"1.2 显示CPU信息\"></a>1.2 显示CPU信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│ CPU Utilisation ──────────────────────────────────────────────────────────────</span><br><span class=\"line\">│---------------------------+-------------------------------------------------+</span><br><span class=\"line\">│CPU  User%  Sys% Wait% Idle|0          |25         |50          |75       100|</span><br><span class=\"line\">│  1  15.2   1.5   0.0  83.2|UUUUUUU           &gt;                              |</span><br><span class=\"line\">│  2   7.1   2.6   0.0  90.3|UUUs             &gt;                               |</span><br><span class=\"line\">│  3  17.5   1.0   0.5  81.0|UUUUUUUU        &gt;                                |</span><br><span class=\"line\">│  4  13.6   3.0   0.0  83.3|UUUUUUs            &gt;                             |</span><br><span class=\"line\">│---------------------------+-------------------------------------------------+</span><br><span class=\"line\">│Avg  13.4   2.1   0.3  84.3|UUUUUUs        &gt;                                 |</span><br><span class=\"line\">│---------------------------+-------------------------------------------------+</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-显示内存信息\"><a href=\"#1-3-显示内存信息\" class=\"headerlink\" title=\"1.3 显示内存信息\"></a>1.3 显示内存信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">│ Memory Stats ──────────────────────────────────────────────────────────────────</span><br><span class=\"line\">                RAM     High      Low     Swap    Page Size=4 KB</span><br><span class=\"line\">│ Total MB      7843.5     -0.0     -0.0   3916.0</span><br><span class=\"line\">│ Free  MB      1259.8     -0.0     -0.0   3915.6</span><br><span class=\"line\">│ Free Percent    16.1%   100.0%   100.0%   100.0%</span><br><span class=\"line\">│             MB                  MB                  MB</span><br><span class=\"line\">│                      Cached=  2912.7     Active=  3842.7</span><br><span class=\"line\">│ Buffers=   929.4 Swapcached=     0.0  Inactive =  1789.8</span><br><span class=\"line\">│ Dirty  =     0.1 Writeback =     0.0  Mapped   =   946.5</span><br><span class=\"line\">│ Slab   =   799.7 Commit_AS =  6624.9 PageTables=    40.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-显示磁盘信息\"><a href=\"#1-4-显示磁盘信息\" class=\"headerlink\" title=\"1.4 显示磁盘信息\"></a>1.4 显示磁盘信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Disk I/O ──/proc/diskstats────mostly in KB/s─────Warning:contains duplicates────</span><br><span class=\"line\">│DiskName Busy  Read WriteKB|0          |25         |50          |75       100|</span><br><span class=\"line\">│sda        5%    0.0   42.0|WW&gt;                                              |</span><br><span class=\"line\">│sda1       0%    0.0    0.0|&gt;                                                |</span><br><span class=\"line\">│sda2       0%    0.0    0.0|&gt;                                                |</span><br><span class=\"line\">│sda5       5%    0.0   42.0|WW&gt;                                              |</span><br><span class=\"line\">│sda6       0%    0.0    0.0|&gt;                                                |</span><br><span class=\"line\">│Totals Read-MB/s=0.0      Writes-MB/s=0.1      Transfers/sec=12.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-显示网络信息\"><a href=\"#1-5-显示网络信息\" class=\"headerlink\" title=\"1.5 显示网络信息\"></a>1.5 显示网络信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> Network I/O ────────────────────────────────────────────────────────────────────</span><br><span class=\"line\">│I/F Name Recv=KB/s Trans=KB/s packin packout insize outsize Peak-&gt;Recv Trans </span><br><span class=\"line\">│      lo     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </span><br><span class=\"line\">│   wlan0     0.1     0.0       0.5      0.0   215.0    0.0        0.1     0.0 </span><br><span class=\"line\">│ docker0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </span><br><span class=\"line\">│    eth0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0</span><br><span class=\"line\">│ Network Error Counters ─────────────────────────────────────────────────────────</span><br><span class=\"line\">│I/F Name iErrors iDrop iOverrun iFrame oErrors   oDrop oOverrun oCarrier oColls</span><br><span class=\"line\">│      lo       0       0       0       0       0       0       0       0       0</span><br><span class=\"line\">│   wlan0       0       0       0       0       0       0       0       0       0</span><br><span class=\"line\">│ docker0       0       0       0       0       0       0       0       0       0</span><br><span class=\"line\">│    eth0       0       0       0       0       0       0       0       0       0</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-显示内核信息\"><a href=\"#1-6-显示内核信息\" class=\"headerlink\" title=\"1.6 显示内核信息\"></a>1.6 显示内核信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Kernel Stats ────────────────────────────────────────────────────────────────────</span><br><span class=\"line\">│ RunQueue              3   Load Average    CPU use since boot time</span><br><span class=\"line\">│ ContextSwitch    2735.0    1 mins  0.54    Uptime Days=  0 Hours= 7 Mins=58</span><br><span class=\"line\">│ Forks               0.5    5 mins  0.86    Idle   Days=  1 Hours= 1 Mins=36</span><br><span class=\"line\">│ Interrupts        836.9   15 mins  0.92    Average CPU use=-221.51%</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-ethstatus\"><a href=\"#2-ethstatus\" class=\"headerlink\" title=\"2. ethstatus\"></a>2. ethstatus</h2><p><code>ethstatus</code>可以实时监控网卡的带宽占用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">───────────────────.EthStatus v0.4a.──────────────────────────────[0/910]──────────────────────│</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                      ######                                                                  │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│         ###                                                                                  │</span><br><span class=\"line\">│        ON/OFF                      RX  TX                                                    │</span><br><span class=\"line\">│                            0.00 B/s   0 Packets/s                                            │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│     IP Address:          192.168.1.116                                                       │</span><br><span class=\"line\">│     Interface name:      wlan0         Graphic Using Speed:    9.77 MB/s                     │</span><br><span class=\"line\">│     Top Speed:           732.00 B/s    Top Packets/s:          5                             │</span><br><span class=\"line\">│     Received Packets:    593428        Transmited Packets:     437965                        │</span><br><span class=\"line\">│     Received:            399.68 MB     Transmitted:            54.73 MB                      │</span><br><span class=\"line\">│     Errors on Receiving: 0             Errors on Transmission: 0                             │</span><br><span class=\"line\">│                                                                                              │</span><br><span class=\"line\">│                                                                                              │</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-iftop监控网卡实时流量\"><a href=\"#3-iftop监控网卡实时流量\" class=\"headerlink\" title=\"3. iftop监控网卡实时流量\"></a>3. iftop监控网卡实时流量</h2><p>常用参数列表</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-i</td>\n<td>指定需要监测的网卡</td>\n<td>sudo iftop -i wlan0</td>\n</tr>\n<tr>\n<td>-n</td>\n<td>将输出的主机信息都通过ip显示，不进行DNS方向解析</td>\n<td>sudo iftop -n -i wlan0</td>\n</tr>\n<tr>\n<td>-B</td>\n<td>将输出以byte为单位显示网卡流量，默认是bit</td>\n<td>sudo iftop -B -i wlan0</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>以混杂模式运行iftop,此时iftop可以作为网络嗅探器</td>\n<td>sudo iftop -p -i wlan0</td>\n</tr>\n<tr>\n<td>-N</td>\n<td>只显示链接端口号，不显示对应的服务名称</td>\n<td>sudo iftop -N -i wlan0</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>显示主机及端口信息</td>\n<td>sudo iftop -P -i wlan0</td>\n</tr>\n<tr>\n<td>-F</td>\n<td>显示特定网段的网卡进出流量</td>\n<td>sudo iftop -F 192.168.1.10/24</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                    12.5kb              25.0kb               37.5kb              50.0kb         [0/37]</span><br><span class=\"line\">+-------------------+-------------------+--------------------+-------------------+--------------------</span><br><span class=\"line\">192.168.1.116                         =&gt; 101.227.160.102                       17.6kb  3.55kb  1.90kb </span><br><span class=\"line\">                                      &lt;=                                       7.29kb  1.50kb   807b</span><br><span class=\"line\">224.0.0.251                           =&gt; 192.168.1.165                            0b      0b      0b  </span><br><span class=\"line\">                                      &lt;=                                       1.72kb  2.21kb   566b</span><br><span class=\"line\">192.168.1.116                         =&gt; 140.206.160.161                       4.89kb  0.98kb  1.21kb</span><br><span class=\"line\">                                      &lt;=                                       1.18kb   242b    302b</span><br><span class=\"line\">192.168.1.116                         =&gt; 192.168.1.1                              0b    112b     96b  </span><br><span class=\"line\">                                      &lt;=                                          0b    378b    254b</span><br><span class=\"line\">239.255.255.250                       =&gt; 192.168.1.148                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                       1.19kb   486b    730b</span><br><span class=\"line\">224.0.0.251                           =&gt; 192.168.1.166                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                        272b     54b     14b</span><br><span class=\"line\">192.168.1.165                         =&gt; all-routers.mcast.net                    0b     26b      6b</span><br><span class=\"line\">                                      &lt;=                                          0b      0b      0b</span><br><span class=\"line\">192.168.1.116                         =&gt; 101.226.76.164                           0b      0b   2.11kb</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    752b  </span><br><span class=\"line\">192.168.1.116                         =&gt; dev                                      0b      0b   1.50kb</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    544b</span><br><span class=\"line\">192.168.1.116                         =&gt; stage                                    0b      0b   1.40kb</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    504b</span><br><span class=\"line\">239.255.255.250                       =&gt; 192.168.1.135                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    161b</span><br><span class=\"line\">239.255.255.250                       =&gt; 192.168.1.113                            0b      0b      0b</span><br><span class=\"line\">                                      &lt;=                                          0b      0b    160b</span><br><span class=\"line\">------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">TX:             cum:   51.5kB   peak:   44.7kb                        rates:   22.4kb  4.64kb  8.27kb</span><br><span class=\"line\">RX:                    46.8kB           28.5kb                                 11.6kb  4.87kb  4.94kb</span><br><span class=\"line\">TOTAL:                 98.4kB           73.2kb                                 34.1kb  9.51kb  13.2kb</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-mtr\"><a href=\"#4-mtr\" class=\"headerlink\" title=\"4. mtr\"></a>4. mtr</h2><p>mtr是Linux中有一个非常棒的网络连通性判断工具,它结合了<code>ping</code>，<code>traceroute</code>，<code>nslookup</code>的相关特性。<br>相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。</p>\n<p>常用参数</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-s</td>\n<td>用来指定ping数据包的大小</td>\n</tr>\n<tr>\n<td><code>--no-dns</code></td>\n<td>不对IP地址做域名解析</td>\n</tr>\n<tr>\n<td>-a</td>\n<td>使用这个参数来设置ICMP返回之间的要求默认是1秒</td>\n</tr>\n<tr>\n<td><code>--report</code></td>\n<td>给主机发送10个ICMP包，然后输出报告</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                    My traceroute  [v0.85]                                     [0/102]</span><br><span class=\"line\">localhost (0.0.0.0)                            Sun Mar 26 20:25:43 2017</span><br><span class=\"line\">Keys:  Help   Display mode   Restart statistics   Order of fields   quit</span><br><span class=\"line\">                                            Packets               Pings</span><br><span class=\"line\"> Host                                    Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class=\"line\"> 1. 192.168.0.1                           0.0%     8    1.5   2.3   1.3   4.3   0.8</span><br><span class=\"line\"> 2. 192.168.1.1                           0.0%     8    1.7   4.6   1.7  13.7   5.2</span><br><span class=\"line\"> 3. 114.245.248.1                         0.0%     8   78.3 108.3   3.7 363.8 149.8</span><br><span class=\"line\"> 4. 123.126.26.45                         0.0%     8    7.9  19.6   3.8  76.7  26.3</span><br><span class=\"line\"> 5. 61.148.158.53                         0.0%     8    7.2  12.2   5.1  31.6   9.2</span><br><span class=\"line\"> 6. 61.51.115.106                         0.0%     8   78.8  15.4   4.6  78.8  25.7</span><br><span class=\"line\"> 7. 61.49.168.110                         0.0%     8    4.9   7.1   4.8  12.8   2.7</span><br><span class=\"line\"> 8. ???</span><br><span class=\"line\"> 9. ???</span><br><span class=\"line\">10. 61.135.169.121                        0.0%     7    4.3   5.9   4.2  10.9   2.2</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong><br>当分析mtr的输出时，需要注意两点:loss和latency<br>如果你在任何一跳上看到loss的百分比，这就说明这一跳上可能有问题。当然也有可能是服务提供商人为限制了ICMP发送的速率，也会导致丢包。如果下一跳没有丢包，那说明该丢包是人为限制的。<br>如果第4跳和第5跳都有50%的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是30%的丢包率，我们可以猜测30%的丢包率除了网络糟糕的原因之前还有人为限制ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。当出现短暂的10%丢包率的时候，不必担心，应用层的程序会弥补这点损失。</p>\n<h2 id=\"5-htop\"><a href=\"#5-htop\" class=\"headerlink\" title=\"5. htop\"></a>5. htop</h2><p>常用功能键</p>\n<table>\n<thead>\n<tr>\n<th>按键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>F1</td>\n<td>帮助</td>\n</tr>\n<tr>\n<td>F2</td>\n<td>设置</td>\n</tr>\n<tr>\n<td>F3</td>\n<td>搜索进程</td>\n</tr>\n<tr>\n<td>F4</td>\n<td>过滤器，按关键字搜索</td>\n</tr>\n<tr>\n<td>F5</td>\n<td>显示树形结构</td>\n</tr>\n<tr>\n<td>F6</td>\n<td>选择排序方式</td>\n</tr>\n<tr>\n<td>F7</td>\n<td>减少nice值，可以提高对应进程的优先级</td>\n</tr>\n<tr>\n<td>F8</td>\n<td>增加nice值，可以降低对应进程的优先级</td>\n</tr>\n<tr>\n<td>F9</td>\n<td>杀掉选中的进程</td>\n</tr>\n<tr>\n<td>F10</td>\n<td>退出</td>\n</tr>\n<tr>\n<td>/</td>\n<td>搜索字符</td>\n</tr>\n<tr>\n<td>h</td>\n<td>显示帮助</td>\n</tr>\n<tr>\n<td>l</td>\n<td>显示进程打开的文件 lsof</td>\n</tr>\n<tr>\n<td>u</td>\n<td>显示所有用户，并可以选择某一特定用户的进程</td>\n</tr>\n<tr>\n<td>s</td>\n<td>将调用strace追踪进程的系统调用</td>\n</tr>\n<tr>\n<td>t</td>\n<td>显示树形结构</td>\n</tr>\n<tr>\n<td>H</td>\n<td>显示/隐藏用户线程</td>\n</tr>\n<tr>\n<td>I</td>\n<td>倒转排序</td>\n</tr>\n<tr>\n<td>K</td>\n<td>显示/隐藏内核线程</td>\n</tr>\n<tr>\n<td>M</td>\n<td>按内存占用排序</td>\n</tr>\n<tr>\n<td>P</td>\n<td>按CPU排序</td>\n</tr>\n<tr>\n<td>T</td>\n<td>按运行时间排序</td>\n</tr>\n</tbody>\n</table>\n<p>htop的左上角显示CPU、内存、交换区的使用情况，右边显示任务、负载、开机时间，下面是进程实时状态。<br>最后一行是F1～F10的功能菜单和对应的字符快捷键。</p>\n<h2 id=\"6-linux系统性能分析\"><a href=\"#6-linux系统性能分析\" class=\"headerlink\" title=\"6. linux系统性能分析\"></a>6. linux系统性能分析</h2><p>分析次序为cpu mem disk network</p>\n"},{"title":"git cherry-pick","date":"2017-01-14T05:06:14.000Z","_content":"\n## 1. 用法\n\n```\n$ git cherry-pick <commit id>\n```\n\ncherry-pick的作用是在当前分支上应用某一个提交，在合并的时候特别有用。\n当前在 fixbug 分支上，做了3次修改并提交到本地\n\n```\n$ git branch\n* fixbug\n  master\n\n$ git log --oneline \n43f50dd fix bug3\nb24931f fix bug2\n9ab09b7 fix bug1\n```\n这时候我发现 fix bug1 这个提交是不需要的，之需要将后2次合并进主分支即可。 可以这么操作:\n\n```\n$ git checkout master  #切换到master分支\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\n\n$ git cherry-pick 9ab09b7..43f50dd\n[master 9cc5bca] fix bug2\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 b\n[master 5a0704b] fix bug3\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 c\n\n$ git log --oneline \n5a0704b fix bug3\n9cc5bca fix bug2\nc9e81c7 rename\n```\n\n可以看到，执行`check-pick`后， git 将指定的 commit <font color=red>(不含第一个，包含 最后一个)</font> 应用到了当前的 master 分支。执行完之后，可以删除掉 fixbug 分支。这样就可以很方便的从一个分支里面选取一部分提交合并到主分支里面去 了。当然同样也会遇到需要merge的情况。和merege一样操作即可。\n\n\n## 2. 实例 \n\n在本地 fixbug 分支上做了一个commit (09e827c96960780ebdee18040a4324de7fecba9b)， 如何把它放到 master 分支上？ \n\n办法之一： 使用 cherry-pick.  根据git 文档：\n> Apply the changes introduced by some existing commits\n\n就是对已经存在的commit 进行apply (可以理解为再次提交）\n例如：\n```\n$ git checkout master\n$ git cherry-pick 09e827c     # 这个09e827c号码，位于：\n```\n\n```\n$ git log\ncommit 09e827c96960780ebdee18040a4324de7fecba9b\nAuthor: niuzhiqiang <niuzhiqiang90@foxmail.com>\nDate:   Fri Aug 12 10:52:32 2016 +0800\n\n    add other\n\n```\n\n### 2.1 如果顺利，就会正常提交。结果：\n\n```\n$ git cherry-pick 9ab09b7..43f50dd\n[master 9cc5bca] fix bug2\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 b\n[master 5a0704b] fix 3\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 c\n```\n\n### 2.2 如果在cherry-pick的过程中出现了冲突\n\n```\n$ git cherry-pick 09e827c\nerror: could not apply 09e827c... add other\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n```\n\n#### 2.2.1 看哪些文件出现冲突\n\n```\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 3 commits.\n  (use \"git push\" to publish your local commits)\n\nYou are currently cherry-picking commit 09e827c.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\n        both modified:      b\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n\n```\n$ git diff \ndiff --cc b\nindex 7898192,6178079..0000000\n--- a/b\n+++ b/b\n@@@ -1,1 -1,1 +1,5 @@@\n++<<<<<<< HEAD\n +a\n++=======\n +b\n++>>>>>>> 09e827c... add other\n```\n\n#### 2.2.2 手动解决它\n\n```\n$ vi b \n<<<<<<< HEAD\na\n=======\nb\n>>>>>>> 09e827c... add other\n```\n\n保存退出，手动提交\n\n```\n$ git add b\n$ git commit -m \"merge by handler\"\n$ git push\n```\n","source":"_posts/git-cherry-pick.md","raw":"---\ntitle: git cherry-pick\ndate: 2017-01-14 13:06:14\ncategories: git\ntags: git\n---\n\n## 1. 用法\n\n```\n$ git cherry-pick <commit id>\n```\n\ncherry-pick的作用是在当前分支上应用某一个提交，在合并的时候特别有用。\n当前在 fixbug 分支上，做了3次修改并提交到本地\n\n```\n$ git branch\n* fixbug\n  master\n\n$ git log --oneline \n43f50dd fix bug3\nb24931f fix bug2\n9ab09b7 fix bug1\n```\n这时候我发现 fix bug1 这个提交是不需要的，之需要将后2次合并进主分支即可。 可以这么操作:\n\n```\n$ git checkout master  #切换到master分支\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\n\n$ git cherry-pick 9ab09b7..43f50dd\n[master 9cc5bca] fix bug2\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 b\n[master 5a0704b] fix bug3\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 c\n\n$ git log --oneline \n5a0704b fix bug3\n9cc5bca fix bug2\nc9e81c7 rename\n```\n\n可以看到，执行`check-pick`后， git 将指定的 commit <font color=red>(不含第一个，包含 最后一个)</font> 应用到了当前的 master 分支。执行完之后，可以删除掉 fixbug 分支。这样就可以很方便的从一个分支里面选取一部分提交合并到主分支里面去 了。当然同样也会遇到需要merge的情况。和merege一样操作即可。\n\n\n## 2. 实例 \n\n在本地 fixbug 分支上做了一个commit (09e827c96960780ebdee18040a4324de7fecba9b)， 如何把它放到 master 分支上？ \n\n办法之一： 使用 cherry-pick.  根据git 文档：\n> Apply the changes introduced by some existing commits\n\n就是对已经存在的commit 进行apply (可以理解为再次提交）\n例如：\n```\n$ git checkout master\n$ git cherry-pick 09e827c     # 这个09e827c号码，位于：\n```\n\n```\n$ git log\ncommit 09e827c96960780ebdee18040a4324de7fecba9b\nAuthor: niuzhiqiang <niuzhiqiang90@foxmail.com>\nDate:   Fri Aug 12 10:52:32 2016 +0800\n\n    add other\n\n```\n\n### 2.1 如果顺利，就会正常提交。结果：\n\n```\n$ git cherry-pick 9ab09b7..43f50dd\n[master 9cc5bca] fix bug2\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 b\n[master 5a0704b] fix 3\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 c\n```\n\n### 2.2 如果在cherry-pick的过程中出现了冲突\n\n```\n$ git cherry-pick 09e827c\nerror: could not apply 09e827c... add other\nhint: after resolving the conflicts, mark the corrected paths\nhint: with 'git add <paths>' or 'git rm <paths>'\nhint: and commit the result with 'git commit'\n```\n\n#### 2.2.1 看哪些文件出现冲突\n\n```\n$ git status\nOn branch master\nYour branch is ahead of 'origin/master' by 3 commits.\n  (use \"git push\" to publish your local commits)\n\nYou are currently cherry-picking commit 09e827c.\n  (fix conflicts and run \"git cherry-pick --continue\")\n  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)\n\nUnmerged paths:\n  (use \"git add <file>...\" to mark resolution)\n\n        both modified:      b\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n\n```\n$ git diff \ndiff --cc b\nindex 7898192,6178079..0000000\n--- a/b\n+++ b/b\n@@@ -1,1 -1,1 +1,5 @@@\n++<<<<<<< HEAD\n +a\n++=======\n +b\n++>>>>>>> 09e827c... add other\n```\n\n#### 2.2.2 手动解决它\n\n```\n$ vi b \n<<<<<<< HEAD\na\n=======\nb\n>>>>>>> 09e827c... add other\n```\n\n保存退出，手动提交\n\n```\n$ git add b\n$ git commit -m \"merge by handler\"\n$ git push\n```\n","slug":"git-cherry-pick","published":1,"updated":"2017-01-14T05:27:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsiu000lx0s6t8n1v8yy","content":"<h2 id=\"1-用法\"><a href=\"#1-用法\" class=\"headerlink\" title=\"1. 用法\"></a>1. 用法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git cherry-pick &lt;commit id&gt;</span><br></pre></td></tr></table></figure>\n<p>cherry-pick的作用是在当前分支上应用某一个提交，在合并的时候特别有用。<br>当前在 fixbug 分支上，做了3次修改并提交到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\">* fixbug</span><br><span class=\"line\">  master</span><br><span class=\"line\"></span><br><span class=\"line\">$ git log --oneline </span><br><span class=\"line\">43f50dd fix bug3</span><br><span class=\"line\">b24931f fix bug2</span><br><span class=\"line\">9ab09b7 fix bug1</span><br></pre></td></tr></table></figure>\n<p>这时候我发现 fix bug1 这个提交是不需要的，之需要将后2次合并进主分支即可。 可以这么操作:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master  #切换到master分支</span><br><span class=\"line\">Switched to branch &apos;master&apos;</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class=\"line\"></span><br><span class=\"line\">$ git cherry-pick 9ab09b7..43f50dd</span><br><span class=\"line\">[master 9cc5bca] fix bug2</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 b</span><br><span class=\"line\">[master 5a0704b] fix bug3</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 c</span><br><span class=\"line\"></span><br><span class=\"line\">$ git log --oneline </span><br><span class=\"line\">5a0704b fix bug3</span><br><span class=\"line\">9cc5bca fix bug2</span><br><span class=\"line\">c9e81c7 rename</span><br></pre></td></tr></table></figure>\n<p>可以看到，执行<code>check-pick</code>后， git 将指定的 commit <font color=\"red\">(不含第一个，包含 最后一个)</font> 应用到了当前的 master 分支。执行完之后，可以删除掉 fixbug 分支。这样就可以很方便的从一个分支里面选取一部分提交合并到主分支里面去 了。当然同样也会遇到需要merge的情况。和merege一样操作即可。</p>\n<h2 id=\"2-实例\"><a href=\"#2-实例\" class=\"headerlink\" title=\"2. 实例\"></a>2. 实例</h2><p>在本地 fixbug 分支上做了一个commit (09e827c96960780ebdee18040a4324de7fecba9b)， 如何把它放到 master 分支上？ </p>\n<p>办法之一： 使用 cherry-pick.  根据git 文档：</p>\n<blockquote>\n<p>Apply the changes introduced by some existing commits</p>\n</blockquote>\n<p>就是对已经存在的commit 进行apply (可以理解为再次提交）<br>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master</span><br><span class=\"line\">$ git cherry-pick 09e827c     # 这个09e827c号码，位于：</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log</span><br><span class=\"line\">commit 09e827c96960780ebdee18040a4324de7fecba9b</span><br><span class=\"line\">Author: niuzhiqiang &lt;niuzhiqiang90@foxmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 10:52:32 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    add other</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-1-如果顺利，就会正常提交。结果：\"><a href=\"#2-1-如果顺利，就会正常提交。结果：\" class=\"headerlink\" title=\"2.1 如果顺利，就会正常提交。结果：\"></a>2.1 如果顺利，就会正常提交。结果：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git cherry-pick 9ab09b7..43f50dd</span><br><span class=\"line\">[master 9cc5bca] fix bug2</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 b</span><br><span class=\"line\">[master 5a0704b] fix 3</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 c</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-如果在cherry-pick的过程中出现了冲突\"><a href=\"#2-2-如果在cherry-pick的过程中出现了冲突\" class=\"headerlink\" title=\"2.2 如果在cherry-pick的过程中出现了冲突\"></a>2.2 如果在cherry-pick的过程中出现了冲突</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git cherry-pick 09e827c</span><br><span class=\"line\">error: could not apply 09e827c... add other</span><br><span class=\"line\">hint: after resolving the conflicts, mark the corrected paths</span><br><span class=\"line\">hint: with &apos;git add &lt;paths&gt;&apos; or &apos;git rm &lt;paths&gt;&apos;</span><br><span class=\"line\">hint: and commit the result with &apos;git commit&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-1-看哪些文件出现冲突\"><a href=\"#2-2-1-看哪些文件出现冲突\" class=\"headerlink\" title=\"2.2.1 看哪些文件出现冲突\"></a>2.2.1 看哪些文件出现冲突</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of &apos;origin/master&apos; by 3 commits.</span><br><span class=\"line\">  (use &quot;git push&quot; to publish your local commits)</span><br><span class=\"line\"></span><br><span class=\"line\">You are currently cherry-picking commit 09e827c.</span><br><span class=\"line\">  (fix conflicts and run &quot;git cherry-pick --continue&quot;)</span><br><span class=\"line\">  (use &quot;git cherry-pick --abort&quot; to cancel the cherry-pick operation)</span><br><span class=\"line\"></span><br><span class=\"line\">Unmerged paths:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</span><br><span class=\"line\"></span><br><span class=\"line\">        both modified:      b</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff </span><br><span class=\"line\">diff --cc b</span><br><span class=\"line\">index 7898192,6178079..0000000</span><br><span class=\"line\">--- a/b</span><br><span class=\"line\">+++ b/b</span><br><span class=\"line\">@@@ -1,1 -1,1 +1,5 @@@</span><br><span class=\"line\">++&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\"> +a</span><br><span class=\"line\">++=======</span><br><span class=\"line\"> +b</span><br><span class=\"line\">++&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09e827c... add other</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-2-手动解决它\"><a href=\"#2-2-2-手动解决它\" class=\"headerlink\" title=\"2.2.2 手动解决它\"></a>2.2.2 手动解决它</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi b </span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">a</span><br><span class=\"line\">=======</span><br><span class=\"line\">b</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09e827c... add other</span><br></pre></td></tr></table></figure>\n<p>保存退出，手动提交</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add b</span><br><span class=\"line\">$ git commit -m &quot;merge by handler&quot;</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-用法\"><a href=\"#1-用法\" class=\"headerlink\" title=\"1. 用法\"></a>1. 用法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git cherry-pick &lt;commit id&gt;</span><br></pre></td></tr></table></figure>\n<p>cherry-pick的作用是在当前分支上应用某一个提交，在合并的时候特别有用。<br>当前在 fixbug 分支上，做了3次修改并提交到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch</span><br><span class=\"line\">* fixbug</span><br><span class=\"line\">  master</span><br><span class=\"line\"></span><br><span class=\"line\">$ git log --oneline </span><br><span class=\"line\">43f50dd fix bug3</span><br><span class=\"line\">b24931f fix bug2</span><br><span class=\"line\">9ab09b7 fix bug1</span><br></pre></td></tr></table></figure>\n<p>这时候我发现 fix bug1 这个提交是不需要的，之需要将后2次合并进主分支即可。 可以这么操作:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master  #切换到master分支</span><br><span class=\"line\">Switched to branch &apos;master&apos;</span><br><span class=\"line\">Your branch is up-to-date with &apos;origin/master&apos;.</span><br><span class=\"line\"></span><br><span class=\"line\">$ git cherry-pick 9ab09b7..43f50dd</span><br><span class=\"line\">[master 9cc5bca] fix bug2</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 b</span><br><span class=\"line\">[master 5a0704b] fix bug3</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 c</span><br><span class=\"line\"></span><br><span class=\"line\">$ git log --oneline </span><br><span class=\"line\">5a0704b fix bug3</span><br><span class=\"line\">9cc5bca fix bug2</span><br><span class=\"line\">c9e81c7 rename</span><br></pre></td></tr></table></figure>\n<p>可以看到，执行<code>check-pick</code>后， git 将指定的 commit <font color=\"red\">(不含第一个，包含 最后一个)</font> 应用到了当前的 master 分支。执行完之后，可以删除掉 fixbug 分支。这样就可以很方便的从一个分支里面选取一部分提交合并到主分支里面去 了。当然同样也会遇到需要merge的情况。和merege一样操作即可。</p>\n<h2 id=\"2-实例\"><a href=\"#2-实例\" class=\"headerlink\" title=\"2. 实例\"></a>2. 实例</h2><p>在本地 fixbug 分支上做了一个commit (09e827c96960780ebdee18040a4324de7fecba9b)， 如何把它放到 master 分支上？ </p>\n<p>办法之一： 使用 cherry-pick.  根据git 文档：</p>\n<blockquote>\n<p>Apply the changes introduced by some existing commits</p>\n</blockquote>\n<p>就是对已经存在的commit 进行apply (可以理解为再次提交）<br>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master</span><br><span class=\"line\">$ git cherry-pick 09e827c     # 这个09e827c号码，位于：</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log</span><br><span class=\"line\">commit 09e827c96960780ebdee18040a4324de7fecba9b</span><br><span class=\"line\">Author: niuzhiqiang &lt;niuzhiqiang90@foxmail.com&gt;</span><br><span class=\"line\">Date:   Fri Aug 12 10:52:32 2016 +0800</span><br><span class=\"line\"></span><br><span class=\"line\">    add other</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-1-如果顺利，就会正常提交。结果：\"><a href=\"#2-1-如果顺利，就会正常提交。结果：\" class=\"headerlink\" title=\"2.1 如果顺利，就会正常提交。结果：\"></a>2.1 如果顺利，就会正常提交。结果：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git cherry-pick 9ab09b7..43f50dd</span><br><span class=\"line\">[master 9cc5bca] fix bug2</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 b</span><br><span class=\"line\">[master 5a0704b] fix 3</span><br><span class=\"line\"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class=\"line\"> create mode 100644 c</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-如果在cherry-pick的过程中出现了冲突\"><a href=\"#2-2-如果在cherry-pick的过程中出现了冲突\" class=\"headerlink\" title=\"2.2 如果在cherry-pick的过程中出现了冲突\"></a>2.2 如果在cherry-pick的过程中出现了冲突</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git cherry-pick 09e827c</span><br><span class=\"line\">error: could not apply 09e827c... add other</span><br><span class=\"line\">hint: after resolving the conflicts, mark the corrected paths</span><br><span class=\"line\">hint: with &apos;git add &lt;paths&gt;&apos; or &apos;git rm &lt;paths&gt;&apos;</span><br><span class=\"line\">hint: and commit the result with &apos;git commit&apos;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-1-看哪些文件出现冲突\"><a href=\"#2-2-1-看哪些文件出现冲突\" class=\"headerlink\" title=\"2.2.1 看哪些文件出现冲突\"></a>2.2.1 看哪些文件出现冲突</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Your branch is ahead of &apos;origin/master&apos; by 3 commits.</span><br><span class=\"line\">  (use &quot;git push&quot; to publish your local commits)</span><br><span class=\"line\"></span><br><span class=\"line\">You are currently cherry-picking commit 09e827c.</span><br><span class=\"line\">  (fix conflicts and run &quot;git cherry-pick --continue&quot;)</span><br><span class=\"line\">  (use &quot;git cherry-pick --abort&quot; to cancel the cherry-pick operation)</span><br><span class=\"line\"></span><br><span class=\"line\">Unmerged paths:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</span><br><span class=\"line\"></span><br><span class=\"line\">        both modified:      b</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git diff </span><br><span class=\"line\">diff --cc b</span><br><span class=\"line\">index 7898192,6178079..0000000</span><br><span class=\"line\">--- a/b</span><br><span class=\"line\">+++ b/b</span><br><span class=\"line\">@@@ -1,1 -1,1 +1,5 @@@</span><br><span class=\"line\">++&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\"> +a</span><br><span class=\"line\">++=======</span><br><span class=\"line\"> +b</span><br><span class=\"line\">++&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09e827c... add other</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-2-手动解决它\"><a href=\"#2-2-2-手动解决它\" class=\"headerlink\" title=\"2.2.2 手动解决它\"></a>2.2.2 手动解决它</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi b </span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class=\"line\">a</span><br><span class=\"line\">=======</span><br><span class=\"line\">b</span><br><span class=\"line\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09e827c... add other</span><br></pre></td></tr></table></figure>\n<p>保存退出，手动提交</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add b</span><br><span class=\"line\">$ git commit -m &quot;merge by handler&quot;</span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n"},{"title":"python使用和导入模块","date":"2017-03-20T13:47:06.000Z","_content":"\n## 1. 导入模块的方法 \n\n```\nimport moduleName 导入模块\nFrom module import sayHi  从模块导入某个具体的方法\nimport moduleName as newName  给模块起别名\nfrom sys import *   导入模块下的所有方法 \n```\n\n- 给模块起别名\n```\nimport multiprocessing as multi\n```\n\n\n- 把模块下所有的方法导入\n```\n>>> from sys import *\n>>> print path\n['', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/PILcompat', '/usr/lib/python2.7/dist-packages/gtk-2.0', '/usr/lib/pymodules/python2.7', '/usr/lib/python2.7/dist-packages/ubuntu-sso-client']\n```\n\n<font color=red>不建议使用`from sys import *` 可能被自定义的变量覆盖 调用时加上模块名 `sys.argv[2]` 可防止 </font>\n\n\n## 2. 系统命令交互模块\n### 2.1 os模块\n\n```\n>>> import os\n>>> os.system('pwd')\n/home/niuzhiqiang/Desktop\n0\n>>> cur_dir = os.system('pwd')\n/home/xxx/Desktop\n>>> print cur_dir\n0\n\n>>> os.popen('pwd')\n<open file 'pwd', mode 'r' at 0x7f9017578c90>\n>>> cur_dir = os.popen('pwd').read()\n>>> print cur_dir\n/home/xxx/Desktop\n```\n**例：循环列出目录下的内容**\n\n```\n>>> os.walk('/the/directory/')\n>>> os.next()\n>>> os.next()\n```\n\n### 2.2 commands模块\n```\n>>> import commands\n>>> res = commands.getstatusoutput('pwd')\n>>> print res\n(0, '/home/xxx/Desktop')\n>>> print res[1]\n/home/xxx/Desktop\n```\n\n### 2.3 subprocess模块\ntodo\n\n\n\n### 2.4 sys模块\n\n取程序的参数\n```\nimport sys\nprint sys.argv\nprint sys.argv[2]\n```\n\n```\nfrom sys import argv\n# 不需要使用`sys.`\nprint argv\n```\n","source":"_posts/python使用和导入模块.md","raw":"---\ntitle: python使用和导入模块\ndate: 2017-03-20 21:47:06\ntags: python\n---\n\n## 1. 导入模块的方法 \n\n```\nimport moduleName 导入模块\nFrom module import sayHi  从模块导入某个具体的方法\nimport moduleName as newName  给模块起别名\nfrom sys import *   导入模块下的所有方法 \n```\n\n- 给模块起别名\n```\nimport multiprocessing as multi\n```\n\n\n- 把模块下所有的方法导入\n```\n>>> from sys import *\n>>> print path\n['', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/PILcompat', '/usr/lib/python2.7/dist-packages/gtk-2.0', '/usr/lib/pymodules/python2.7', '/usr/lib/python2.7/dist-packages/ubuntu-sso-client']\n```\n\n<font color=red>不建议使用`from sys import *` 可能被自定义的变量覆盖 调用时加上模块名 `sys.argv[2]` 可防止 </font>\n\n\n## 2. 系统命令交互模块\n### 2.1 os模块\n\n```\n>>> import os\n>>> os.system('pwd')\n/home/niuzhiqiang/Desktop\n0\n>>> cur_dir = os.system('pwd')\n/home/xxx/Desktop\n>>> print cur_dir\n0\n\n>>> os.popen('pwd')\n<open file 'pwd', mode 'r' at 0x7f9017578c90>\n>>> cur_dir = os.popen('pwd').read()\n>>> print cur_dir\n/home/xxx/Desktop\n```\n**例：循环列出目录下的内容**\n\n```\n>>> os.walk('/the/directory/')\n>>> os.next()\n>>> os.next()\n```\n\n### 2.2 commands模块\n```\n>>> import commands\n>>> res = commands.getstatusoutput('pwd')\n>>> print res\n(0, '/home/xxx/Desktop')\n>>> print res[1]\n/home/xxx/Desktop\n```\n\n### 2.3 subprocess模块\ntodo\n\n\n\n### 2.4 sys模块\n\n取程序的参数\n```\nimport sys\nprint sys.argv\nprint sys.argv[2]\n```\n\n```\nfrom sys import argv\n# 不需要使用`sys.`\nprint argv\n```\n","slug":"python使用和导入模块","published":1,"updated":"2017-03-21T13:16:24.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsiv000nx0s645nfj39x","content":"<h2 id=\"1-导入模块的方法\"><a href=\"#1-导入模块的方法\" class=\"headerlink\" title=\"1. 导入模块的方法\"></a>1. 导入模块的方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import moduleName 导入模块</span><br><span class=\"line\">From module import sayHi  从模块导入某个具体的方法</span><br><span class=\"line\">import moduleName as newName  给模块起别名</span><br><span class=\"line\">from sys import *   导入模块下的所有方法</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>给模块起别名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import multiprocessing as multi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把模块下所有的方法导入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; from sys import *</span><br><span class=\"line\">&gt;&gt;&gt; print path</span><br><span class=\"line\">[&apos;&apos;, &apos;/usr/lib/python2.7&apos;, &apos;/usr/lib/python2.7/plat-x86_64-linux-gnu&apos;, &apos;/usr/lib/python2.7/lib-tk&apos;, &apos;/usr/lib/python2.7/lib-old&apos;, &apos;/usr/lib/python2.7/lib-dynload&apos;, &apos;/usr/local/lib/python2.7/dist-packages&apos;, &apos;/usr/lib/python2.7/dist-packages&apos;, &apos;/usr/lib/python2.7/dist-packages/PILcompat&apos;, &apos;/usr/lib/python2.7/dist-packages/gtk-2.0&apos;, &apos;/usr/lib/pymodules/python2.7&apos;, &apos;/usr/lib/python2.7/dist-packages/ubuntu-sso-client&apos;]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<font color=\"red\">不建议使用<code>from sys import *</code> 可能被自定义的变量覆盖 调用时加上模块名 <code>sys.argv[2]</code> 可防止 </font>\n\n\n<h2 id=\"2-系统命令交互模块\"><a href=\"#2-系统命令交互模块\" class=\"headerlink\" title=\"2. 系统命令交互模块\"></a>2. 系统命令交互模块</h2><h3 id=\"2-1-os模块\"><a href=\"#2-1-os模块\" class=\"headerlink\" title=\"2.1 os模块\"></a>2.1 os模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import os</span><br><span class=\"line\">&gt;&gt;&gt; os.system(&apos;pwd&apos;)</span><br><span class=\"line\">/home/niuzhiqiang/Desktop</span><br><span class=\"line\">0</span><br><span class=\"line\">&gt;&gt;&gt; cur_dir = os.system(&apos;pwd&apos;)</span><br><span class=\"line\">/home/xxx/Desktop</span><br><span class=\"line\">&gt;&gt;&gt; print cur_dir</span><br><span class=\"line\">0</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; os.popen(&apos;pwd&apos;)</span><br><span class=\"line\">&lt;open file &apos;pwd&apos;, mode &apos;r&apos; at 0x7f9017578c90&gt;</span><br><span class=\"line\">&gt;&gt;&gt; cur_dir = os.popen(&apos;pwd&apos;).read()</span><br><span class=\"line\">&gt;&gt;&gt; print cur_dir</span><br><span class=\"line\">/home/xxx/Desktop</span><br></pre></td></tr></table></figure>\n<p><strong>例：循环列出目录下的内容</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; os.walk(&apos;/the/directory/&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; os.next()</span><br><span class=\"line\">&gt;&gt;&gt; os.next()</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-commands模块\"><a href=\"#2-2-commands模块\" class=\"headerlink\" title=\"2.2 commands模块\"></a>2.2 commands模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import commands</span><br><span class=\"line\">&gt;&gt;&gt; res = commands.getstatusoutput(&apos;pwd&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; print res</span><br><span class=\"line\">(0, &apos;/home/xxx/Desktop&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; print res[1]</span><br><span class=\"line\">/home/xxx/Desktop</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-subprocess模块\"><a href=\"#2-3-subprocess模块\" class=\"headerlink\" title=\"2.3 subprocess模块\"></a>2.3 subprocess模块</h3><p>todo</p>\n<h3 id=\"2-4-sys模块\"><a href=\"#2-4-sys模块\" class=\"headerlink\" title=\"2.4 sys模块\"></a>2.4 sys模块</h3><p>取程序的参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">print sys.argv</span><br><span class=\"line\">print sys.argv[2]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from sys import argv</span><br><span class=\"line\"># 不需要使用`sys.`</span><br><span class=\"line\">print argv</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-导入模块的方法\"><a href=\"#1-导入模块的方法\" class=\"headerlink\" title=\"1. 导入模块的方法\"></a>1. 导入模块的方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import moduleName 导入模块</span><br><span class=\"line\">From module import sayHi  从模块导入某个具体的方法</span><br><span class=\"line\">import moduleName as newName  给模块起别名</span><br><span class=\"line\">from sys import *   导入模块下的所有方法</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>给模块起别名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import multiprocessing as multi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把模块下所有的方法导入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; from sys import *</span><br><span class=\"line\">&gt;&gt;&gt; print path</span><br><span class=\"line\">[&apos;&apos;, &apos;/usr/lib/python2.7&apos;, &apos;/usr/lib/python2.7/plat-x86_64-linux-gnu&apos;, &apos;/usr/lib/python2.7/lib-tk&apos;, &apos;/usr/lib/python2.7/lib-old&apos;, &apos;/usr/lib/python2.7/lib-dynload&apos;, &apos;/usr/local/lib/python2.7/dist-packages&apos;, &apos;/usr/lib/python2.7/dist-packages&apos;, &apos;/usr/lib/python2.7/dist-packages/PILcompat&apos;, &apos;/usr/lib/python2.7/dist-packages/gtk-2.0&apos;, &apos;/usr/lib/pymodules/python2.7&apos;, &apos;/usr/lib/python2.7/dist-packages/ubuntu-sso-client&apos;]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<font color=\"red\">不建议使用<code>from sys import *</code> 可能被自定义的变量覆盖 调用时加上模块名 <code>sys.argv[2]</code> 可防止 </font>\n\n\n<h2 id=\"2-系统命令交互模块\"><a href=\"#2-系统命令交互模块\" class=\"headerlink\" title=\"2. 系统命令交互模块\"></a>2. 系统命令交互模块</h2><h3 id=\"2-1-os模块\"><a href=\"#2-1-os模块\" class=\"headerlink\" title=\"2.1 os模块\"></a>2.1 os模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import os</span><br><span class=\"line\">&gt;&gt;&gt; os.system(&apos;pwd&apos;)</span><br><span class=\"line\">/home/niuzhiqiang/Desktop</span><br><span class=\"line\">0</span><br><span class=\"line\">&gt;&gt;&gt; cur_dir = os.system(&apos;pwd&apos;)</span><br><span class=\"line\">/home/xxx/Desktop</span><br><span class=\"line\">&gt;&gt;&gt; print cur_dir</span><br><span class=\"line\">0</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; os.popen(&apos;pwd&apos;)</span><br><span class=\"line\">&lt;open file &apos;pwd&apos;, mode &apos;r&apos; at 0x7f9017578c90&gt;</span><br><span class=\"line\">&gt;&gt;&gt; cur_dir = os.popen(&apos;pwd&apos;).read()</span><br><span class=\"line\">&gt;&gt;&gt; print cur_dir</span><br><span class=\"line\">/home/xxx/Desktop</span><br></pre></td></tr></table></figure>\n<p><strong>例：循环列出目录下的内容</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; os.walk(&apos;/the/directory/&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; os.next()</span><br><span class=\"line\">&gt;&gt;&gt; os.next()</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-commands模块\"><a href=\"#2-2-commands模块\" class=\"headerlink\" title=\"2.2 commands模块\"></a>2.2 commands模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import commands</span><br><span class=\"line\">&gt;&gt;&gt; res = commands.getstatusoutput(&apos;pwd&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; print res</span><br><span class=\"line\">(0, &apos;/home/xxx/Desktop&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; print res[1]</span><br><span class=\"line\">/home/xxx/Desktop</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-subprocess模块\"><a href=\"#2-3-subprocess模块\" class=\"headerlink\" title=\"2.3 subprocess模块\"></a>2.3 subprocess模块</h3><p>todo</p>\n<h3 id=\"2-4-sys模块\"><a href=\"#2-4-sys模块\" class=\"headerlink\" title=\"2.4 sys模块\"></a>2.4 sys模块</h3><p>取程序的参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">print sys.argv</span><br><span class=\"line\">print sys.argv[2]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from sys import argv</span><br><span class=\"line\"># 不需要使用`sys.`</span><br><span class=\"line\">print argv</span><br></pre></td></tr></table></figure>\n"},{"title":"python字符串对齐","date":"2018-10-13T03:15:18.000Z","_content":"\n# python字符串对齐\n\n```\ntitle = \"九九乘法口诀表\"\n```\n\n## 1. 使用`ljust`,`rjust`,`center`方法\n```\nljust(s, width, *args)\n        ljust(s, width[, fillchar]) -> string\n        \n        Return a left-justified version of s, in a field of the\n        specified width, padded with spaces as needed.  The string is\n        never truncated.  If specified the fillchar is used instead of spaces.\n\nrjust(s, width, *args)\n        rjust(s, width[, fillchar]) -> string\n        \n        Return a right-justified version of s, in a field of the\n        specified width, padded with spaces as needed.  The string is\n        never truncated.  If specified the fillchar is used instead of spaces.\n\ncenter(s, width, *args)\n        center(s, width[, fillchar]) -> string\n        \n        Return a center version of s, in a field of the specified\n        width. padded with spaces as needed.  The string is never\n        truncated.  If specified the fillchar is used instead of spaces.\n```\n\n不指定填充字符默认空格\n```\n# 左对齐\nprint(title.ljust(100))\n# 右对齐\nprint(title.rjust(100))\n# 居中 \nprint(title.center(100))\n```\n\n指定填充字符为星号\n```\nprint(title.ljust(100,'*'))\nprint(title.rjust(100,'*'))\nprint(title.center(100,'*'))\n\n```\n\n## 2. 使用`format`方法\n\n`<` 左对齐\n`>` 右对齐\n`^` 居中对齐\n不指定填充字符默认空格\n```\nprint(format(title,\"<100\"));\nprint(format(title,\">100\"));\nprint(format(title,\"^100\"));\n\nprint('{:<100}'.format(title))\nprint('{:>100}'.format(title))\nprint('{:^100}'.format(title))\n\n```\n\n指定填充字符为星号\n```\nprint(format(title,\"*<100\"));\nprint(format(title,\"*>100\"));\nprint(format(title,\"*^100\"));\n\nprint('{:*<100}'.format(title))\nprint('{:>*100}'.format(title))\nprint('{:^*100}'.format(title))\n\n```\n\n精度与类型f\n```\nprint('{:.2f}'.format(3.1415926))\n```\n\n进制\n```\nprint('{:b}'.format(13))\nprint('{:o}'.format(13))\nprint('{:d}'.format(13))\nprint('{:x}'.format(13))\n```\n\n用逗号作金额的分隔符\n```\nprint('{:,}'.format(123456789))\n```\n\n\n\n","source":"_posts/python字符串对齐.md","raw":"---\ntitle: python字符串对齐\ndate: 2018-10-13 11:15:18\ntags: python\n---\n\n# python字符串对齐\n\n```\ntitle = \"九九乘法口诀表\"\n```\n\n## 1. 使用`ljust`,`rjust`,`center`方法\n```\nljust(s, width, *args)\n        ljust(s, width[, fillchar]) -> string\n        \n        Return a left-justified version of s, in a field of the\n        specified width, padded with spaces as needed.  The string is\n        never truncated.  If specified the fillchar is used instead of spaces.\n\nrjust(s, width, *args)\n        rjust(s, width[, fillchar]) -> string\n        \n        Return a right-justified version of s, in a field of the\n        specified width, padded with spaces as needed.  The string is\n        never truncated.  If specified the fillchar is used instead of spaces.\n\ncenter(s, width, *args)\n        center(s, width[, fillchar]) -> string\n        \n        Return a center version of s, in a field of the specified\n        width. padded with spaces as needed.  The string is never\n        truncated.  If specified the fillchar is used instead of spaces.\n```\n\n不指定填充字符默认空格\n```\n# 左对齐\nprint(title.ljust(100))\n# 右对齐\nprint(title.rjust(100))\n# 居中 \nprint(title.center(100))\n```\n\n指定填充字符为星号\n```\nprint(title.ljust(100,'*'))\nprint(title.rjust(100,'*'))\nprint(title.center(100,'*'))\n\n```\n\n## 2. 使用`format`方法\n\n`<` 左对齐\n`>` 右对齐\n`^` 居中对齐\n不指定填充字符默认空格\n```\nprint(format(title,\"<100\"));\nprint(format(title,\">100\"));\nprint(format(title,\"^100\"));\n\nprint('{:<100}'.format(title))\nprint('{:>100}'.format(title))\nprint('{:^100}'.format(title))\n\n```\n\n指定填充字符为星号\n```\nprint(format(title,\"*<100\"));\nprint(format(title,\"*>100\"));\nprint(format(title,\"*^100\"));\n\nprint('{:*<100}'.format(title))\nprint('{:>*100}'.format(title))\nprint('{:^*100}'.format(title))\n\n```\n\n精度与类型f\n```\nprint('{:.2f}'.format(3.1415926))\n```\n\n进制\n```\nprint('{:b}'.format(13))\nprint('{:o}'.format(13))\nprint('{:d}'.format(13))\nprint('{:x}'.format(13))\n```\n\n用逗号作金额的分隔符\n```\nprint('{:,}'.format(123456789))\n```\n\n\n\n","slug":"python字符串对齐","published":1,"updated":"2018-10-15T05:51:40.119Z","_id":"cjn9vlsiw000px0s697pl36fo","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"python字符串对齐\"><a href=\"#python字符串对齐\" class=\"headerlink\" title=\"python字符串对齐\"></a>python字符串对齐</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title = &quot;九九乘法口诀表&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-使用ljust-rjust-center方法\"><a href=\"#1-使用ljust-rjust-center方法\" class=\"headerlink\" title=\"1. 使用ljust,rjust,center方法\"></a>1. 使用<code>ljust</code>,<code>rjust</code>,<code>center</code>方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ljust(s, width, *args)</span><br><span class=\"line\">        ljust(s, width[, fillchar]) -&gt; string</span><br><span class=\"line\">        </span><br><span class=\"line\">        Return a left-justified version of s, in a field of the</span><br><span class=\"line\">        specified width, padded with spaces as needed.  The string is</span><br><span class=\"line\">        never truncated.  If specified the fillchar is used instead of spaces.</span><br><span class=\"line\"></span><br><span class=\"line\">rjust(s, width, *args)</span><br><span class=\"line\">        rjust(s, width[, fillchar]) -&gt; string</span><br><span class=\"line\">        </span><br><span class=\"line\">        Return a right-justified version of s, in a field of the</span><br><span class=\"line\">        specified width, padded with spaces as needed.  The string is</span><br><span class=\"line\">        never truncated.  If specified the fillchar is used instead of spaces.</span><br><span class=\"line\"></span><br><span class=\"line\">center(s, width, *args)</span><br><span class=\"line\">        center(s, width[, fillchar]) -&gt; string</span><br><span class=\"line\">        </span><br><span class=\"line\">        Return a center version of s, in a field of the specified</span><br><span class=\"line\">        width. padded with spaces as needed.  The string is never</span><br><span class=\"line\">        truncated.  If specified the fillchar is used instead of spaces.</span><br></pre></td></tr></table></figure>\n<p>不指定填充字符默认空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 左对齐</span><br><span class=\"line\">print(title.ljust(100))</span><br><span class=\"line\"># 右对齐</span><br><span class=\"line\">print(title.rjust(100))</span><br><span class=\"line\"># 居中 </span><br><span class=\"line\">print(title.center(100))</span><br></pre></td></tr></table></figure></p>\n<p>指定填充字符为星号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(title.ljust(100,&apos;*&apos;))</span><br><span class=\"line\">print(title.rjust(100,&apos;*&apos;))</span><br><span class=\"line\">print(title.center(100,&apos;*&apos;))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-使用format方法\"><a href=\"#2-使用format方法\" class=\"headerlink\" title=\"2. 使用format方法\"></a>2. 使用<code>format</code>方法</h2><p><code>&lt;</code> 左对齐<br><code>&gt;</code> 右对齐<br><code>^</code> 居中对齐<br>不指定填充字符默认空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(format(title,&quot;&lt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;&gt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;^100&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">print(&apos;&#123;:&lt;100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:&gt;100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:^100&#125;&apos;.format(title))</span><br></pre></td></tr></table></figure></p>\n<p>指定填充字符为星号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(format(title,&quot;*&lt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;*&gt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;*^100&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">print(&apos;&#123;:*&lt;100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:&gt;*100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:^*100&#125;&apos;.format(title))</span><br></pre></td></tr></table></figure></p>\n<p>精度与类型f<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&apos;&#123;:.2f&#125;&apos;.format(3.1415926))</span><br></pre></td></tr></table></figure></p>\n<p>进制<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&apos;&#123;:b&#125;&apos;.format(13))</span><br><span class=\"line\">print(&apos;&#123;:o&#125;&apos;.format(13))</span><br><span class=\"line\">print(&apos;&#123;:d&#125;&apos;.format(13))</span><br><span class=\"line\">print(&apos;&#123;:x&#125;&apos;.format(13))</span><br></pre></td></tr></table></figure></p>\n<p>用逗号作金额的分隔符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&apos;&#123;:,&#125;&apos;.format(123456789))</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"python字符串对齐\"><a href=\"#python字符串对齐\" class=\"headerlink\" title=\"python字符串对齐\"></a>python字符串对齐</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title = &quot;九九乘法口诀表&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-使用ljust-rjust-center方法\"><a href=\"#1-使用ljust-rjust-center方法\" class=\"headerlink\" title=\"1. 使用ljust,rjust,center方法\"></a>1. 使用<code>ljust</code>,<code>rjust</code>,<code>center</code>方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ljust(s, width, *args)</span><br><span class=\"line\">        ljust(s, width[, fillchar]) -&gt; string</span><br><span class=\"line\">        </span><br><span class=\"line\">        Return a left-justified version of s, in a field of the</span><br><span class=\"line\">        specified width, padded with spaces as needed.  The string is</span><br><span class=\"line\">        never truncated.  If specified the fillchar is used instead of spaces.</span><br><span class=\"line\"></span><br><span class=\"line\">rjust(s, width, *args)</span><br><span class=\"line\">        rjust(s, width[, fillchar]) -&gt; string</span><br><span class=\"line\">        </span><br><span class=\"line\">        Return a right-justified version of s, in a field of the</span><br><span class=\"line\">        specified width, padded with spaces as needed.  The string is</span><br><span class=\"line\">        never truncated.  If specified the fillchar is used instead of spaces.</span><br><span class=\"line\"></span><br><span class=\"line\">center(s, width, *args)</span><br><span class=\"line\">        center(s, width[, fillchar]) -&gt; string</span><br><span class=\"line\">        </span><br><span class=\"line\">        Return a center version of s, in a field of the specified</span><br><span class=\"line\">        width. padded with spaces as needed.  The string is never</span><br><span class=\"line\">        truncated.  If specified the fillchar is used instead of spaces.</span><br></pre></td></tr></table></figure>\n<p>不指定填充字符默认空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 左对齐</span><br><span class=\"line\">print(title.ljust(100))</span><br><span class=\"line\"># 右对齐</span><br><span class=\"line\">print(title.rjust(100))</span><br><span class=\"line\"># 居中 </span><br><span class=\"line\">print(title.center(100))</span><br></pre></td></tr></table></figure></p>\n<p>指定填充字符为星号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(title.ljust(100,&apos;*&apos;))</span><br><span class=\"line\">print(title.rjust(100,&apos;*&apos;))</span><br><span class=\"line\">print(title.center(100,&apos;*&apos;))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-使用format方法\"><a href=\"#2-使用format方法\" class=\"headerlink\" title=\"2. 使用format方法\"></a>2. 使用<code>format</code>方法</h2><p><code>&lt;</code> 左对齐<br><code>&gt;</code> 右对齐<br><code>^</code> 居中对齐<br>不指定填充字符默认空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(format(title,&quot;&lt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;&gt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;^100&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">print(&apos;&#123;:&lt;100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:&gt;100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:^100&#125;&apos;.format(title))</span><br></pre></td></tr></table></figure></p>\n<p>指定填充字符为星号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(format(title,&quot;*&lt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;*&gt;100&quot;));</span><br><span class=\"line\">print(format(title,&quot;*^100&quot;));</span><br><span class=\"line\"></span><br><span class=\"line\">print(&apos;&#123;:*&lt;100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:&gt;*100&#125;&apos;.format(title))</span><br><span class=\"line\">print(&apos;&#123;:^*100&#125;&apos;.format(title))</span><br></pre></td></tr></table></figure></p>\n<p>精度与类型f<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&apos;&#123;:.2f&#125;&apos;.format(3.1415926))</span><br></pre></td></tr></table></figure></p>\n<p>进制<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&apos;&#123;:b&#125;&apos;.format(13))</span><br><span class=\"line\">print(&apos;&#123;:o&#125;&apos;.format(13))</span><br><span class=\"line\">print(&apos;&#123;:d&#125;&apos;.format(13))</span><br><span class=\"line\">print(&apos;&#123;:x&#125;&apos;.format(13))</span><br></pre></td></tr></table></figure></p>\n<p>用逗号作金额的分隔符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&apos;&#123;:,&#125;&apos;.format(123456789))</span><br></pre></td></tr></table></figure></p>\n"},{"title":"python字符串处理","date":"2017-03-23T13:49:45.000Z","_content":"\n## 1. 字符串处理函数\n\n| 函数                              | 说明                                                         |\n| --                                | --                                                           |\n| s.find(substring,[start[,end]])   | 查找子字符串，可以指定开始结束的位置，返回索引值，否则返回-1 |\n| s.rfind(substring,[start[,end]])  | 反向查找字符串                                               |\n| s.index(substring,[start[,end]])  | 同find，找不到产生ValueError异常                             |\n| s.rindex(substring,[start[,end]]) | 同反向查找                                                   |\n| s.count(substring,[start[,end]])  | 返回找到子串的个数                                           |\n| s.lowercase()                     | 所有字符转换成小写                                           |\n| s.capitalize()                    | 首字母转换成大写                                             |\n| s.lower()                         | 所有字符转换成小写                                           |\n| s.upper()                         | 所有字符转换成大写                                           |\n| s.swapcase()                      | 大小写互换                                                   |\n| s.split(str,'')                   | 将string转换成list，以空格分割                               |\n| s.join(list,'')                   | 将list转换成string,以空格连接                                |\n**处理字符串的内置函数**\n\n| 函数名               | 说明                        |\n| --                   | --                          |\n| len(str)             | 串长度                      |\n| cmp('first_str',str) | 字符串比较，第一个大，返回1 |\n| max('string')        | 寻找字符串中最大的字符      |\n| min('string')        | 寻找字符串中最小的字符      |\n\n## 2. 实例\n\n### 2.1 查找子字符串\n`s.find()`\n\n```\n>>> string = \"this is the test string\"\n>>> string.find('test')\n12\n```\n\n### 2.2 查找子字符串\n`s.index()`\n找不到就报错，找到就返回索引\n```\n>>> string = \"this is the test string\"\n>>> string.index('error')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: substring not found\n>>> string.index('test')\n12\n```\n\n### 2.3 首字母转换成大写\n`s.capitalize()`\n\n```\n>>> string = \"this is the test string\"\n>>> string.capitalize()\n'This is the test string'\n```\n\n### 2.4 字符串转换成大写\n`s.upper()`\n\n```\n>>> string.upper()\n'THIS IS THE TEST STRING'\n```\n\n\n### 2.5 字符串转换成小写\n`s.lower()`\n\n```\n>>> string.lower()\n'this is the test string'\n```\n\n### 2.6 大小写互换\n`s.swapcase()`\n\n```\n>>> string += \"THIS IS CAP\"\n>>> string\n'this is the test stringTHIS IS CAP'\n>>> string.swapcase()\n'THIS IS THE TEST STRINGthis is cap'\n```\n\n### 2.7 将string转换为list\n`s.split()`\n默认为空格，可以指定分隔符\n```\n>>> string.split()\n['this', 'is', 'the', 'test', 'stringTHIS', 'IS', 'CAP']\n```\n\n### 2.8 将list转换为string\n`s.join()`\n```\n>>> '|'.join(string.split())\n'this|is|the|test|stringTHIS|IS|CAP'\n```\n\n**拓展**\n`+=`和`.join`实现的效果是一样的，但是`+=`每次都会新开辟空间，但是`.join`不用\n例：\n```\n>>> a = 'the'\n>>> a += ' test'\n>>> a += ' is'\n>>> a += ' end'\n>>> a\n'the test is end'\n\n>>> ''.join(a)\n'the test is end'\n```\n\n\n\n","source":"_posts/python字符串处理.md","raw":"---\ntitle: python字符串处理\ndate: 2017-03-23 21:49:45\ntags: python\n---\n\n## 1. 字符串处理函数\n\n| 函数                              | 说明                                                         |\n| --                                | --                                                           |\n| s.find(substring,[start[,end]])   | 查找子字符串，可以指定开始结束的位置，返回索引值，否则返回-1 |\n| s.rfind(substring,[start[,end]])  | 反向查找字符串                                               |\n| s.index(substring,[start[,end]])  | 同find，找不到产生ValueError异常                             |\n| s.rindex(substring,[start[,end]]) | 同反向查找                                                   |\n| s.count(substring,[start[,end]])  | 返回找到子串的个数                                           |\n| s.lowercase()                     | 所有字符转换成小写                                           |\n| s.capitalize()                    | 首字母转换成大写                                             |\n| s.lower()                         | 所有字符转换成小写                                           |\n| s.upper()                         | 所有字符转换成大写                                           |\n| s.swapcase()                      | 大小写互换                                                   |\n| s.split(str,'')                   | 将string转换成list，以空格分割                               |\n| s.join(list,'')                   | 将list转换成string,以空格连接                                |\n**处理字符串的内置函数**\n\n| 函数名               | 说明                        |\n| --                   | --                          |\n| len(str)             | 串长度                      |\n| cmp('first_str',str) | 字符串比较，第一个大，返回1 |\n| max('string')        | 寻找字符串中最大的字符      |\n| min('string')        | 寻找字符串中最小的字符      |\n\n## 2. 实例\n\n### 2.1 查找子字符串\n`s.find()`\n\n```\n>>> string = \"this is the test string\"\n>>> string.find('test')\n12\n```\n\n### 2.2 查找子字符串\n`s.index()`\n找不到就报错，找到就返回索引\n```\n>>> string = \"this is the test string\"\n>>> string.index('error')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: substring not found\n>>> string.index('test')\n12\n```\n\n### 2.3 首字母转换成大写\n`s.capitalize()`\n\n```\n>>> string = \"this is the test string\"\n>>> string.capitalize()\n'This is the test string'\n```\n\n### 2.4 字符串转换成大写\n`s.upper()`\n\n```\n>>> string.upper()\n'THIS IS THE TEST STRING'\n```\n\n\n### 2.5 字符串转换成小写\n`s.lower()`\n\n```\n>>> string.lower()\n'this is the test string'\n```\n\n### 2.6 大小写互换\n`s.swapcase()`\n\n```\n>>> string += \"THIS IS CAP\"\n>>> string\n'this is the test stringTHIS IS CAP'\n>>> string.swapcase()\n'THIS IS THE TEST STRINGthis is cap'\n```\n\n### 2.7 将string转换为list\n`s.split()`\n默认为空格，可以指定分隔符\n```\n>>> string.split()\n['this', 'is', 'the', 'test', 'stringTHIS', 'IS', 'CAP']\n```\n\n### 2.8 将list转换为string\n`s.join()`\n```\n>>> '|'.join(string.split())\n'this|is|the|test|stringTHIS|IS|CAP'\n```\n\n**拓展**\n`+=`和`.join`实现的效果是一样的，但是`+=`每次都会新开辟空间，但是`.join`不用\n例：\n```\n>>> a = 'the'\n>>> a += ' test'\n>>> a += ' is'\n>>> a += ' end'\n>>> a\n'the test is end'\n\n>>> ''.join(a)\n'the test is end'\n```\n\n\n\n","slug":"python字符串处理","published":1,"updated":"2017-03-23T14:29:58.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsix000sx0s6atyxpffr","content":"<h2 id=\"1-字符串处理函数\"><a href=\"#1-字符串处理函数\" class=\"headerlink\" title=\"1. 字符串处理函数\"></a>1. 字符串处理函数</h2><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>s.find(substring,[start[,end]])</td>\n<td>查找子字符串，可以指定开始结束的位置，返回索引值，否则返回-1</td>\n</tr>\n<tr>\n<td>s.rfind(substring,[start[,end]])</td>\n<td>反向查找字符串</td>\n</tr>\n<tr>\n<td>s.index(substring,[start[,end]])</td>\n<td>同find，找不到产生ValueError异常</td>\n</tr>\n<tr>\n<td>s.rindex(substring,[start[,end]])</td>\n<td>同反向查找</td>\n</tr>\n<tr>\n<td>s.count(substring,[start[,end]])</td>\n<td>返回找到子串的个数</td>\n</tr>\n<tr>\n<td>s.lowercase()</td>\n<td>所有字符转换成小写</td>\n</tr>\n<tr>\n<td>s.capitalize()</td>\n<td>首字母转换成大写</td>\n</tr>\n<tr>\n<td>s.lower()</td>\n<td>所有字符转换成小写</td>\n</tr>\n<tr>\n<td>s.upper()</td>\n<td>所有字符转换成大写</td>\n</tr>\n<tr>\n<td>s.swapcase()</td>\n<td>大小写互换</td>\n</tr>\n<tr>\n<td>s.split(str,’’)</td>\n<td>将string转换成list，以空格分割</td>\n</tr>\n<tr>\n<td>s.join(list,’’)</td>\n<td>将list转换成string,以空格连接</td>\n</tr>\n</tbody>\n</table>\n<p><strong>处理字符串的内置函数</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>len(str)</td>\n<td>串长度</td>\n</tr>\n<tr>\n<td>cmp(‘first_str’,str)</td>\n<td>字符串比较，第一个大，返回1</td>\n</tr>\n<tr>\n<td>max(‘string’)</td>\n<td>寻找字符串中最大的字符</td>\n</tr>\n<tr>\n<td>min(‘string’)</td>\n<td>寻找字符串中最小的字符</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-实例\"><a href=\"#2-实例\" class=\"headerlink\" title=\"2. 实例\"></a>2. 实例</h2><h3 id=\"2-1-查找子字符串\"><a href=\"#2-1-查找子字符串\" class=\"headerlink\" title=\"2.1 查找子字符串\"></a>2.1 查找子字符串</h3><p><code>s.find()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string.find(&apos;test&apos;)</span><br><span class=\"line\">12</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-查找子字符串\"><a href=\"#2-2-查找子字符串\" class=\"headerlink\" title=\"2.2 查找子字符串\"></a>2.2 查找子字符串</h3><p><code>s.index()</code><br>找不到就报错，找到就返回索引<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string.index(&apos;error&apos;)</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">ValueError: substring not found</span><br><span class=\"line\">&gt;&gt;&gt; string.index(&apos;test&apos;)</span><br><span class=\"line\">12</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-3-首字母转换成大写\"><a href=\"#2-3-首字母转换成大写\" class=\"headerlink\" title=\"2.3 首字母转换成大写\"></a>2.3 首字母转换成大写</h3><p><code>s.capitalize()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string.capitalize()</span><br><span class=\"line\">&apos;This is the test string&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-字符串转换成大写\"><a href=\"#2-4-字符串转换成大写\" class=\"headerlink\" title=\"2.4 字符串转换成大写\"></a>2.4 字符串转换成大写</h3><p><code>s.upper()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string.upper()</span><br><span class=\"line\">&apos;THIS IS THE TEST STRING&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-字符串转换成小写\"><a href=\"#2-5-字符串转换成小写\" class=\"headerlink\" title=\"2.5 字符串转换成小写\"></a>2.5 字符串转换成小写</h3><p><code>s.lower()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string.lower()</span><br><span class=\"line\">&apos;this is the test string&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-大小写互换\"><a href=\"#2-6-大小写互换\" class=\"headerlink\" title=\"2.6 大小写互换\"></a>2.6 大小写互换</h3><p><code>s.swapcase()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string += &quot;THIS IS CAP&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string</span><br><span class=\"line\">&apos;this is the test stringTHIS IS CAP&apos;</span><br><span class=\"line\">&gt;&gt;&gt; string.swapcase()</span><br><span class=\"line\">&apos;THIS IS THE TEST STRINGthis is cap&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-7-将string转换为list\"><a href=\"#2-7-将string转换为list\" class=\"headerlink\" title=\"2.7 将string转换为list\"></a>2.7 将string转换为list</h3><p><code>s.split()</code><br>默认为空格，可以指定分隔符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string.split()</span><br><span class=\"line\">[&apos;this&apos;, &apos;is&apos;, &apos;the&apos;, &apos;test&apos;, &apos;stringTHIS&apos;, &apos;IS&apos;, &apos;CAP&apos;]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-8-将list转换为string\"><a href=\"#2-8-将list转换为string\" class=\"headerlink\" title=\"2.8 将list转换为string\"></a>2.8 将list转换为string</h3><p><code>s.join()</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; &apos;|&apos;.join(string.split())</span><br><span class=\"line\">&apos;this|is|the|test|stringTHIS|IS|CAP&apos;</span><br></pre></td></tr></table></figure></p>\n<p><strong>拓展</strong><br><code>+=</code>和<code>.join</code>实现的效果是一样的，但是<code>+=</code>每次都会新开辟空间，但是<code>.join</code>不用<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; a = &apos;the&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a += &apos; test&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a += &apos; is&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a += &apos; end&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">&apos;the test is end&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; &apos;&apos;.join(a)</span><br><span class=\"line\">&apos;the test is end&apos;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-字符串处理函数\"><a href=\"#1-字符串处理函数\" class=\"headerlink\" title=\"1. 字符串处理函数\"></a>1. 字符串处理函数</h2><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>s.find(substring,[start[,end]])</td>\n<td>查找子字符串，可以指定开始结束的位置，返回索引值，否则返回-1</td>\n</tr>\n<tr>\n<td>s.rfind(substring,[start[,end]])</td>\n<td>反向查找字符串</td>\n</tr>\n<tr>\n<td>s.index(substring,[start[,end]])</td>\n<td>同find，找不到产生ValueError异常</td>\n</tr>\n<tr>\n<td>s.rindex(substring,[start[,end]])</td>\n<td>同反向查找</td>\n</tr>\n<tr>\n<td>s.count(substring,[start[,end]])</td>\n<td>返回找到子串的个数</td>\n</tr>\n<tr>\n<td>s.lowercase()</td>\n<td>所有字符转换成小写</td>\n</tr>\n<tr>\n<td>s.capitalize()</td>\n<td>首字母转换成大写</td>\n</tr>\n<tr>\n<td>s.lower()</td>\n<td>所有字符转换成小写</td>\n</tr>\n<tr>\n<td>s.upper()</td>\n<td>所有字符转换成大写</td>\n</tr>\n<tr>\n<td>s.swapcase()</td>\n<td>大小写互换</td>\n</tr>\n<tr>\n<td>s.split(str,’’)</td>\n<td>将string转换成list，以空格分割</td>\n</tr>\n<tr>\n<td>s.join(list,’’)</td>\n<td>将list转换成string,以空格连接</td>\n</tr>\n</tbody>\n</table>\n<p><strong>处理字符串的内置函数</strong></p>\n<table>\n<thead>\n<tr>\n<th>函数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>len(str)</td>\n<td>串长度</td>\n</tr>\n<tr>\n<td>cmp(‘first_str’,str)</td>\n<td>字符串比较，第一个大，返回1</td>\n</tr>\n<tr>\n<td>max(‘string’)</td>\n<td>寻找字符串中最大的字符</td>\n</tr>\n<tr>\n<td>min(‘string’)</td>\n<td>寻找字符串中最小的字符</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-实例\"><a href=\"#2-实例\" class=\"headerlink\" title=\"2. 实例\"></a>2. 实例</h2><h3 id=\"2-1-查找子字符串\"><a href=\"#2-1-查找子字符串\" class=\"headerlink\" title=\"2.1 查找子字符串\"></a>2.1 查找子字符串</h3><p><code>s.find()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string.find(&apos;test&apos;)</span><br><span class=\"line\">12</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-查找子字符串\"><a href=\"#2-2-查找子字符串\" class=\"headerlink\" title=\"2.2 查找子字符串\"></a>2.2 查找子字符串</h3><p><code>s.index()</code><br>找不到就报错，找到就返回索引<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string.index(&apos;error&apos;)</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">ValueError: substring not found</span><br><span class=\"line\">&gt;&gt;&gt; string.index(&apos;test&apos;)</span><br><span class=\"line\">12</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-3-首字母转换成大写\"><a href=\"#2-3-首字母转换成大写\" class=\"headerlink\" title=\"2.3 首字母转换成大写\"></a>2.3 首字母转换成大写</h3><p><code>s.capitalize()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string = &quot;this is the test string&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string.capitalize()</span><br><span class=\"line\">&apos;This is the test string&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-字符串转换成大写\"><a href=\"#2-4-字符串转换成大写\" class=\"headerlink\" title=\"2.4 字符串转换成大写\"></a>2.4 字符串转换成大写</h3><p><code>s.upper()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string.upper()</span><br><span class=\"line\">&apos;THIS IS THE TEST STRING&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-字符串转换成小写\"><a href=\"#2-5-字符串转换成小写\" class=\"headerlink\" title=\"2.5 字符串转换成小写\"></a>2.5 字符串转换成小写</h3><p><code>s.lower()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string.lower()</span><br><span class=\"line\">&apos;this is the test string&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-6-大小写互换\"><a href=\"#2-6-大小写互换\" class=\"headerlink\" title=\"2.6 大小写互换\"></a>2.6 大小写互换</h3><p><code>s.swapcase()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string += &quot;THIS IS CAP&quot;</span><br><span class=\"line\">&gt;&gt;&gt; string</span><br><span class=\"line\">&apos;this is the test stringTHIS IS CAP&apos;</span><br><span class=\"line\">&gt;&gt;&gt; string.swapcase()</span><br><span class=\"line\">&apos;THIS IS THE TEST STRINGthis is cap&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-7-将string转换为list\"><a href=\"#2-7-将string转换为list\" class=\"headerlink\" title=\"2.7 将string转换为list\"></a>2.7 将string转换为list</h3><p><code>s.split()</code><br>默认为空格，可以指定分隔符<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; string.split()</span><br><span class=\"line\">[&apos;this&apos;, &apos;is&apos;, &apos;the&apos;, &apos;test&apos;, &apos;stringTHIS&apos;, &apos;IS&apos;, &apos;CAP&apos;]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-8-将list转换为string\"><a href=\"#2-8-将list转换为string\" class=\"headerlink\" title=\"2.8 将list转换为string\"></a>2.8 将list转换为string</h3><p><code>s.join()</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; &apos;|&apos;.join(string.split())</span><br><span class=\"line\">&apos;this|is|the|test|stringTHIS|IS|CAP&apos;</span><br></pre></td></tr></table></figure></p>\n<p><strong>拓展</strong><br><code>+=</code>和<code>.join</code>实现的效果是一样的，但是<code>+=</code>每次都会新开辟空间，但是<code>.join</code>不用<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; a = &apos;the&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a += &apos; test&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a += &apos; is&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a += &apos; end&apos;</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">&apos;the test is end&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; &apos;&apos;.join(a)</span><br><span class=\"line\">&apos;the test is end&apos;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"python指定字符编码","date":"2017-02-07T01:37:14.000Z","_content":"\npython指定字符编码的方式有多种\n**编码格式是要写在解释器的下面的**\n\n\n## 1.指定方法\n```\n#!/usr/bin/env python\n# _*_ coding:utf-8 _*_\n```\n\n```\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n```\n\n```\n#!/usr/bin/env python\n# coding:utf-8\n```\n\n## 2.使用场景\n- 在python的程序中，如果有中文字符需要指定字符编码方式，无论是否是在注释中。\n- 在数据库操作中，读取或者写入的内容中有汉字时。具体的方法如下:\n```\n#!/usr/bin/env python\n# _*_ coding:utf-8 _*_\n\nimport sys\nreload(sys)                                                                      \nsys.setdefaultencoding('utf8')\n```\n","source":"_posts/python指定字符编码.md","raw":"---\ntitle: python指定字符编码\ndate: 2017-02-07 09:37:14\ntags: python\n---\n\npython指定字符编码的方式有多种\n**编码格式是要写在解释器的下面的**\n\n\n## 1.指定方法\n```\n#!/usr/bin/env python\n# _*_ coding:utf-8 _*_\n```\n\n```\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n```\n\n```\n#!/usr/bin/env python\n# coding:utf-8\n```\n\n## 2.使用场景\n- 在python的程序中，如果有中文字符需要指定字符编码方式，无论是否是在注释中。\n- 在数据库操作中，读取或者写入的内容中有汉字时。具体的方法如下:\n```\n#!/usr/bin/env python\n# _*_ coding:utf-8 _*_\n\nimport sys\nreload(sys)                                                                      \nsys.setdefaultencoding('utf8')\n```\n","slug":"python指定字符编码","published":1,"updated":"2017-02-07T05:08:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsiy000ux0s69se9dtiy","content":"<p>python指定字符编码的方式有多种<br><strong>编码格式是要写在解释器的下面的</strong></p>\n<h2 id=\"1-指定方法\"><a href=\"#1-指定方法\" class=\"headerlink\" title=\"1.指定方法\"></a>1.指定方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># _*_ coding:utf-8 _*_</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># -*- coding:utf-8 -*-</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># coding:utf-8</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-使用场景\"><a href=\"#2-使用场景\" class=\"headerlink\" title=\"2.使用场景\"></a>2.使用场景</h2><ul>\n<li>在python的程序中，如果有中文字符需要指定字符编码方式，无论是否是在注释中。</li>\n<li>在数据库操作中，读取或者写入的内容中有汉字时。具体的方法如下:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># _*_ coding:utf-8 _*_</span><br><span class=\"line\"></span><br><span class=\"line\">import sys</span><br><span class=\"line\">reload(sys)                                                                      </span><br><span class=\"line\">sys.setdefaultencoding(&apos;utf8&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>python指定字符编码的方式有多种<br><strong>编码格式是要写在解释器的下面的</strong></p>\n<h2 id=\"1-指定方法\"><a href=\"#1-指定方法\" class=\"headerlink\" title=\"1.指定方法\"></a>1.指定方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># _*_ coding:utf-8 _*_</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># -*- coding:utf-8 -*-</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># coding:utf-8</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-使用场景\"><a href=\"#2-使用场景\" class=\"headerlink\" title=\"2.使用场景\"></a>2.使用场景</h2><ul>\n<li>在python的程序中，如果有中文字符需要指定字符编码方式，无论是否是在注释中。</li>\n<li>在数据库操作中，读取或者写入的内容中有汉字时。具体的方法如下:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># _*_ coding:utf-8 _*_</span><br><span class=\"line\"></span><br><span class=\"line\">import sys</span><br><span class=\"line\">reload(sys)                                                                      </span><br><span class=\"line\">sys.setdefaultencoding(&apos;utf8&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"python字符编码","date":"2017-03-20T13:20:21.000Z","_content":"## 1. ASSIC码\n一共规定了128个字符的编码\n\n### 1.1 ord函数\n`ord('single-char')`\n\n```\nord(...)\n    ord(c) -> integer\n    \n    Return the integer ordinal of a one-character string.\n```\n\n```\n>>> ord('a')\n97\n>>> type(ord('a'))\n<type 'int'>\n```\n\n```\nstring = 'Hello World'\nfor i in string:\n    print ord(i)\n```\n\n```\nstring = 'Hello World'\nlist_ascii = [ord(i) for i in string]\nprint list_ascii\n```\n\n### 1.2 chr函数\n`chr(number)`\n\n```\nchr(...)\n    chr(i) -> character\n        \n            Return a string of one character with ordinal i; 0 <= i < 256.\n```\n\n\n\n## 2. Unicode编码\n\n16位 可以存下汉字\n\n### 2.1 默认编码是ASCII\n```\n>>> a = 'hello'\n>>> type(a)\n<type 'str'>\n>>> a\n'hello'\n```\n\n### 2.2 加`u`则指定为Unicode\n```\n>>> a = u'hello'\n>>> type(a)\n<type 'unicode'>\n>>> a\nu'hello'\n```\n\n\n```\n>>> b=u'你好'\n>>> b\nu'\\u4f60\\u597d'\n>>> len(b)\n2\n```\n\n## 3. UTF-8编码\n\n```\n# 转换成utf-8\n>>> b.encode('utf-8')\n'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'\n\n\n>>> b_utf8 = b.encode('utf-8')\n>>> len(b_utf8)\n6\n\n```\n\n## 4. Unicode和UTF-8的转换\n\n### 4.1 Unicode >> UTF-8    \n\n```\nname.encode('utf-8')\n```\n\n```\n>>> b=u'你好'\n# Unicode转换成UTF-8 \n>>> b_utf8=b.encode('utf-8')\n```\n\n### 4.2 UTF-8  >> Unicode\n\n```\nname_utf8.decode('utf-8')\n```\n```\n>>> b_utf8\n'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'\n>>> b_utf8.decode('utf-8')\nu'\\u4f60\\u597d'\n```\n\n## 5. 指定程序的编码方式\n程序如果有中文,需要指定编码方式\n```\n#_*_ coding:utf-8 _*_\n\nname = u'中文'\nprint name\n```","source":"_posts/python字符编码.md","raw":"---\ntitle: python字符编码\ndate: 2017-03-20 21:20:21\ntags: python\n---\n## 1. ASSIC码\n一共规定了128个字符的编码\n\n### 1.1 ord函数\n`ord('single-char')`\n\n```\nord(...)\n    ord(c) -> integer\n    \n    Return the integer ordinal of a one-character string.\n```\n\n```\n>>> ord('a')\n97\n>>> type(ord('a'))\n<type 'int'>\n```\n\n```\nstring = 'Hello World'\nfor i in string:\n    print ord(i)\n```\n\n```\nstring = 'Hello World'\nlist_ascii = [ord(i) for i in string]\nprint list_ascii\n```\n\n### 1.2 chr函数\n`chr(number)`\n\n```\nchr(...)\n    chr(i) -> character\n        \n            Return a string of one character with ordinal i; 0 <= i < 256.\n```\n\n\n\n## 2. Unicode编码\n\n16位 可以存下汉字\n\n### 2.1 默认编码是ASCII\n```\n>>> a = 'hello'\n>>> type(a)\n<type 'str'>\n>>> a\n'hello'\n```\n\n### 2.2 加`u`则指定为Unicode\n```\n>>> a = u'hello'\n>>> type(a)\n<type 'unicode'>\n>>> a\nu'hello'\n```\n\n\n```\n>>> b=u'你好'\n>>> b\nu'\\u4f60\\u597d'\n>>> len(b)\n2\n```\n\n## 3. UTF-8编码\n\n```\n# 转换成utf-8\n>>> b.encode('utf-8')\n'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'\n\n\n>>> b_utf8 = b.encode('utf-8')\n>>> len(b_utf8)\n6\n\n```\n\n## 4. Unicode和UTF-8的转换\n\n### 4.1 Unicode >> UTF-8    \n\n```\nname.encode('utf-8')\n```\n\n```\n>>> b=u'你好'\n# Unicode转换成UTF-8 \n>>> b_utf8=b.encode('utf-8')\n```\n\n### 4.2 UTF-8  >> Unicode\n\n```\nname_utf8.decode('utf-8')\n```\n```\n>>> b_utf8\n'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'\n>>> b_utf8.decode('utf-8')\nu'\\u4f60\\u597d'\n```\n\n## 5. 指定程序的编码方式\n程序如果有中文,需要指定编码方式\n```\n#_*_ coding:utf-8 _*_\n\nname = u'中文'\nprint name\n```","slug":"python字符编码","published":1,"updated":"2017-03-21T13:16:24.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsj0000xx0s61mc6ym9f","content":"<h2 id=\"1-ASSIC码\"><a href=\"#1-ASSIC码\" class=\"headerlink\" title=\"1. ASSIC码\"></a>1. ASSIC码</h2><p>一共规定了128个字符的编码</p>\n<h3 id=\"1-1-ord函数\"><a href=\"#1-1-ord函数\" class=\"headerlink\" title=\"1.1 ord函数\"></a>1.1 ord函数</h3><p><code>ord(&#39;single-char&#39;)</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ord(...)</span><br><span class=\"line\">    ord(c) -&gt; integer</span><br><span class=\"line\">    </span><br><span class=\"line\">    Return the integer ordinal of a one-character string.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; ord(&apos;a&apos;)</span><br><span class=\"line\">97</span><br><span class=\"line\">&gt;&gt;&gt; type(ord(&apos;a&apos;))</span><br><span class=\"line\">&lt;type &apos;int&apos;&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string = &apos;Hello World&apos;</span><br><span class=\"line\">for i in string:</span><br><span class=\"line\">    print ord(i)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string = &apos;Hello World&apos;</span><br><span class=\"line\">list_ascii = [ord(i) for i in string]</span><br><span class=\"line\">print list_ascii</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-chr函数\"><a href=\"#1-2-chr函数\" class=\"headerlink\" title=\"1.2 chr函数\"></a>1.2 chr函数</h3><p><code>chr(number)</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr(...)</span><br><span class=\"line\">    chr(i) -&gt; character</span><br><span class=\"line\">        </span><br><span class=\"line\">            Return a string of one character with ordinal i; 0 &lt;= i &lt; 256.</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Unicode编码\"><a href=\"#2-Unicode编码\" class=\"headerlink\" title=\"2. Unicode编码\"></a>2. Unicode编码</h2><p>16位 可以存下汉字</p>\n<h3 id=\"2-1-默认编码是ASCII\"><a href=\"#2-1-默认编码是ASCII\" class=\"headerlink\" title=\"2.1 默认编码是ASCII\"></a>2.1 默认编码是ASCII</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; a = &apos;hello&apos;</span><br><span class=\"line\">&gt;&gt;&gt; type(a)</span><br><span class=\"line\">&lt;type &apos;str&apos;&gt;</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">&apos;hello&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-加u则指定为Unicode\"><a href=\"#2-2-加u则指定为Unicode\" class=\"headerlink\" title=\"2.2 加u则指定为Unicode\"></a>2.2 加<code>u</code>则指定为Unicode</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; a = u&apos;hello&apos;</span><br><span class=\"line\">&gt;&gt;&gt; type(a)</span><br><span class=\"line\">&lt;type &apos;unicode&apos;&gt;</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">u&apos;hello&apos;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; b=u&apos;你好&apos;</span><br><span class=\"line\">&gt;&gt;&gt; b</span><br><span class=\"line\">u&apos;\\u4f60\\u597d&apos;</span><br><span class=\"line\">&gt;&gt;&gt; len(b)</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-UTF-8编码\"><a href=\"#3-UTF-8编码\" class=\"headerlink\" title=\"3. UTF-8编码\"></a>3. UTF-8编码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 转换成utf-8</span><br><span class=\"line\">&gt;&gt;&gt; b.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; b_utf8 = b.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; len(b_utf8)</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Unicode和UTF-8的转换\"><a href=\"#4-Unicode和UTF-8的转换\" class=\"headerlink\" title=\"4. Unicode和UTF-8的转换\"></a>4. Unicode和UTF-8的转换</h2><h3 id=\"4-1-Unicode-gt-gt-UTF-8\"><a href=\"#4-1-Unicode-gt-gt-UTF-8\" class=\"headerlink\" title=\"4.1 Unicode &gt;&gt; UTF-8\"></a>4.1 Unicode &gt;&gt; UTF-8</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name.encode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; b=u&apos;你好&apos;</span><br><span class=\"line\"># Unicode转换成UTF-8 </span><br><span class=\"line\">&gt;&gt;&gt; b_utf8=b.encode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-UTF-8-gt-gt-Unicode\"><a href=\"#4-2-UTF-8-gt-gt-Unicode\" class=\"headerlink\" title=\"4.2 UTF-8  &gt;&gt; Unicode\"></a>4.2 UTF-8  &gt;&gt; Unicode</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_utf8.decode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; b_utf8</span><br><span class=\"line\">&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos;</span><br><span class=\"line\">&gt;&gt;&gt; b_utf8.decode(&apos;utf-8&apos;)</span><br><span class=\"line\">u&apos;\\u4f60\\u597d&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-指定程序的编码方式\"><a href=\"#5-指定程序的编码方式\" class=\"headerlink\" title=\"5. 指定程序的编码方式\"></a>5. 指定程序的编码方式</h2><p>程序如果有中文,需要指定编码方式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#_*_ coding:utf-8 _*_</span><br><span class=\"line\"></span><br><span class=\"line\">name = u&apos;中文&apos;</span><br><span class=\"line\">print name</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-ASSIC码\"><a href=\"#1-ASSIC码\" class=\"headerlink\" title=\"1. ASSIC码\"></a>1. ASSIC码</h2><p>一共规定了128个字符的编码</p>\n<h3 id=\"1-1-ord函数\"><a href=\"#1-1-ord函数\" class=\"headerlink\" title=\"1.1 ord函数\"></a>1.1 ord函数</h3><p><code>ord(&#39;single-char&#39;)</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ord(...)</span><br><span class=\"line\">    ord(c) -&gt; integer</span><br><span class=\"line\">    </span><br><span class=\"line\">    Return the integer ordinal of a one-character string.</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; ord(&apos;a&apos;)</span><br><span class=\"line\">97</span><br><span class=\"line\">&gt;&gt;&gt; type(ord(&apos;a&apos;))</span><br><span class=\"line\">&lt;type &apos;int&apos;&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string = &apos;Hello World&apos;</span><br><span class=\"line\">for i in string:</span><br><span class=\"line\">    print ord(i)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string = &apos;Hello World&apos;</span><br><span class=\"line\">list_ascii = [ord(i) for i in string]</span><br><span class=\"line\">print list_ascii</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-chr函数\"><a href=\"#1-2-chr函数\" class=\"headerlink\" title=\"1.2 chr函数\"></a>1.2 chr函数</h3><p><code>chr(number)</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr(...)</span><br><span class=\"line\">    chr(i) -&gt; character</span><br><span class=\"line\">        </span><br><span class=\"line\">            Return a string of one character with ordinal i; 0 &lt;= i &lt; 256.</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Unicode编码\"><a href=\"#2-Unicode编码\" class=\"headerlink\" title=\"2. Unicode编码\"></a>2. Unicode编码</h2><p>16位 可以存下汉字</p>\n<h3 id=\"2-1-默认编码是ASCII\"><a href=\"#2-1-默认编码是ASCII\" class=\"headerlink\" title=\"2.1 默认编码是ASCII\"></a>2.1 默认编码是ASCII</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; a = &apos;hello&apos;</span><br><span class=\"line\">&gt;&gt;&gt; type(a)</span><br><span class=\"line\">&lt;type &apos;str&apos;&gt;</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">&apos;hello&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-加u则指定为Unicode\"><a href=\"#2-2-加u则指定为Unicode\" class=\"headerlink\" title=\"2.2 加u则指定为Unicode\"></a>2.2 加<code>u</code>则指定为Unicode</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; a = u&apos;hello&apos;</span><br><span class=\"line\">&gt;&gt;&gt; type(a)</span><br><span class=\"line\">&lt;type &apos;unicode&apos;&gt;</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">u&apos;hello&apos;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; b=u&apos;你好&apos;</span><br><span class=\"line\">&gt;&gt;&gt; b</span><br><span class=\"line\">u&apos;\\u4f60\\u597d&apos;</span><br><span class=\"line\">&gt;&gt;&gt; len(b)</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-UTF-8编码\"><a href=\"#3-UTF-8编码\" class=\"headerlink\" title=\"3. UTF-8编码\"></a>3. UTF-8编码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 转换成utf-8</span><br><span class=\"line\">&gt;&gt;&gt; b.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; b_utf8 = b.encode(&apos;utf-8&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; len(b_utf8)</span><br><span class=\"line\">6</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Unicode和UTF-8的转换\"><a href=\"#4-Unicode和UTF-8的转换\" class=\"headerlink\" title=\"4. Unicode和UTF-8的转换\"></a>4. Unicode和UTF-8的转换</h2><h3 id=\"4-1-Unicode-gt-gt-UTF-8\"><a href=\"#4-1-Unicode-gt-gt-UTF-8\" class=\"headerlink\" title=\"4.1 Unicode &gt;&gt; UTF-8\"></a>4.1 Unicode &gt;&gt; UTF-8</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name.encode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; b=u&apos;你好&apos;</span><br><span class=\"line\"># Unicode转换成UTF-8 </span><br><span class=\"line\">&gt;&gt;&gt; b_utf8=b.encode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-UTF-8-gt-gt-Unicode\"><a href=\"#4-2-UTF-8-gt-gt-Unicode\" class=\"headerlink\" title=\"4.2 UTF-8  &gt;&gt; Unicode\"></a>4.2 UTF-8  &gt;&gt; Unicode</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_utf8.decode(&apos;utf-8&apos;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; b_utf8</span><br><span class=\"line\">&apos;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&apos;</span><br><span class=\"line\">&gt;&gt;&gt; b_utf8.decode(&apos;utf-8&apos;)</span><br><span class=\"line\">u&apos;\\u4f60\\u597d&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-指定程序的编码方式\"><a href=\"#5-指定程序的编码方式\" class=\"headerlink\" title=\"5. 指定程序的编码方式\"></a>5. 指定程序的编码方式</h2><p>程序如果有中文,需要指定编码方式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#_*_ coding:utf-8 _*_</span><br><span class=\"line\"></span><br><span class=\"line\">name = u&apos;中文&apos;</span><br><span class=\"line\">print name</span><br></pre></td></tr></table></figure></p>\n"},{"title":"linux添加swap","date":"2017-02-14T06:39:33.000Z","_content":"\n## 1. swap说明\n物理内存就是计算机的实际内存大小，由RAM芯片组成的。\n虚拟内存则是虚拟出来的，使用磁盘代替内存。\n虚拟内存的出现，让机器内存不够的情况得到部分解决。当程序运行起来由操作系统做具体虚拟内存到物理内存的替换和载。这里的虚拟内存就是swap\n\n当物理内存使用完或者达到一定比例之后，我们可以使用swap做临时的内存使用。当物理内存和swap都被使用完那么就会出错，out of memory。\n\n## 2. 使用dd创建swap\n\n### 2.1 查看当前内存\n```\n×××@localhost: ~$ free -h\n             total       used       free     shared    buffers     cached\nMem:          7.7G       6.0G       1.6G       875M       476M       3.2G\n-/+ buffers/cache:       2.4G       5.3G\nSwap:         0B         0B       0B\n```\n\n### 2.2 创建swap文件\n```\n×××@localhost: ~$ sudo -s\nroot@localhost:~# dd if=/dev/zero of=/mnt/swap_mount_point bs=1M count=2048\n2048+0 records in\n2048+0 records out\n2147483648 bytes (2.1 GB) copied, 16.7229 s, 128 MB/s\n\nroot@localhost:~# ls -lh /mnt/swap_mount_point \n-rw-r--r-- 1 root root 2.0G Feb 14 18:08 /mnt/swap_mount_point\n\nroot@localhost:~# file /mnt/swap_mount_point \n/mnt/swap_mount_point: data\n\n```\n\n### 2.3 格式化swap文件\n```\nroot@localhost:~# mkswap /mnt/swap_mount_point \nSetting up swapspace version 1, size = 2097148 KiB\nno label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678\nroot@localhost:~# file /mnt/swap_mount_point \n/mnt/swap_mount_point: Linux/i386 swap file (new style), version 1 (4K pages), size 524287 pages, no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678\n```\n\n### 2.4 挂载\n```\nroot@localhost:~# swapon /mnt/swap_mount_point \nroot@localhost:~# free -h\n             total       used       free     shared    buffers     cached\nMem:          7.7G       7.5G       197M       878M       476M       4.7G\n-/+ buffers/cache:       2.3G       5.3G\nSwap:         2G       264K       2G\n```\n\n### 2.5 添加开机启动\n```\nroot@localhost:~# echo \"/mnt/swap_mount_point swap swap defaults 0 0\" >> /etc/fstab  \n```\n\n## 3. 相关命令\n- 挂载swap\n```\n×××@localhost: ~$ swapon /mnt/swap_mount_ponit\n```\n\n- 卸载swap\n```\n×××@localhost: ~$ swapoff /mnt/swap_mount_point\n```\n\n- 查看swap使用情况\n```\n×××@localhost: ~$ swapon -s \n或\n×××@localhost: ~$ cat /proc/swaps\n```\n\n## 4. swap的优化\n在ubuntu中swappiness参数值的大小对如何使用swap分区有很大的关系。\nswappiness=0 表示最大限度使用物理内存。然后才是swap分区\nswappiness=100 表示积极地使用swap分区，并把内存上的数据及时地搬运到swap空间上。\n\n**swappiness值的修改方法**\n- 方法1\n```\n×××@localhost: ~$ sudo sysctl vm.swappiness=60\n```\n- 方法2\n```\n×××@localhost: ~$ sudo vi /etc/sysctl.conf\n在文件尾添加`vm.swappiness=60`，然后刷新内核参数\n×××@localhost: ~$ sudo sysctl -p\n```\n\n\n\n\n","source":"_posts/linux添加swap.md","raw":"---\ntitle: linux添加swap\ndate: 2017-02-14 14:39:33\ntags: linux\n---\n\n## 1. swap说明\n物理内存就是计算机的实际内存大小，由RAM芯片组成的。\n虚拟内存则是虚拟出来的，使用磁盘代替内存。\n虚拟内存的出现，让机器内存不够的情况得到部分解决。当程序运行起来由操作系统做具体虚拟内存到物理内存的替换和载。这里的虚拟内存就是swap\n\n当物理内存使用完或者达到一定比例之后，我们可以使用swap做临时的内存使用。当物理内存和swap都被使用完那么就会出错，out of memory。\n\n## 2. 使用dd创建swap\n\n### 2.1 查看当前内存\n```\n×××@localhost: ~$ free -h\n             total       used       free     shared    buffers     cached\nMem:          7.7G       6.0G       1.6G       875M       476M       3.2G\n-/+ buffers/cache:       2.4G       5.3G\nSwap:         0B         0B       0B\n```\n\n### 2.2 创建swap文件\n```\n×××@localhost: ~$ sudo -s\nroot@localhost:~# dd if=/dev/zero of=/mnt/swap_mount_point bs=1M count=2048\n2048+0 records in\n2048+0 records out\n2147483648 bytes (2.1 GB) copied, 16.7229 s, 128 MB/s\n\nroot@localhost:~# ls -lh /mnt/swap_mount_point \n-rw-r--r-- 1 root root 2.0G Feb 14 18:08 /mnt/swap_mount_point\n\nroot@localhost:~# file /mnt/swap_mount_point \n/mnt/swap_mount_point: data\n\n```\n\n### 2.3 格式化swap文件\n```\nroot@localhost:~# mkswap /mnt/swap_mount_point \nSetting up swapspace version 1, size = 2097148 KiB\nno label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678\nroot@localhost:~# file /mnt/swap_mount_point \n/mnt/swap_mount_point: Linux/i386 swap file (new style), version 1 (4K pages), size 524287 pages, no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678\n```\n\n### 2.4 挂载\n```\nroot@localhost:~# swapon /mnt/swap_mount_point \nroot@localhost:~# free -h\n             total       used       free     shared    buffers     cached\nMem:          7.7G       7.5G       197M       878M       476M       4.7G\n-/+ buffers/cache:       2.3G       5.3G\nSwap:         2G       264K       2G\n```\n\n### 2.5 添加开机启动\n```\nroot@localhost:~# echo \"/mnt/swap_mount_point swap swap defaults 0 0\" >> /etc/fstab  \n```\n\n## 3. 相关命令\n- 挂载swap\n```\n×××@localhost: ~$ swapon /mnt/swap_mount_ponit\n```\n\n- 卸载swap\n```\n×××@localhost: ~$ swapoff /mnt/swap_mount_point\n```\n\n- 查看swap使用情况\n```\n×××@localhost: ~$ swapon -s \n或\n×××@localhost: ~$ cat /proc/swaps\n```\n\n## 4. swap的优化\n在ubuntu中swappiness参数值的大小对如何使用swap分区有很大的关系。\nswappiness=0 表示最大限度使用物理内存。然后才是swap分区\nswappiness=100 表示积极地使用swap分区，并把内存上的数据及时地搬运到swap空间上。\n\n**swappiness值的修改方法**\n- 方法1\n```\n×××@localhost: ~$ sudo sysctl vm.swappiness=60\n```\n- 方法2\n```\n×××@localhost: ~$ sudo vi /etc/sysctl.conf\n在文件尾添加`vm.swappiness=60`，然后刷新内核参数\n×××@localhost: ~$ sudo sysctl -p\n```\n\n\n\n\n","slug":"linux添加swap","published":1,"updated":"2017-02-15T05:22:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsjb001fx0s6lgsfhw0d","content":"<h2 id=\"1-swap说明\"><a href=\"#1-swap说明\" class=\"headerlink\" title=\"1. swap说明\"></a>1. swap说明</h2><p>物理内存就是计算机的实际内存大小，由RAM芯片组成的。<br>虚拟内存则是虚拟出来的，使用磁盘代替内存。<br>虚拟内存的出现，让机器内存不够的情况得到部分解决。当程序运行起来由操作系统做具体虚拟内存到物理内存的替换和载。这里的虚拟内存就是swap</p>\n<p>当物理内存使用完或者达到一定比例之后，我们可以使用swap做临时的内存使用。当物理内存和swap都被使用完那么就会出错，out of memory。</p>\n<h2 id=\"2-使用dd创建swap\"><a href=\"#2-使用dd创建swap\" class=\"headerlink\" title=\"2. 使用dd创建swap\"></a>2. 使用dd创建swap</h2><h3 id=\"2-1-查看当前内存\"><a href=\"#2-1-查看当前内存\" class=\"headerlink\" title=\"2.1 查看当前内存\"></a>2.1 查看当前内存</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ free -h</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:          7.7G       6.0G       1.6G       875M       476M       3.2G</span><br><span class=\"line\">-/+ buffers/cache:       2.4G       5.3G</span><br><span class=\"line\">Swap:         0B         0B       0B</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-创建swap文件\"><a href=\"#2-2-创建swap文件\" class=\"headerlink\" title=\"2.2 创建swap文件\"></a>2.2 创建swap文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ sudo -s</span><br><span class=\"line\">root@localhost:~# dd if=/dev/zero of=/mnt/swap_mount_point bs=1M count=2048</span><br><span class=\"line\">2048+0 records in</span><br><span class=\"line\">2048+0 records out</span><br><span class=\"line\">2147483648 bytes (2.1 GB) copied, 16.7229 s, 128 MB/s</span><br><span class=\"line\"></span><br><span class=\"line\">root@localhost:~# ls -lh /mnt/swap_mount_point </span><br><span class=\"line\">-rw-r--r-- 1 root root 2.0G Feb 14 18:08 /mnt/swap_mount_point</span><br><span class=\"line\"></span><br><span class=\"line\">root@localhost:~# file /mnt/swap_mount_point </span><br><span class=\"line\">/mnt/swap_mount_point: data</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-格式化swap文件\"><a href=\"#2-3-格式化swap文件\" class=\"headerlink\" title=\"2.3 格式化swap文件\"></a>2.3 格式化swap文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:~# mkswap /mnt/swap_mount_point </span><br><span class=\"line\">Setting up swapspace version 1, size = 2097148 KiB</span><br><span class=\"line\">no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678</span><br><span class=\"line\">root@localhost:~# file /mnt/swap_mount_point </span><br><span class=\"line\">/mnt/swap_mount_point: Linux/i386 swap file (new style), version 1 (4K pages), size 524287 pages, no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-挂载\"><a href=\"#2-4-挂载\" class=\"headerlink\" title=\"2.4 挂载\"></a>2.4 挂载</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:~# swapon /mnt/swap_mount_point </span><br><span class=\"line\">root@localhost:~# free -h</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:          7.7G       7.5G       197M       878M       476M       4.7G</span><br><span class=\"line\">-/+ buffers/cache:       2.3G       5.3G</span><br><span class=\"line\">Swap:         2G       264K       2G</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-添加开机启动\"><a href=\"#2-5-添加开机启动\" class=\"headerlink\" title=\"2.5 添加开机启动\"></a>2.5 添加开机启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:~# echo &quot;/mnt/swap_mount_point swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-相关命令\"><a href=\"#3-相关命令\" class=\"headerlink\" title=\"3. 相关命令\"></a>3. 相关命令</h2><ul>\n<li><p>挂载swap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ swapon /mnt/swap_mount_ponit</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>卸载swap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ swapoff /mnt/swap_mount_point</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看swap使用情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ swapon -s </span><br><span class=\"line\">或</span><br><span class=\"line\">×××@localhost: ~$ cat /proc/swaps</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4-swap的优化\"><a href=\"#4-swap的优化\" class=\"headerlink\" title=\"4. swap的优化\"></a>4. swap的优化</h2><p>在ubuntu中swappiness参数值的大小对如何使用swap分区有很大的关系。<br>swappiness=0 表示最大限度使用物理内存。然后才是swap分区<br>swappiness=100 表示积极地使用swap分区，并把内存上的数据及时地搬运到swap空间上。</p>\n<p><strong>swappiness值的修改方法</strong></p>\n<ul>\n<li><p>方法1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ sudo sysctl vm.swappiness=60</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ sudo vi /etc/sysctl.conf</span><br><span class=\"line\">在文件尾添加`vm.swappiness=60`，然后刷新内核参数</span><br><span class=\"line\">×××@localhost: ~$ sudo sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-swap说明\"><a href=\"#1-swap说明\" class=\"headerlink\" title=\"1. swap说明\"></a>1. swap说明</h2><p>物理内存就是计算机的实际内存大小，由RAM芯片组成的。<br>虚拟内存则是虚拟出来的，使用磁盘代替内存。<br>虚拟内存的出现，让机器内存不够的情况得到部分解决。当程序运行起来由操作系统做具体虚拟内存到物理内存的替换和载。这里的虚拟内存就是swap</p>\n<p>当物理内存使用完或者达到一定比例之后，我们可以使用swap做临时的内存使用。当物理内存和swap都被使用完那么就会出错，out of memory。</p>\n<h2 id=\"2-使用dd创建swap\"><a href=\"#2-使用dd创建swap\" class=\"headerlink\" title=\"2. 使用dd创建swap\"></a>2. 使用dd创建swap</h2><h3 id=\"2-1-查看当前内存\"><a href=\"#2-1-查看当前内存\" class=\"headerlink\" title=\"2.1 查看当前内存\"></a>2.1 查看当前内存</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ free -h</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:          7.7G       6.0G       1.6G       875M       476M       3.2G</span><br><span class=\"line\">-/+ buffers/cache:       2.4G       5.3G</span><br><span class=\"line\">Swap:         0B         0B       0B</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-创建swap文件\"><a href=\"#2-2-创建swap文件\" class=\"headerlink\" title=\"2.2 创建swap文件\"></a>2.2 创建swap文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ sudo -s</span><br><span class=\"line\">root@localhost:~# dd if=/dev/zero of=/mnt/swap_mount_point bs=1M count=2048</span><br><span class=\"line\">2048+0 records in</span><br><span class=\"line\">2048+0 records out</span><br><span class=\"line\">2147483648 bytes (2.1 GB) copied, 16.7229 s, 128 MB/s</span><br><span class=\"line\"></span><br><span class=\"line\">root@localhost:~# ls -lh /mnt/swap_mount_point </span><br><span class=\"line\">-rw-r--r-- 1 root root 2.0G Feb 14 18:08 /mnt/swap_mount_point</span><br><span class=\"line\"></span><br><span class=\"line\">root@localhost:~# file /mnt/swap_mount_point </span><br><span class=\"line\">/mnt/swap_mount_point: data</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-格式化swap文件\"><a href=\"#2-3-格式化swap文件\" class=\"headerlink\" title=\"2.3 格式化swap文件\"></a>2.3 格式化swap文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:~# mkswap /mnt/swap_mount_point </span><br><span class=\"line\">Setting up swapspace version 1, size = 2097148 KiB</span><br><span class=\"line\">no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678</span><br><span class=\"line\">root@localhost:~# file /mnt/swap_mount_point </span><br><span class=\"line\">/mnt/swap_mount_point: Linux/i386 swap file (new style), version 1 (4K pages), size 524287 pages, no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-4-挂载\"><a href=\"#2-4-挂载\" class=\"headerlink\" title=\"2.4 挂载\"></a>2.4 挂载</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:~# swapon /mnt/swap_mount_point </span><br><span class=\"line\">root@localhost:~# free -h</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:          7.7G       7.5G       197M       878M       476M       4.7G</span><br><span class=\"line\">-/+ buffers/cache:       2.3G       5.3G</span><br><span class=\"line\">Swap:         2G       264K       2G</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-5-添加开机启动\"><a href=\"#2-5-添加开机启动\" class=\"headerlink\" title=\"2.5 添加开机启动\"></a>2.5 添加开机启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@localhost:~# echo &quot;/mnt/swap_mount_point swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-相关命令\"><a href=\"#3-相关命令\" class=\"headerlink\" title=\"3. 相关命令\"></a>3. 相关命令</h2><ul>\n<li><p>挂载swap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ swapon /mnt/swap_mount_ponit</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>卸载swap</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ swapoff /mnt/swap_mount_point</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看swap使用情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ swapon -s </span><br><span class=\"line\">或</span><br><span class=\"line\">×××@localhost: ~$ cat /proc/swaps</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"4-swap的优化\"><a href=\"#4-swap的优化\" class=\"headerlink\" title=\"4. swap的优化\"></a>4. swap的优化</h2><p>在ubuntu中swappiness参数值的大小对如何使用swap分区有很大的关系。<br>swappiness=0 表示最大限度使用物理内存。然后才是swap分区<br>swappiness=100 表示积极地使用swap分区，并把内存上的数据及时地搬运到swap空间上。</p>\n<p><strong>swappiness值的修改方法</strong></p>\n<ul>\n<li><p>方法1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ sudo sysctl vm.swappiness=60</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">×××@localhost: ~$ sudo vi /etc/sysctl.conf</span><br><span class=\"line\">在文件尾添加`vm.swappiness=60`，然后刷新内核参数</span><br><span class=\"line\">×××@localhost: ~$ sudo sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"ubuntu修改网卡名称","date":"2017-02-07T03:21:00.000Z","_content":"\n今天强迫症又犯了，想要把网卡的名称改为eth0和wlan0\n按照网上的方法试了几种，都没有成功，下面记录下我修改成功的方法。\n\n## 1. 修改配置文件\nOpen the file /etc/udev/rules.d/70-persistent-net.rules with your favorite editor.\nFind the rule matching your MAC address.\nChange the NAME value from eth1 to eth0 i.e. NAME=\"eth0\"\n\n```\n$ sudo vi /etc/udev/rules.d/70-persistent-net.rules\n```\n找到你要修改的网卡的MAC，修改对应的`NAME`值\n```\n# PCI device 0x10ec:0x8168 (r8169)\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"50:7b:9d:55:47:2e\", ATTR{dev_id}==\"0x0\", ATTR{type}==\"1\", KERNEL==\"eth*\", NAME=\"eth0\"\n \n# PCI device 0x168c:0x0042 (ath10k_pci)\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"30:52:cb:68:81:17\", ATTR{dev_id}==\"0x0\", ATTR{type}==\"1\", KERNEL==\"wlan*\", NAME=\"wlan0\"\n```\n\n## 2. 使修改生效\n```\n$ sudo udevadm trigger\n```\n运行`ifconfig`查看网卡名称是否已经修改过来，如果没成功，就重启一下吧。\n\n[From askubuntu](http://askubuntu.com/questions/637591/my-ethernet-interface-name-has-changed-from-eth0-to-eth1)\n\n\n\n","source":"_posts/ubuntu修改网卡名称.md","raw":"---\ntitle: ubuntu修改网卡名称\ndate: 2017-02-07 11:21:00\ntags: ubuntu\n---\n\n今天强迫症又犯了，想要把网卡的名称改为eth0和wlan0\n按照网上的方法试了几种，都没有成功，下面记录下我修改成功的方法。\n\n## 1. 修改配置文件\nOpen the file /etc/udev/rules.d/70-persistent-net.rules with your favorite editor.\nFind the rule matching your MAC address.\nChange the NAME value from eth1 to eth0 i.e. NAME=\"eth0\"\n\n```\n$ sudo vi /etc/udev/rules.d/70-persistent-net.rules\n```\n找到你要修改的网卡的MAC，修改对应的`NAME`值\n```\n# PCI device 0x10ec:0x8168 (r8169)\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"50:7b:9d:55:47:2e\", ATTR{dev_id}==\"0x0\", ATTR{type}==\"1\", KERNEL==\"eth*\", NAME=\"eth0\"\n \n# PCI device 0x168c:0x0042 (ath10k_pci)\nSUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"30:52:cb:68:81:17\", ATTR{dev_id}==\"0x0\", ATTR{type}==\"1\", KERNEL==\"wlan*\", NAME=\"wlan0\"\n```\n\n## 2. 使修改生效\n```\n$ sudo udevadm trigger\n```\n运行`ifconfig`查看网卡名称是否已经修改过来，如果没成功，就重启一下吧。\n\n[From askubuntu](http://askubuntu.com/questions/637591/my-ethernet-interface-name-has-changed-from-eth0-to-eth1)\n\n\n\n","slug":"ubuntu修改网卡名称","published":1,"updated":"2017-02-07T05:11:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlswu001hx0s65pmxtqkz","content":"<p>今天强迫症又犯了，想要把网卡的名称改为eth0和wlan0<br>按照网上的方法试了几种，都没有成功，下面记录下我修改成功的方法。</p>\n<h2 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h2><p>Open the file /etc/udev/rules.d/70-persistent-net.rules with your favorite editor.<br>Find the rule matching your MAC address.<br>Change the NAME value from eth1 to eth0 i.e. NAME=”eth0”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vi /etc/udev/rules.d/70-persistent-net.rules</span><br></pre></td></tr></table></figure>\n<p>找到你要修改的网卡的MAC，修改对应的<code>NAME</code>值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># PCI device 0x10ec:0x8168 (r8169)</span><br><span class=\"line\">SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;address&#125;==&quot;50:7b:9d:55:47:2e&quot;, ATTR&#123;dev_id&#125;==&quot;0x0&quot;, ATTR&#123;type&#125;==&quot;1&quot;, KERNEL==&quot;eth*&quot;, NAME=&quot;eth0&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># PCI device 0x168c:0x0042 (ath10k_pci)</span><br><span class=\"line\">SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;address&#125;==&quot;30:52:cb:68:81:17&quot;, ATTR&#123;dev_id&#125;==&quot;0x0&quot;, ATTR&#123;type&#125;==&quot;1&quot;, KERNEL==&quot;wlan*&quot;, NAME=&quot;wlan0&quot;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-使修改生效\"><a href=\"#2-使修改生效\" class=\"headerlink\" title=\"2. 使修改生效\"></a>2. 使修改生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo udevadm trigger</span><br></pre></td></tr></table></figure>\n<p>运行<code>ifconfig</code>查看网卡名称是否已经修改过来，如果没成功，就重启一下吧。</p>\n<p><a href=\"http://askubuntu.com/questions/637591/my-ethernet-interface-name-has-changed-from-eth0-to-eth1\" target=\"_blank\" rel=\"noopener\">From askubuntu</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天强迫症又犯了，想要把网卡的名称改为eth0和wlan0<br>按照网上的方法试了几种，都没有成功，下面记录下我修改成功的方法。</p>\n<h2 id=\"1-修改配置文件\"><a href=\"#1-修改配置文件\" class=\"headerlink\" title=\"1. 修改配置文件\"></a>1. 修改配置文件</h2><p>Open the file /etc/udev/rules.d/70-persistent-net.rules with your favorite editor.<br>Find the rule matching your MAC address.<br>Change the NAME value from eth1 to eth0 i.e. NAME=”eth0”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo vi /etc/udev/rules.d/70-persistent-net.rules</span><br></pre></td></tr></table></figure>\n<p>找到你要修改的网卡的MAC，修改对应的<code>NAME</code>值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># PCI device 0x10ec:0x8168 (r8169)</span><br><span class=\"line\">SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;address&#125;==&quot;50:7b:9d:55:47:2e&quot;, ATTR&#123;dev_id&#125;==&quot;0x0&quot;, ATTR&#123;type&#125;==&quot;1&quot;, KERNEL==&quot;eth*&quot;, NAME=&quot;eth0&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\"># PCI device 0x168c:0x0042 (ath10k_pci)</span><br><span class=\"line\">SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;address&#125;==&quot;30:52:cb:68:81:17&quot;, ATTR&#123;dev_id&#125;==&quot;0x0&quot;, ATTR&#123;type&#125;==&quot;1&quot;, KERNEL==&quot;wlan*&quot;, NAME=&quot;wlan0&quot;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-使修改生效\"><a href=\"#2-使修改生效\" class=\"headerlink\" title=\"2. 使修改生效\"></a>2. 使修改生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo udevadm trigger</span><br></pre></td></tr></table></figure>\n<p>运行<code>ifconfig</code>查看网卡名称是否已经修改过来，如果没成功，就重启一下吧。</p>\n<p><a href=\"http://askubuntu.com/questions/637591/my-ethernet-interface-name-has-changed-from-eth0-to-eth1\" target=\"_blank\" rel=\"noopener\">From askubuntu</a></p>\n"},{"title":"python文件处理","date":"2017-03-22T12:51:07.000Z","_content":"\n## 1. 文件操作\n\nfile('文件名','操作符')\n**省略操作符 默认为读**\n\n| 模式 | 操作符 | 说明                                           |\n| --   | --     | --                                             |\n| 只读 | `r`    | 文件必须存在                                   |\n| 只写 | `w`    | 文件不存在则创建，文件存在则清空文件内容       |\n| 追加 | `a`    | 文件不存在则创建，文件存在则在文件末尾添加内容 |\n| 读写 | `r+`   |                                                |\n| 写读 | `w+`   |                                                |\n| 追加 | `a+`   |                                                |\n\n在python中，以什么样的方式出来文件是比较重要的，如果你\n**以只读的方式打开文件，那你就不能写操作**\n**以只写的方式打开文件，那你就不能读操作**\n**以追加的方式打开文件，也应该是不能进行读操作的**\n**<font color=red>操作完毕，不要忘记关闭文件</font>**\n\n### 1.1 以只读方式打开文件\n```\n>>> f = file('test','r')  #f为该文件对象\n>>> f.readline()\n'hello world\\n'\n>>> f.readline()\n'\\n'\n>>> f.readline()\n'this is the second line\\n'\n>>> f.readline()\n>>> f.close()\n\n```\n\n### 1.2 以只写方式打开文件\n**如果文件存在并且有内容，则会把文件之前的内容清除；如果文件不存在。则会创建文件**\n```\n>>> f = file('test','w')\n>>> f.read()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIOError: File not open for reading\n\n>>> f.readline()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIOError: File not open for reading\n\n>>> f.write('this is the newest line')\n>>> f.close()\n>>> f_read = file('test','r')\n>>> f_read.read()\n'this is the newest line'\n>>> f_read.read()\n''\n```\n\n### 1.3 以追加的方式打开文件\n```\n>>> f = file('test','a') \n>>> f.write('second line') \n>>> f.write('\\nthird line')\n>>>\n```\n这个时候，打开文件，刚才写入的内容并没有写入到文件里。\n```\n>>> f_read = file('test','r')\n>>> f_read.readline()\n'this is the newest line'\n```\n**文件在关闭的时候才会写入到文件里**或者**强制写入**\n```\n>>> f.flush()\n```\n追加模式也不可以读\n```\n>>> f.read()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIOError: File not open for reading\n\n```\n\n**拓展**\n1. 去掉换行符 \n`line.strip('换行符')`\n省略换行符默认为空格\n\n2. 把行分割 \n`line.split('分隔符')`\n\n## 2. 实例\n\n### 2.1 读取`/etc/passwd`的内容\n```\nf = file('/etc/passwd')\nfor line in f.readlines(): #循环文件的每一行 \n    line = line.strip('\\n').split(':') \n    print line\n```\n得到的结果如下**一个列表**：\n```\n['root', 'x', '0', '0', 'root', '/root', '/bin/bash']\n['daemon', 'x', '1', '1', 'daemon', '/usr/sbin', '/usr/sbin/nologin']\n['bin', 'x', '2', '2', 'bin', '/bin', '/usr/sbin/nologin']\n['sys', 'x', '3', '3', 'sys', '/dev', '/usr/sbin/nologin']\n['sync', 'x', '4', '65534', 'sync', '/bin', '/bin/sync']\n['games', 'x', '5', '60', 'games', '/usr/games', '/usr/sbin/nologin']\n['man', 'x', '6', '12', 'man', '/var/cache/man', '/usr/sbin/nologin']\n\n```\n打印第1列，第2列\n```\nprint line[0],line[1]\n```\n\n### 2.2 写文件\n语言本身不存在文件保护的设置，避免多个程序对同一个文件进行操作，需要自己来完成。\n```\n>>> f.closed\nFalse\n```\n**如果`f.closed`值为False,说明文件已经被打开**\n\n显示文件的字符集，默认为ASCII\n```\n>>> f.encoding\n>>> print f.encoding\nNone\n```\n\n```\n>>> f = file('test_coding','w') \n>>> f.write(u'测试文件编码') \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-5: ordinal not in range(128)\n>>> f.write(u'测试文件编码'.encode('utf-8'))\n>>> f.flush()\n```\n\n读到末尾，`next()`会报错\n```\n>>> f = file('test_coding','r') \n>>> f.readline()\n''\n>>> f.next()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nStopIteration\n>>> \n```\n\n\n## 3. 文件操作相关方法\nreadline是通过next实现的\n\n| 方法            | 说明                           |\n| ---             | ---                            |\n| f.readlines()   | 以列表的形式读出文件           |\n| f.read()        | 以字符串的形式，一次性读出文件 |\n| f.seek()        | 跳到文件的指定位置             |\n| f.tell()        | 当前位置                       |\n| f.truncate(100) | 从头开始截断文件               |\n| f.writelines()  | 多行写                         |\n| f.xreadlines()  | 逐行读                         |\n\n","source":"_posts/python文件处理.md","raw":"---\ntitle: python文件处理\ndate: 2017-03-22 20:51:07\ntags: python\n---\n\n## 1. 文件操作\n\nfile('文件名','操作符')\n**省略操作符 默认为读**\n\n| 模式 | 操作符 | 说明                                           |\n| --   | --     | --                                             |\n| 只读 | `r`    | 文件必须存在                                   |\n| 只写 | `w`    | 文件不存在则创建，文件存在则清空文件内容       |\n| 追加 | `a`    | 文件不存在则创建，文件存在则在文件末尾添加内容 |\n| 读写 | `r+`   |                                                |\n| 写读 | `w+`   |                                                |\n| 追加 | `a+`   |                                                |\n\n在python中，以什么样的方式出来文件是比较重要的，如果你\n**以只读的方式打开文件，那你就不能写操作**\n**以只写的方式打开文件，那你就不能读操作**\n**以追加的方式打开文件，也应该是不能进行读操作的**\n**<font color=red>操作完毕，不要忘记关闭文件</font>**\n\n### 1.1 以只读方式打开文件\n```\n>>> f = file('test','r')  #f为该文件对象\n>>> f.readline()\n'hello world\\n'\n>>> f.readline()\n'\\n'\n>>> f.readline()\n'this is the second line\\n'\n>>> f.readline()\n>>> f.close()\n\n```\n\n### 1.2 以只写方式打开文件\n**如果文件存在并且有内容，则会把文件之前的内容清除；如果文件不存在。则会创建文件**\n```\n>>> f = file('test','w')\n>>> f.read()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIOError: File not open for reading\n\n>>> f.readline()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIOError: File not open for reading\n\n>>> f.write('this is the newest line')\n>>> f.close()\n>>> f_read = file('test','r')\n>>> f_read.read()\n'this is the newest line'\n>>> f_read.read()\n''\n```\n\n### 1.3 以追加的方式打开文件\n```\n>>> f = file('test','a') \n>>> f.write('second line') \n>>> f.write('\\nthird line')\n>>>\n```\n这个时候，打开文件，刚才写入的内容并没有写入到文件里。\n```\n>>> f_read = file('test','r')\n>>> f_read.readline()\n'this is the newest line'\n```\n**文件在关闭的时候才会写入到文件里**或者**强制写入**\n```\n>>> f.flush()\n```\n追加模式也不可以读\n```\n>>> f.read()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIOError: File not open for reading\n\n```\n\n**拓展**\n1. 去掉换行符 \n`line.strip('换行符')`\n省略换行符默认为空格\n\n2. 把行分割 \n`line.split('分隔符')`\n\n## 2. 实例\n\n### 2.1 读取`/etc/passwd`的内容\n```\nf = file('/etc/passwd')\nfor line in f.readlines(): #循环文件的每一行 \n    line = line.strip('\\n').split(':') \n    print line\n```\n得到的结果如下**一个列表**：\n```\n['root', 'x', '0', '0', 'root', '/root', '/bin/bash']\n['daemon', 'x', '1', '1', 'daemon', '/usr/sbin', '/usr/sbin/nologin']\n['bin', 'x', '2', '2', 'bin', '/bin', '/usr/sbin/nologin']\n['sys', 'x', '3', '3', 'sys', '/dev', '/usr/sbin/nologin']\n['sync', 'x', '4', '65534', 'sync', '/bin', '/bin/sync']\n['games', 'x', '5', '60', 'games', '/usr/games', '/usr/sbin/nologin']\n['man', 'x', '6', '12', 'man', '/var/cache/man', '/usr/sbin/nologin']\n\n```\n打印第1列，第2列\n```\nprint line[0],line[1]\n```\n\n### 2.2 写文件\n语言本身不存在文件保护的设置，避免多个程序对同一个文件进行操作，需要自己来完成。\n```\n>>> f.closed\nFalse\n```\n**如果`f.closed`值为False,说明文件已经被打开**\n\n显示文件的字符集，默认为ASCII\n```\n>>> f.encoding\n>>> print f.encoding\nNone\n```\n\n```\n>>> f = file('test_coding','w') \n>>> f.write(u'测试文件编码') \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-5: ordinal not in range(128)\n>>> f.write(u'测试文件编码'.encode('utf-8'))\n>>> f.flush()\n```\n\n读到末尾，`next()`会报错\n```\n>>> f = file('test_coding','r') \n>>> f.readline()\n''\n>>> f.next()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nStopIteration\n>>> \n```\n\n\n## 3. 文件操作相关方法\nreadline是通过next实现的\n\n| 方法            | 说明                           |\n| ---             | ---                            |\n| f.readlines()   | 以列表的形式读出文件           |\n| f.read()        | 以字符串的形式，一次性读出文件 |\n| f.seek()        | 跳到文件的指定位置             |\n| f.tell()        | 当前位置                       |\n| f.truncate(100) | 从头开始截断文件               |\n| f.writelines()  | 多行写                         |\n| f.xreadlines()  | 逐行读                         |\n\n","slug":"python文件处理","published":1,"updated":"2017-03-23T13:49:22.090Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlswv001jx0s6qlhzmm7o","content":"<h2 id=\"1-文件操作\"><a href=\"#1-文件操作\" class=\"headerlink\" title=\"1. 文件操作\"></a>1. 文件操作</h2><p>file(‘文件名’,’操作符’)<br><strong>省略操作符 默认为读</strong></p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>操作符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>只读</td>\n<td><code>r</code></td>\n<td>文件必须存在</td>\n</tr>\n<tr>\n<td>只写</td>\n<td><code>w</code></td>\n<td>文件不存在则创建，文件存在则清空文件内容</td>\n</tr>\n<tr>\n<td>追加</td>\n<td><code>a</code></td>\n<td>文件不存在则创建，文件存在则在文件末尾添加内容</td>\n</tr>\n<tr>\n<td>读写</td>\n<td><code>r+</code></td>\n<td></td>\n</tr>\n<tr>\n<td>写读</td>\n<td><code>w+</code></td>\n<td></td>\n</tr>\n<tr>\n<td>追加</td>\n<td><code>a+</code></td>\n</tr>\n</tbody>\n</table>\n<p>在python中，以什么样的方式出来文件是比较重要的，如果你<br><strong>以只读的方式打开文件，那你就不能写操作</strong><br><strong>以只写的方式打开文件，那你就不能读操作</strong><br><strong>以追加的方式打开文件，也应该是不能进行读操作的</strong><br><strong><font color=\"red\">操作完毕，不要忘记关闭文件</font></strong></p>\n<h3 id=\"1-1-以只读方式打开文件\"><a href=\"#1-1-以只读方式打开文件\" class=\"headerlink\" title=\"1.1 以只读方式打开文件\"></a>1.1 以只读方式打开文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;r&apos;)  #f为该文件对象</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;hello world\\n&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;\\n&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;this is the second line\\n&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&gt;&gt;&gt; f.close()</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-以只写方式打开文件\"><a href=\"#1-2-以只写方式打开文件\" class=\"headerlink\" title=\"1.2 以只写方式打开文件\"></a>1.2 以只写方式打开文件</h3><p><strong>如果文件存在并且有内容，则会把文件之前的内容清除；如果文件不存在。则会创建文件</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;w&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f.read()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IOError: File not open for reading</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IOError: File not open for reading</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; f.write(&apos;this is the newest line&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f.close()</span><br><span class=\"line\">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f_read.read()</span><br><span class=\"line\">&apos;this is the newest line&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f_read.read()</span><br><span class=\"line\">&apos;&apos;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-3-以追加的方式打开文件\"><a href=\"#1-3-以追加的方式打开文件\" class=\"headerlink\" title=\"1.3 以追加的方式打开文件\"></a>1.3 以追加的方式打开文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;a&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.write(&apos;second line&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.write(&apos;\\nthird line&apos;)</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>这个时候，打开文件，刚才写入的内容并没有写入到文件里。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f_read.readline()</span><br><span class=\"line\">&apos;this is the newest line&apos;</span><br></pre></td></tr></table></figure></p>\n<p><strong>文件在关闭的时候才会写入到文件里</strong>或者<strong>强制写入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.flush()</span><br></pre></td></tr></table></figure></p>\n<p>追加模式也不可以读<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.read()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IOError: File not open for reading</span><br></pre></td></tr></table></figure></p>\n<p><strong>拓展</strong></p>\n<ol>\n<li><p>去掉换行符<br><code>line.strip(&#39;换行符&#39;)</code><br>省略换行符默认为空格</p>\n</li>\n<li><p>把行分割<br><code>line.split(&#39;分隔符&#39;)</code></p>\n</li>\n</ol>\n<h2 id=\"2-实例\"><a href=\"#2-实例\" class=\"headerlink\" title=\"2. 实例\"></a>2. 实例</h2><h3 id=\"2-1-读取-etc-passwd的内容\"><a href=\"#2-1-读取-etc-passwd的内容\" class=\"headerlink\" title=\"2.1 读取/etc/passwd的内容\"></a>2.1 读取<code>/etc/passwd</code>的内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = file(&apos;/etc/passwd&apos;)</span><br><span class=\"line\">for line in f.readlines(): #循环文件的每一行 </span><br><span class=\"line\">    line = line.strip(&apos;\\n&apos;).split(&apos;:&apos;) </span><br><span class=\"line\">    print line</span><br></pre></td></tr></table></figure>\n<p>得到的结果如下<strong>一个列表</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&apos;root&apos;, &apos;x&apos;, &apos;0&apos;, &apos;0&apos;, &apos;root&apos;, &apos;/root&apos;, &apos;/bin/bash&apos;]</span><br><span class=\"line\">[&apos;daemon&apos;, &apos;x&apos;, &apos;1&apos;, &apos;1&apos;, &apos;daemon&apos;, &apos;/usr/sbin&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;bin&apos;, &apos;x&apos;, &apos;2&apos;, &apos;2&apos;, &apos;bin&apos;, &apos;/bin&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;sys&apos;, &apos;x&apos;, &apos;3&apos;, &apos;3&apos;, &apos;sys&apos;, &apos;/dev&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;sync&apos;, &apos;x&apos;, &apos;4&apos;, &apos;65534&apos;, &apos;sync&apos;, &apos;/bin&apos;, &apos;/bin/sync&apos;]</span><br><span class=\"line\">[&apos;games&apos;, &apos;x&apos;, &apos;5&apos;, &apos;60&apos;, &apos;games&apos;, &apos;/usr/games&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;man&apos;, &apos;x&apos;, &apos;6&apos;, &apos;12&apos;, &apos;man&apos;, &apos;/var/cache/man&apos;, &apos;/usr/sbin/nologin&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>打印第1列，第2列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print line[0],line[1]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-2-写文件\"><a href=\"#2-2-写文件\" class=\"headerlink\" title=\"2.2 写文件\"></a>2.2 写文件</h3><p>语言本身不存在文件保护的设置，避免多个程序对同一个文件进行操作，需要自己来完成。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.closed</span><br><span class=\"line\">False</span><br></pre></td></tr></table></figure></p>\n<p><strong>如果<code>f.closed</code>值为False,说明文件已经被打开</strong></p>\n<p>显示文件的字符集，默认为ASCII<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.encoding</span><br><span class=\"line\">&gt;&gt;&gt; print f.encoding</span><br><span class=\"line\">None</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;w&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;) </span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode characters in position 0-5: ordinal not in range(128)</span><br><span class=\"line\">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;.encode(&apos;utf-8&apos;))</span><br><span class=\"line\">&gt;&gt;&gt; f.flush()</span><br></pre></td></tr></table></figure>\n<p>读到末尾，<code>next()</code>会报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;r&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.next()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">StopIteration</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-文件操作相关方法\"><a href=\"#3-文件操作相关方法\" class=\"headerlink\" title=\"3. 文件操作相关方法\"></a>3. 文件操作相关方法</h2><p>readline是通过next实现的</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f.readlines()</td>\n<td>以列表的形式读出文件</td>\n</tr>\n<tr>\n<td>f.read()</td>\n<td>以字符串的形式，一次性读出文件</td>\n</tr>\n<tr>\n<td>f.seek()</td>\n<td>跳到文件的指定位置</td>\n</tr>\n<tr>\n<td>f.tell()</td>\n<td>当前位置</td>\n</tr>\n<tr>\n<td>f.truncate(100)</td>\n<td>从头开始截断文件</td>\n</tr>\n<tr>\n<td>f.writelines()</td>\n<td>多行写</td>\n</tr>\n<tr>\n<td>f.xreadlines()</td>\n<td>逐行读</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-文件操作\"><a href=\"#1-文件操作\" class=\"headerlink\" title=\"1. 文件操作\"></a>1. 文件操作</h2><p>file(‘文件名’,’操作符’)<br><strong>省略操作符 默认为读</strong></p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>操作符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>只读</td>\n<td><code>r</code></td>\n<td>文件必须存在</td>\n</tr>\n<tr>\n<td>只写</td>\n<td><code>w</code></td>\n<td>文件不存在则创建，文件存在则清空文件内容</td>\n</tr>\n<tr>\n<td>追加</td>\n<td><code>a</code></td>\n<td>文件不存在则创建，文件存在则在文件末尾添加内容</td>\n</tr>\n<tr>\n<td>读写</td>\n<td><code>r+</code></td>\n<td></td>\n</tr>\n<tr>\n<td>写读</td>\n<td><code>w+</code></td>\n<td></td>\n</tr>\n<tr>\n<td>追加</td>\n<td><code>a+</code></td>\n</tr>\n</tbody>\n</table>\n<p>在python中，以什么样的方式出来文件是比较重要的，如果你<br><strong>以只读的方式打开文件，那你就不能写操作</strong><br><strong>以只写的方式打开文件，那你就不能读操作</strong><br><strong>以追加的方式打开文件，也应该是不能进行读操作的</strong><br><strong><font color=\"red\">操作完毕，不要忘记关闭文件</font></strong></p>\n<h3 id=\"1-1-以只读方式打开文件\"><a href=\"#1-1-以只读方式打开文件\" class=\"headerlink\" title=\"1.1 以只读方式打开文件\"></a>1.1 以只读方式打开文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;r&apos;)  #f为该文件对象</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;hello world\\n&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;\\n&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;this is the second line\\n&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&gt;&gt;&gt; f.close()</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-以只写方式打开文件\"><a href=\"#1-2-以只写方式打开文件\" class=\"headerlink\" title=\"1.2 以只写方式打开文件\"></a>1.2 以只写方式打开文件</h3><p><strong>如果文件存在并且有内容，则会把文件之前的内容清除；如果文件不存在。则会创建文件</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;w&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f.read()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IOError: File not open for reading</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IOError: File not open for reading</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; f.write(&apos;this is the newest line&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f.close()</span><br><span class=\"line\">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f_read.read()</span><br><span class=\"line\">&apos;this is the newest line&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f_read.read()</span><br><span class=\"line\">&apos;&apos;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-3-以追加的方式打开文件\"><a href=\"#1-3-以追加的方式打开文件\" class=\"headerlink\" title=\"1.3 以追加的方式打开文件\"></a>1.3 以追加的方式打开文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;a&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.write(&apos;second line&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.write(&apos;\\nthird line&apos;)</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p>这个时候，打开文件，刚才写入的内容并没有写入到文件里。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; f_read.readline()</span><br><span class=\"line\">&apos;this is the newest line&apos;</span><br></pre></td></tr></table></figure></p>\n<p><strong>文件在关闭的时候才会写入到文件里</strong>或者<strong>强制写入</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.flush()</span><br></pre></td></tr></table></figure></p>\n<p>追加模式也不可以读<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.read()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">IOError: File not open for reading</span><br></pre></td></tr></table></figure></p>\n<p><strong>拓展</strong></p>\n<ol>\n<li><p>去掉换行符<br><code>line.strip(&#39;换行符&#39;)</code><br>省略换行符默认为空格</p>\n</li>\n<li><p>把行分割<br><code>line.split(&#39;分隔符&#39;)</code></p>\n</li>\n</ol>\n<h2 id=\"2-实例\"><a href=\"#2-实例\" class=\"headerlink\" title=\"2. 实例\"></a>2. 实例</h2><h3 id=\"2-1-读取-etc-passwd的内容\"><a href=\"#2-1-读取-etc-passwd的内容\" class=\"headerlink\" title=\"2.1 读取/etc/passwd的内容\"></a>2.1 读取<code>/etc/passwd</code>的内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = file(&apos;/etc/passwd&apos;)</span><br><span class=\"line\">for line in f.readlines(): #循环文件的每一行 </span><br><span class=\"line\">    line = line.strip(&apos;\\n&apos;).split(&apos;:&apos;) </span><br><span class=\"line\">    print line</span><br></pre></td></tr></table></figure>\n<p>得到的结果如下<strong>一个列表</strong>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&apos;root&apos;, &apos;x&apos;, &apos;0&apos;, &apos;0&apos;, &apos;root&apos;, &apos;/root&apos;, &apos;/bin/bash&apos;]</span><br><span class=\"line\">[&apos;daemon&apos;, &apos;x&apos;, &apos;1&apos;, &apos;1&apos;, &apos;daemon&apos;, &apos;/usr/sbin&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;bin&apos;, &apos;x&apos;, &apos;2&apos;, &apos;2&apos;, &apos;bin&apos;, &apos;/bin&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;sys&apos;, &apos;x&apos;, &apos;3&apos;, &apos;3&apos;, &apos;sys&apos;, &apos;/dev&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;sync&apos;, &apos;x&apos;, &apos;4&apos;, &apos;65534&apos;, &apos;sync&apos;, &apos;/bin&apos;, &apos;/bin/sync&apos;]</span><br><span class=\"line\">[&apos;games&apos;, &apos;x&apos;, &apos;5&apos;, &apos;60&apos;, &apos;games&apos;, &apos;/usr/games&apos;, &apos;/usr/sbin/nologin&apos;]</span><br><span class=\"line\">[&apos;man&apos;, &apos;x&apos;, &apos;6&apos;, &apos;12&apos;, &apos;man&apos;, &apos;/var/cache/man&apos;, &apos;/usr/sbin/nologin&apos;]</span><br></pre></td></tr></table></figure></p>\n<p>打印第1列，第2列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print line[0],line[1]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-2-写文件\"><a href=\"#2-2-写文件\" class=\"headerlink\" title=\"2.2 写文件\"></a>2.2 写文件</h3><p>语言本身不存在文件保护的设置，避免多个程序对同一个文件进行操作，需要自己来完成。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.closed</span><br><span class=\"line\">False</span><br></pre></td></tr></table></figure></p>\n<p><strong>如果<code>f.closed</code>值为False,说明文件已经被打开</strong></p>\n<p>显示文件的字符集，默认为ASCII<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f.encoding</span><br><span class=\"line\">&gt;&gt;&gt; print f.encoding</span><br><span class=\"line\">None</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;w&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;) </span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode characters in position 0-5: ordinal not in range(128)</span><br><span class=\"line\">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;.encode(&apos;utf-8&apos;))</span><br><span class=\"line\">&gt;&gt;&gt; f.flush()</span><br></pre></td></tr></table></figure>\n<p>读到末尾，<code>next()</code>会报错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;r&apos;) </span><br><span class=\"line\">&gt;&gt;&gt; f.readline()</span><br><span class=\"line\">&apos;&apos;</span><br><span class=\"line\">&gt;&gt;&gt; f.next()</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class=\"line\">StopIteration</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-文件操作相关方法\"><a href=\"#3-文件操作相关方法\" class=\"headerlink\" title=\"3. 文件操作相关方法\"></a>3. 文件操作相关方法</h2><p>readline是通过next实现的</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f.readlines()</td>\n<td>以列表的形式读出文件</td>\n</tr>\n<tr>\n<td>f.read()</td>\n<td>以字符串的形式，一次性读出文件</td>\n</tr>\n<tr>\n<td>f.seek()</td>\n<td>跳到文件的指定位置</td>\n</tr>\n<tr>\n<td>f.tell()</td>\n<td>当前位置</td>\n</tr>\n<tr>\n<td>f.truncate(100)</td>\n<td>从头开始截断文件</td>\n</tr>\n<tr>\n<td>f.writelines()</td>\n<td>多行写</td>\n</tr>\n<tr>\n<td>f.xreadlines()</td>\n<td>逐行读</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"tmux安装配置使用","date":"2017-01-19T08:35:05.000Z","_content":"\n## 1.安装\n```\n# ubuntu\nsudo apt-get install tmux\n```\n或者  \n[点击下载tmux安装包](https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz)\n\n\n## 2.配置文件\n~/.tmux.conf\n如果文件不存在直接`touch`就可以。\n**下面是我的配置文件**\n```\nunbind C-b\nset -g prefix C-a\nbind C-a send-prefix\n\nbind r source-file ~/.tmux.conf \\; display \"tmux.conf reload!\"\n\nbind | split-window -h\nbind - split-window -v\n\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\n\n\n/*bind -n C-x setw synchronize-panes */\nbind C-e command-prompt -p \"session?,message?\" \"run-shell \\\"tmux list-windows -t %1 \\| cut -d: -f1\\|xargs -I\\{\\} tmux send-keys -t %1:\\{\\} %2\\\"\"\n\nset -g base-index 1\nset -g pane-base-index 1\n\nset -g status-fg white\nset -g status-bg black\n\nsetw -g window-status-fg cyan\nsetw -g window-status-bg default\nsetw -g window-status-attr dim\n\nsetw -g window-status-current-fg white\nsetw -g window-status-current-bg red\nsetw -g window-status-current-attr bright\n\nset -g message-fg green\nset -g message-bg black\nset -g message-attr bright\n\nset -g status-left \"#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P\"\nset -g status-left-length 40\nset -g status-left \"#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P\"\nset -g status-right \"#[fg=cyan]%d %b %R\"\nset -g status-utf8 on\n\nset -g status-interval 60\nset -g status-justify centre\n\nsetw -g monitor-activity on\nset -g visual-activity on\n\nsetw -g mode-keys vi\n```\n\n## 3.tmux部分快捷键\n| 按键           | 说明                                                     |\n| -------------- | -------------------------------------------------------- |\n| Ctrl+a ?       | 列出所有快捷键                                           |\n| Ctrl+a c       | 新建窗口                                                 |\n| Ctrl+a 数字    | 切换到对应的窗口                                         |\n| Ctrl+a n       | 切换到下一个窗口                                         |\n| Ctrl+a p       | 切换到上一个窗口                                         |\n| Ctrl+a w       | 列出所有窗口                                             |\n| Ctrl+a f       | 查找窗口                                                 |\n| Ctrl+a ,       | 修改该窗口的名字                                         |\n| Ctrl+a %/竖线  | 垂直分隔窗口                                             |\n| Ctrl+a \"/-     | 水平分隔窗口                                             |\n| Ctrl+a o       | 交换光标所在窗格                                         |\n| Ctrl+a x       | 关闭窗格                                                 |\n| Ctrl+a 空格    | 切换布局                                                 |\n| Ctrl+a q       | 显示每个窗格是第几个，当数字出现时按数字就选中第几个窗格 |\n| Ctrl+a {       | 与上一个窗格交换位置                                     |\n| Ctrl+a }       | 与下一个窗格交换位置                                     |\n| Ctrl+a z       | 切换当前窗格最大化/最小化                                |\n| Ctrl+a [       | 进入复制模式                                             |\n| Ctrl+a [ 空格  | 开始选择内容 回车复制                                    |\n| Ctrl+a ]       | 粘贴                                                     |\n\n","source":"_posts/tmux安装配置使用.md","raw":"---\ntitle: tmux安装配置使用\ndate: 2017-01-19 16:35:05\ntags: tmux\n---\n\n## 1.安装\n```\n# ubuntu\nsudo apt-get install tmux\n```\n或者  \n[点击下载tmux安装包](https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz)\n\n\n## 2.配置文件\n~/.tmux.conf\n如果文件不存在直接`touch`就可以。\n**下面是我的配置文件**\n```\nunbind C-b\nset -g prefix C-a\nbind C-a send-prefix\n\nbind r source-file ~/.tmux.conf \\; display \"tmux.conf reload!\"\n\nbind | split-window -h\nbind - split-window -v\n\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\n\n\n/*bind -n C-x setw synchronize-panes */\nbind C-e command-prompt -p \"session?,message?\" \"run-shell \\\"tmux list-windows -t %1 \\| cut -d: -f1\\|xargs -I\\{\\} tmux send-keys -t %1:\\{\\} %2\\\"\"\n\nset -g base-index 1\nset -g pane-base-index 1\n\nset -g status-fg white\nset -g status-bg black\n\nsetw -g window-status-fg cyan\nsetw -g window-status-bg default\nsetw -g window-status-attr dim\n\nsetw -g window-status-current-fg white\nsetw -g window-status-current-bg red\nsetw -g window-status-current-attr bright\n\nset -g message-fg green\nset -g message-bg black\nset -g message-attr bright\n\nset -g status-left \"#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P\"\nset -g status-left-length 40\nset -g status-left \"#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P\"\nset -g status-right \"#[fg=cyan]%d %b %R\"\nset -g status-utf8 on\n\nset -g status-interval 60\nset -g status-justify centre\n\nsetw -g monitor-activity on\nset -g visual-activity on\n\nsetw -g mode-keys vi\n```\n\n## 3.tmux部分快捷键\n| 按键           | 说明                                                     |\n| -------------- | -------------------------------------------------------- |\n| Ctrl+a ?       | 列出所有快捷键                                           |\n| Ctrl+a c       | 新建窗口                                                 |\n| Ctrl+a 数字    | 切换到对应的窗口                                         |\n| Ctrl+a n       | 切换到下一个窗口                                         |\n| Ctrl+a p       | 切换到上一个窗口                                         |\n| Ctrl+a w       | 列出所有窗口                                             |\n| Ctrl+a f       | 查找窗口                                                 |\n| Ctrl+a ,       | 修改该窗口的名字                                         |\n| Ctrl+a %/竖线  | 垂直分隔窗口                                             |\n| Ctrl+a \"/-     | 水平分隔窗口                                             |\n| Ctrl+a o       | 交换光标所在窗格                                         |\n| Ctrl+a x       | 关闭窗格                                                 |\n| Ctrl+a 空格    | 切换布局                                                 |\n| Ctrl+a q       | 显示每个窗格是第几个，当数字出现时按数字就选中第几个窗格 |\n| Ctrl+a {       | 与上一个窗格交换位置                                     |\n| Ctrl+a }       | 与下一个窗格交换位置                                     |\n| Ctrl+a z       | 切换当前窗格最大化/最小化                                |\n| Ctrl+a [       | 进入复制模式                                             |\n| Ctrl+a [ 空格  | 开始选择内容 回车复制                                    |\n| Ctrl+a ]       | 粘贴                                                     |\n\n","slug":"tmux安装配置使用","published":1,"updated":"2017-01-19T08:46:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlswy001mx0s6sy2g2tex","content":"<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ubuntu</span><br><span class=\"line\">sudo apt-get install tmux</span><br></pre></td></tr></table></figure>\n<p>或者<br><a href=\"https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz\" target=\"_blank\" rel=\"noopener\">点击下载tmux安装包</a></p>\n<h2 id=\"2-配置文件\"><a href=\"#2-配置文件\" class=\"headerlink\" title=\"2.配置文件\"></a>2.配置文件</h2><p>~/.tmux.conf<br>如果文件不存在直接<code>touch</code>就可以。<br><strong>下面是我的配置文件</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unbind C-b</span><br><span class=\"line\">set -g prefix C-a</span><br><span class=\"line\">bind C-a send-prefix</span><br><span class=\"line\"></span><br><span class=\"line\">bind r source-file ~/.tmux.conf \\; display &quot;tmux.conf reload!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">bind | split-window -h</span><br><span class=\"line\">bind - split-window -v</span><br><span class=\"line\"></span><br><span class=\"line\">bind h select-pane -L</span><br><span class=\"line\">bind j select-pane -D</span><br><span class=\"line\">bind k select-pane -U</span><br><span class=\"line\">bind l select-pane -R</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/*bind -n C-x setw synchronize-panes */</span><br><span class=\"line\">bind C-e command-prompt -p &quot;session?,message?&quot; &quot;run-shell \\&quot;tmux list-windows -t %1 \\| cut -d: -f1\\|xargs -I\\&#123;\\&#125; tmux send-keys -t %1:\\&#123;\\&#125; %2\\&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">set -g base-index 1</span><br><span class=\"line\">set -g pane-base-index 1</span><br><span class=\"line\"></span><br><span class=\"line\">set -g status-fg white</span><br><span class=\"line\">set -g status-bg black</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g window-status-fg cyan</span><br><span class=\"line\">setw -g window-status-bg default</span><br><span class=\"line\">setw -g window-status-attr dim</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g window-status-current-fg white</span><br><span class=\"line\">setw -g window-status-current-bg red</span><br><span class=\"line\">setw -g window-status-current-attr bright</span><br><span class=\"line\"></span><br><span class=\"line\">set -g message-fg green</span><br><span class=\"line\">set -g message-bg black</span><br><span class=\"line\">set -g message-attr bright</span><br><span class=\"line\"></span><br><span class=\"line\">set -g status-left &quot;#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P&quot;</span><br><span class=\"line\">set -g status-left-length 40</span><br><span class=\"line\">set -g status-left &quot;#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P&quot;</span><br><span class=\"line\">set -g status-right &quot;#[fg=cyan]%d %b %R&quot;</span><br><span class=\"line\">set -g status-utf8 on</span><br><span class=\"line\"></span><br><span class=\"line\">set -g status-interval 60</span><br><span class=\"line\">set -g status-justify centre</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g monitor-activity on</span><br><span class=\"line\">set -g visual-activity on</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g mode-keys vi</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-tmux部分快捷键\"><a href=\"#3-tmux部分快捷键\" class=\"headerlink\" title=\"3.tmux部分快捷键\"></a>3.tmux部分快捷键</h2><table>\n<thead>\n<tr>\n<th>按键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+a ?</td>\n<td>列出所有快捷键</td>\n</tr>\n<tr>\n<td>Ctrl+a c</td>\n<td>新建窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a 数字</td>\n<td>切换到对应的窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a n</td>\n<td>切换到下一个窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a p</td>\n<td>切换到上一个窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a w</td>\n<td>列出所有窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a f</td>\n<td>查找窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a ,</td>\n<td>修改该窗口的名字</td>\n</tr>\n<tr>\n<td>Ctrl+a %/竖线</td>\n<td>垂直分隔窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a “/-</td>\n<td>水平分隔窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a o</td>\n<td>交换光标所在窗格</td>\n</tr>\n<tr>\n<td>Ctrl+a x</td>\n<td>关闭窗格</td>\n</tr>\n<tr>\n<td>Ctrl+a 空格</td>\n<td>切换布局</td>\n</tr>\n<tr>\n<td>Ctrl+a q</td>\n<td>显示每个窗格是第几个，当数字出现时按数字就选中第几个窗格</td>\n</tr>\n<tr>\n<td>Ctrl+a {</td>\n<td>与上一个窗格交换位置</td>\n</tr>\n<tr>\n<td>Ctrl+a }</td>\n<td>与下一个窗格交换位置</td>\n</tr>\n<tr>\n<td>Ctrl+a z</td>\n<td>切换当前窗格最大化/最小化</td>\n</tr>\n<tr>\n<td>Ctrl+a [</td>\n<td>进入复制模式</td>\n</tr>\n<tr>\n<td>Ctrl+a [ 空格</td>\n<td>开始选择内容 回车复制</td>\n</tr>\n<tr>\n<td>Ctrl+a ]</td>\n<td>粘贴</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ubuntu</span><br><span class=\"line\">sudo apt-get install tmux</span><br></pre></td></tr></table></figure>\n<p>或者<br><a href=\"https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz\" target=\"_blank\" rel=\"noopener\">点击下载tmux安装包</a></p>\n<h2 id=\"2-配置文件\"><a href=\"#2-配置文件\" class=\"headerlink\" title=\"2.配置文件\"></a>2.配置文件</h2><p>~/.tmux.conf<br>如果文件不存在直接<code>touch</code>就可以。<br><strong>下面是我的配置文件</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unbind C-b</span><br><span class=\"line\">set -g prefix C-a</span><br><span class=\"line\">bind C-a send-prefix</span><br><span class=\"line\"></span><br><span class=\"line\">bind r source-file ~/.tmux.conf \\; display &quot;tmux.conf reload!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">bind | split-window -h</span><br><span class=\"line\">bind - split-window -v</span><br><span class=\"line\"></span><br><span class=\"line\">bind h select-pane -L</span><br><span class=\"line\">bind j select-pane -D</span><br><span class=\"line\">bind k select-pane -U</span><br><span class=\"line\">bind l select-pane -R</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/*bind -n C-x setw synchronize-panes */</span><br><span class=\"line\">bind C-e command-prompt -p &quot;session?,message?&quot; &quot;run-shell \\&quot;tmux list-windows -t %1 \\| cut -d: -f1\\|xargs -I\\&#123;\\&#125; tmux send-keys -t %1:\\&#123;\\&#125; %2\\&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">set -g base-index 1</span><br><span class=\"line\">set -g pane-base-index 1</span><br><span class=\"line\"></span><br><span class=\"line\">set -g status-fg white</span><br><span class=\"line\">set -g status-bg black</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g window-status-fg cyan</span><br><span class=\"line\">setw -g window-status-bg default</span><br><span class=\"line\">setw -g window-status-attr dim</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g window-status-current-fg white</span><br><span class=\"line\">setw -g window-status-current-bg red</span><br><span class=\"line\">setw -g window-status-current-attr bright</span><br><span class=\"line\"></span><br><span class=\"line\">set -g message-fg green</span><br><span class=\"line\">set -g message-bg black</span><br><span class=\"line\">set -g message-attr bright</span><br><span class=\"line\"></span><br><span class=\"line\">set -g status-left &quot;#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P&quot;</span><br><span class=\"line\">set -g status-left-length 40</span><br><span class=\"line\">set -g status-left &quot;#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P&quot;</span><br><span class=\"line\">set -g status-right &quot;#[fg=cyan]%d %b %R&quot;</span><br><span class=\"line\">set -g status-utf8 on</span><br><span class=\"line\"></span><br><span class=\"line\">set -g status-interval 60</span><br><span class=\"line\">set -g status-justify centre</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g monitor-activity on</span><br><span class=\"line\">set -g visual-activity on</span><br><span class=\"line\"></span><br><span class=\"line\">setw -g mode-keys vi</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-tmux部分快捷键\"><a href=\"#3-tmux部分快捷键\" class=\"headerlink\" title=\"3.tmux部分快捷键\"></a>3.tmux部分快捷键</h2><table>\n<thead>\n<tr>\n<th>按键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ctrl+a ?</td>\n<td>列出所有快捷键</td>\n</tr>\n<tr>\n<td>Ctrl+a c</td>\n<td>新建窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a 数字</td>\n<td>切换到对应的窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a n</td>\n<td>切换到下一个窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a p</td>\n<td>切换到上一个窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a w</td>\n<td>列出所有窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a f</td>\n<td>查找窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a ,</td>\n<td>修改该窗口的名字</td>\n</tr>\n<tr>\n<td>Ctrl+a %/竖线</td>\n<td>垂直分隔窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a “/-</td>\n<td>水平分隔窗口</td>\n</tr>\n<tr>\n<td>Ctrl+a o</td>\n<td>交换光标所在窗格</td>\n</tr>\n<tr>\n<td>Ctrl+a x</td>\n<td>关闭窗格</td>\n</tr>\n<tr>\n<td>Ctrl+a 空格</td>\n<td>切换布局</td>\n</tr>\n<tr>\n<td>Ctrl+a q</td>\n<td>显示每个窗格是第几个，当数字出现时按数字就选中第几个窗格</td>\n</tr>\n<tr>\n<td>Ctrl+a {</td>\n<td>与上一个窗格交换位置</td>\n</tr>\n<tr>\n<td>Ctrl+a }</td>\n<td>与下一个窗格交换位置</td>\n</tr>\n<tr>\n<td>Ctrl+a z</td>\n<td>切换当前窗格最大化/最小化</td>\n</tr>\n<tr>\n<td>Ctrl+a [</td>\n<td>进入复制模式</td>\n</tr>\n<tr>\n<td>Ctrl+a [ 空格</td>\n<td>开始选择内容 回车复制</td>\n</tr>\n<tr>\n<td>Ctrl+a ]</td>\n<td>粘贴</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"ubuntu安装powerline字体","date":"2017-01-22T06:25:10.000Z","_content":"\n## 1.下载powerline字体和配置文件\n```\n$ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf\n$ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf\n```\n\n## 2.将字体放到字体目录中\n```\n$ sudo mv ./PowerlineSymbols.otf /usr/local/share/fonts\n```\n\n## 3.更新字体缓存\n```\n$ fc-cache -vf /usr/share/fonts/\n```\n\n## 4.添加字体配置文件\n```\n$ sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/\n```\n\n这样vim中的powerline字体就能够正确显示了。\n","source":"_posts/ubuntu安装powerline字体.md","raw":"---\ntitle: ubuntu安装powerline字体\ndate: 2017-01-22 14:25:10\ntags: vim插件\n---\n\n## 1.下载powerline字体和配置文件\n```\n$ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf\n$ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf\n```\n\n## 2.将字体放到字体目录中\n```\n$ sudo mv ./PowerlineSymbols.otf /usr/local/share/fonts\n```\n\n## 3.更新字体缓存\n```\n$ fc-cache -vf /usr/share/fonts/\n```\n\n## 4.添加字体配置文件\n```\n$ sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/\n```\n\n这样vim中的powerline字体就能够正确显示了。\n","slug":"ubuntu安装powerline字体","published":1,"updated":"2017-01-24T08:15:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlswz001ox0s6iw1h19n7","content":"<h2 id=\"1-下载powerline字体和配置文件\"><a href=\"#1-下载powerline字体和配置文件\" class=\"headerlink\" title=\"1.下载powerline字体和配置文件\"></a>1.下载powerline字体和配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf</span><br><span class=\"line\">$ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-将字体放到字体目录中\"><a href=\"#2-将字体放到字体目录中\" class=\"headerlink\" title=\"2.将字体放到字体目录中\"></a>2.将字体放到字体目录中</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mv ./PowerlineSymbols.otf /usr/local/share/fonts</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-更新字体缓存\"><a href=\"#3-更新字体缓存\" class=\"headerlink\" title=\"3.更新字体缓存\"></a>3.更新字体缓存</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fc-cache -vf /usr/share/fonts/</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-添加字体配置文件\"><a href=\"#4-添加字体配置文件\" class=\"headerlink\" title=\"4.添加字体配置文件\"></a>4.添加字体配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/</span><br></pre></td></tr></table></figure>\n<p>这样vim中的powerline字体就能够正确显示了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-下载powerline字体和配置文件\"><a href=\"#1-下载powerline字体和配置文件\" class=\"headerlink\" title=\"1.下载powerline字体和配置文件\"></a>1.下载powerline字体和配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf</span><br><span class=\"line\">$ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-将字体放到字体目录中\"><a href=\"#2-将字体放到字体目录中\" class=\"headerlink\" title=\"2.将字体放到字体目录中\"></a>2.将字体放到字体目录中</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mv ./PowerlineSymbols.otf /usr/local/share/fonts</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-更新字体缓存\"><a href=\"#3-更新字体缓存\" class=\"headerlink\" title=\"3.更新字体缓存\"></a>3.更新字体缓存</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ fc-cache -vf /usr/share/fonts/</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-添加字体配置文件\"><a href=\"#4-添加字体配置文件\" class=\"headerlink\" title=\"4.添加字体配置文件\"></a>4.添加字体配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/</span><br></pre></td></tr></table></figure>\n<p>这样vim中的powerline字体就能够正确显示了。</p>\n"},{"title":"ubuntu指定默认编辑器","date":"2017-02-07T05:28:17.000Z","_content":"\nubuntu默认的编辑器为nano，例如执行如下命令时就会使用nano来打开\n`sudo visudo`或者`git commit --amend`\n\n如果想要设置成默认使用自己习惯的vi，可以执行如下命令进行选择\n\n```\n$ sudo update-alternatives --config editor \nThere are 4 choices for the alternative editor (providing /usr/bin/editor).\n  Selection    Path                Priority   Status\n------------------------------------------------------------\n* 0            /bin/nano            40        auto mode\n  1            /bin/ed             -100       manual mode\n  2            /bin/nano            40        manual mode\n  3            /usr/bin/vim.basic   30        manual mode\n  4            /usr/bin/vim.tiny    10        manual mode\nPress enter to keep the current choice[*], or type selection number:\n\n```\n输入`3`就可以了。","source":"_posts/ubuntu指定默认编辑器.md","raw":"---\ntitle: ubuntu指定默认编辑器\ndate: 2017-02-07 13:28:17\ncategories: \ntags: ubuntu\n---\n\nubuntu默认的编辑器为nano，例如执行如下命令时就会使用nano来打开\n`sudo visudo`或者`git commit --amend`\n\n如果想要设置成默认使用自己习惯的vi，可以执行如下命令进行选择\n\n```\n$ sudo update-alternatives --config editor \nThere are 4 choices for the alternative editor (providing /usr/bin/editor).\n  Selection    Path                Priority   Status\n------------------------------------------------------------\n* 0            /bin/nano            40        auto mode\n  1            /bin/ed             -100       manual mode\n  2            /bin/nano            40        manual mode\n  3            /usr/bin/vim.basic   30        manual mode\n  4            /usr/bin/vim.tiny    10        manual mode\nPress enter to keep the current choice[*], or type selection number:\n\n```\n输入`3`就可以了。","slug":"ubuntu指定默认编辑器","published":1,"updated":"2017-02-07T05:37:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsx0001px0s65ffxct13","content":"<p>ubuntu默认的编辑器为nano，例如执行如下命令时就会使用nano来打开<br><code>sudo visudo</code>或者<code>git commit --amend</code></p>\n<p>如果想要设置成默认使用自己习惯的vi，可以执行如下命令进行选择</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo update-alternatives --config editor </span><br><span class=\"line\">There are 4 choices for the alternative editor (providing /usr/bin/editor).</span><br><span class=\"line\">  Selection    Path                Priority   Status</span><br><span class=\"line\">------------------------------------------------------------</span><br><span class=\"line\">* 0            /bin/nano            40        auto mode</span><br><span class=\"line\">  1            /bin/ed             -100       manual mode</span><br><span class=\"line\">  2            /bin/nano            40        manual mode</span><br><span class=\"line\">  3            /usr/bin/vim.basic   30        manual mode</span><br><span class=\"line\">  4            /usr/bin/vim.tiny    10        manual mode</span><br><span class=\"line\">Press enter to keep the current choice[*], or type selection number:</span><br></pre></td></tr></table></figure>\n<p>输入<code>3</code>就可以了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ubuntu默认的编辑器为nano，例如执行如下命令时就会使用nano来打开<br><code>sudo visudo</code>或者<code>git commit --amend</code></p>\n<p>如果想要设置成默认使用自己习惯的vi，可以执行如下命令进行选择</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo update-alternatives --config editor </span><br><span class=\"line\">There are 4 choices for the alternative editor (providing /usr/bin/editor).</span><br><span class=\"line\">  Selection    Path                Priority   Status</span><br><span class=\"line\">------------------------------------------------------------</span><br><span class=\"line\">* 0            /bin/nano            40        auto mode</span><br><span class=\"line\">  1            /bin/ed             -100       manual mode</span><br><span class=\"line\">  2            /bin/nano            40        manual mode</span><br><span class=\"line\">  3            /usr/bin/vim.basic   30        manual mode</span><br><span class=\"line\">  4            /usr/bin/vim.tiny    10        manual mode</span><br><span class=\"line\">Press enter to keep the current choice[*], or type selection number:</span><br></pre></td></tr></table></figure>\n<p>输入<code>3</code>就可以了。</p>\n"},{"title":"vim-surround插件","date":"2017-01-12T05:08:49.000Z","_content":"\nSurround.vim is all about \"surroundings\": parentheses, brackets, quotes, XML tags, and more. The plugin provides mappings to easily delete, change and add such surroundings in pairs.\n\n# 1. 修改 cs原符号要修改的符号\n\n## 1.1 修改双引号为单引号 `cs\"'`\n\nIt's easiest to explain with examples. Press `cs\"'` inside\n\n```\n\"Hello world!\"\n```\nto change it to\n\n```\n'Hello world!'\n```\n\n## 1.2 修改单引号为html配对标签 `cs'<q>` 或者 `cs'<head>`\n\nNow press cs'<q> to change it to\n\n```\n<q>Hello world!</q>\n\n```\n\n## 1.3 修改配对标签为其他字符 `cst要改成的字符`\n\nTo go full circle, press cst\" to get\n```\n\"hello world!\"\n\n```\n\n\n\n# 2. 删除符号 `ds要删除的符号`\n\nTo remove the delimiters entirely, press ds\".\n```\nHello world!\n\n```\n\n# 3. 在文字的两侧添加字符 `ysiw要添加的字符`\n\nNow with the cursor on \"Hello\", press ysiw] (iw is a text object).\n\n```\n[Hello] world!\n\n```\nLet's make that braces and add some space (use } instead of { for no space): cs]{\n\nysiw{ 有空格    cs]{ 有空格\nysiw} 无空格    cs]} 无空格\n```\n{ Hello } world!\n\n```\n\n# 4. 对整行操作 `yss`\n\nNow wrap the entire line in parentheses with yssb or yss).\n\n```\n({ Hello } world!)\n\n```\n\n# 5. 删除符号 `ds删除的符号`\n\nRevert to the original text: ds{ds)\n```\nhello world!\n\n```\nEmphasize hello: ysiw<em>\n\n```\n<em>Hello</em> world!\n\n```\n\nFinally, let's try out visual mode. Press a capital V (for linewise visual mode) followed by `S<p class=\"important\">`.\n\n```\n<p class=\"important\">\n  <em>Hello</em> world!\n</p>\n\n```\n\nThis plugin is very powerful for HTML and XML editing, a niche which currently seems underfilled in Vim land. (As opposed to HTML/XML inserting, for which many plugins are available). Adding, changing, and removing pairs of tags simultaneously is a breeze.\n\nThe . command will work with ds, cs, and yss if you install repeat.vim.\n","source":"_posts/vim-surround插件.md","raw":"---\ntitle: vim-surround插件\ndate: 2017-01-12 13:08:49\ncategories: vim\ntags: vim插件 \n---\n\nSurround.vim is all about \"surroundings\": parentheses, brackets, quotes, XML tags, and more. The plugin provides mappings to easily delete, change and add such surroundings in pairs.\n\n# 1. 修改 cs原符号要修改的符号\n\n## 1.1 修改双引号为单引号 `cs\"'`\n\nIt's easiest to explain with examples. Press `cs\"'` inside\n\n```\n\"Hello world!\"\n```\nto change it to\n\n```\n'Hello world!'\n```\n\n## 1.2 修改单引号为html配对标签 `cs'<q>` 或者 `cs'<head>`\n\nNow press cs'<q> to change it to\n\n```\n<q>Hello world!</q>\n\n```\n\n## 1.3 修改配对标签为其他字符 `cst要改成的字符`\n\nTo go full circle, press cst\" to get\n```\n\"hello world!\"\n\n```\n\n\n\n# 2. 删除符号 `ds要删除的符号`\n\nTo remove the delimiters entirely, press ds\".\n```\nHello world!\n\n```\n\n# 3. 在文字的两侧添加字符 `ysiw要添加的字符`\n\nNow with the cursor on \"Hello\", press ysiw] (iw is a text object).\n\n```\n[Hello] world!\n\n```\nLet's make that braces and add some space (use } instead of { for no space): cs]{\n\nysiw{ 有空格    cs]{ 有空格\nysiw} 无空格    cs]} 无空格\n```\n{ Hello } world!\n\n```\n\n# 4. 对整行操作 `yss`\n\nNow wrap the entire line in parentheses with yssb or yss).\n\n```\n({ Hello } world!)\n\n```\n\n# 5. 删除符号 `ds删除的符号`\n\nRevert to the original text: ds{ds)\n```\nhello world!\n\n```\nEmphasize hello: ysiw<em>\n\n```\n<em>Hello</em> world!\n\n```\n\nFinally, let's try out visual mode. Press a capital V (for linewise visual mode) followed by `S<p class=\"important\">`.\n\n```\n<p class=\"important\">\n  <em>Hello</em> world!\n</p>\n\n```\n\nThis plugin is very powerful for HTML and XML editing, a niche which currently seems underfilled in Vim land. (As opposed to HTML/XML inserting, for which many plugins are available). Adding, changing, and removing pairs of tags simultaneously is a breeze.\n\nThe . command will work with ds, cs, and yss if you install repeat.vim.\n","slug":"vim-surround插件","published":1,"updated":"2017-01-12T05:25:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsx3001sx0s6d6mc1gow","content":"<p>Surround.vim is all about “surroundings”: parentheses, brackets, quotes, XML tags, and more. The plugin provides mappings to easily delete, change and add such surroundings in pairs.</p>\n<h1 id=\"1-修改-cs原符号要修改的符号\"><a href=\"#1-修改-cs原符号要修改的符号\" class=\"headerlink\" title=\"1. 修改 cs原符号要修改的符号\"></a>1. 修改 cs原符号要修改的符号</h1><h2 id=\"1-1-修改双引号为单引号-cs-quot-39\"><a href=\"#1-1-修改双引号为单引号-cs-quot-39\" class=\"headerlink\" title=\"1.1 修改双引号为单引号 cs&quot;&#39;\"></a>1.1 修改双引号为单引号 <code>cs&quot;&#39;</code></h2><p>It’s easiest to explain with examples. Press <code>cs&quot;&#39;</code> inside</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Hello world!&quot;</span><br></pre></td></tr></table></figure>\n<p>to change it to</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;Hello world!&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-修改单引号为html配对标签-cs-39-lt-q-gt-或者-cs-39-lt-head-gt\"><a href=\"#1-2-修改单引号为html配对标签-cs-39-lt-q-gt-或者-cs-39-lt-head-gt\" class=\"headerlink\" title=\"1.2 修改单引号为html配对标签 cs&#39;&lt;q&gt; 或者 cs&#39;&lt;head&gt;\"></a>1.2 修改单引号为html配对标签 <code>cs&#39;&lt;q&gt;</code> 或者 <code>cs&#39;&lt;head&gt;</code></h2><p>Now press cs’<q> to change it to</q></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;q&gt;Hello world!&lt;/q&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-修改配对标签为其他字符-cst要改成的字符\"><a href=\"#1-3-修改配对标签为其他字符-cst要改成的字符\" class=\"headerlink\" title=\"1.3 修改配对标签为其他字符 cst要改成的字符\"></a>1.3 修改配对标签为其他字符 <code>cst要改成的字符</code></h2><p>To go full circle, press cst” to get<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;hello world!&quot;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-删除符号-ds要删除的符号\"><a href=\"#2-删除符号-ds要删除的符号\" class=\"headerlink\" title=\"2. 删除符号 ds要删除的符号\"></a>2. 删除符号 <code>ds要删除的符号</code></h1><p>To remove the delimiters entirely, press ds”.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello world!</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"3-在文字的两侧添加字符-ysiw要添加的字符\"><a href=\"#3-在文字的两侧添加字符-ysiw要添加的字符\" class=\"headerlink\" title=\"3. 在文字的两侧添加字符 ysiw要添加的字符\"></a>3. 在文字的两侧添加字符 <code>ysiw要添加的字符</code></h1><p>Now with the cursor on “Hello”, press ysiw] (iw is a text object).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Hello] world!</span><br></pre></td></tr></table></figure>\n<p>Let’s make that braces and add some space (use } instead of { for no space): cs]{</p>\n<p>ysiw{ 有空格    cs]{ 有空格<br>ysiw} 无空格    cs]} 无空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; Hello &#125; world!</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"4-对整行操作-yss\"><a href=\"#4-对整行操作-yss\" class=\"headerlink\" title=\"4. 对整行操作 yss\"></a>4. 对整行操作 <code>yss</code></h1><p>Now wrap the entire line in parentheses with yssb or yss).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(&#123; Hello &#125; world!)</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-删除符号-ds删除的符号\"><a href=\"#5-删除符号-ds删除的符号\" class=\"headerlink\" title=\"5. 删除符号 ds删除的符号\"></a>5. 删除符号 <code>ds删除的符号</code></h1><p>Revert to the original text: ds{ds)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world!</span><br></pre></td></tr></table></figure></p>\n<p>Emphasize hello: ysiw<em></em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;em&gt;Hello&lt;/em&gt; world!</span><br></pre></td></tr></table></figure>\n<p>Finally, let’s try out visual mode. Press a capital V (for linewise visual mode) followed by <code>S&lt;p class=&quot;important&quot;&gt;</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p class=&quot;important&quot;&gt;</span><br><span class=\"line\">  &lt;em&gt;Hello&lt;/em&gt; world!</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>This plugin is very powerful for HTML and XML editing, a niche which currently seems underfilled in Vim land. (As opposed to HTML/XML inserting, for which many plugins are available). Adding, changing, and removing pairs of tags simultaneously is a breeze.</p>\n<p>The . command will work with ds, cs, and yss if you install repeat.vim.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Surround.vim is all about “surroundings”: parentheses, brackets, quotes, XML tags, and more. The plugin provides mappings to easily delete, change and add such surroundings in pairs.</p>\n<h1 id=\"1-修改-cs原符号要修改的符号\"><a href=\"#1-修改-cs原符号要修改的符号\" class=\"headerlink\" title=\"1. 修改 cs原符号要修改的符号\"></a>1. 修改 cs原符号要修改的符号</h1><h2 id=\"1-1-修改双引号为单引号-cs-quot-39\"><a href=\"#1-1-修改双引号为单引号-cs-quot-39\" class=\"headerlink\" title=\"1.1 修改双引号为单引号 cs&quot;&#39;\"></a>1.1 修改双引号为单引号 <code>cs&quot;&#39;</code></h2><p>It’s easiest to explain with examples. Press <code>cs&quot;&#39;</code> inside</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Hello world!&quot;</span><br></pre></td></tr></table></figure>\n<p>to change it to</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;Hello world!&apos;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-修改单引号为html配对标签-cs-39-lt-q-gt-或者-cs-39-lt-head-gt\"><a href=\"#1-2-修改单引号为html配对标签-cs-39-lt-q-gt-或者-cs-39-lt-head-gt\" class=\"headerlink\" title=\"1.2 修改单引号为html配对标签 cs&#39;&lt;q&gt; 或者 cs&#39;&lt;head&gt;\"></a>1.2 修改单引号为html配对标签 <code>cs&#39;&lt;q&gt;</code> 或者 <code>cs&#39;&lt;head&gt;</code></h2><p>Now press cs’<q> to change it to</q></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;q&gt;Hello world!&lt;/q&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-修改配对标签为其他字符-cst要改成的字符\"><a href=\"#1-3-修改配对标签为其他字符-cst要改成的字符\" class=\"headerlink\" title=\"1.3 修改配对标签为其他字符 cst要改成的字符\"></a>1.3 修改配对标签为其他字符 <code>cst要改成的字符</code></h2><p>To go full circle, press cst” to get<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;hello world!&quot;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-删除符号-ds要删除的符号\"><a href=\"#2-删除符号-ds要删除的符号\" class=\"headerlink\" title=\"2. 删除符号 ds要删除的符号\"></a>2. 删除符号 <code>ds要删除的符号</code></h1><p>To remove the delimiters entirely, press ds”.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello world!</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"3-在文字的两侧添加字符-ysiw要添加的字符\"><a href=\"#3-在文字的两侧添加字符-ysiw要添加的字符\" class=\"headerlink\" title=\"3. 在文字的两侧添加字符 ysiw要添加的字符\"></a>3. 在文字的两侧添加字符 <code>ysiw要添加的字符</code></h1><p>Now with the cursor on “Hello”, press ysiw] (iw is a text object).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Hello] world!</span><br></pre></td></tr></table></figure>\n<p>Let’s make that braces and add some space (use } instead of { for no space): cs]{</p>\n<p>ysiw{ 有空格    cs]{ 有空格<br>ysiw} 无空格    cs]} 无空格<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; Hello &#125; world!</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"4-对整行操作-yss\"><a href=\"#4-对整行操作-yss\" class=\"headerlink\" title=\"4. 对整行操作 yss\"></a>4. 对整行操作 <code>yss</code></h1><p>Now wrap the entire line in parentheses with yssb or yss).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(&#123; Hello &#125; world!)</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-删除符号-ds删除的符号\"><a href=\"#5-删除符号-ds删除的符号\" class=\"headerlink\" title=\"5. 删除符号 ds删除的符号\"></a>5. 删除符号 <code>ds删除的符号</code></h1><p>Revert to the original text: ds{ds)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world!</span><br></pre></td></tr></table></figure></p>\n<p>Emphasize hello: ysiw<em></em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;em&gt;Hello&lt;/em&gt; world!</span><br></pre></td></tr></table></figure>\n<p>Finally, let’s try out visual mode. Press a capital V (for linewise visual mode) followed by <code>S&lt;p class=&quot;important&quot;&gt;</code>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p class=&quot;important&quot;&gt;</span><br><span class=\"line\">  &lt;em&gt;Hello&lt;/em&gt; world!</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>This plugin is very powerful for HTML and XML editing, a niche which currently seems underfilled in Vim land. (As opposed to HTML/XML inserting, for which many plugins are available). Adding, changing, and removing pairs of tags simultaneously is a breeze.</p>\n<p>The . command will work with ds, cs, and yss if you install repeat.vim.</p>\n"},{"title":"git分支操作","date":"2017-01-12T08:42:22.000Z","_content":"\n## 1 新建分支\n\n### 1.1 新建本地分支\n\n```\ngit checkout -b <branchName>\n```\n\n### 1.2 推送本地分支到远程\n\n```\ngit push origin <localBranch>:<remoteBranch>\n```\n\n\n\n## 2 删除分支\n### 2.1 删除本地分支\n\n```\ngit branch -D <branchName>\n```\n\n### 2.2 删除远程分支\n```\ngit push origin --delete <branchName>\n```\n","source":"_posts/git-分支操作.md","raw":"---\ntitle: git分支操作\ndate: 2017-01-12 16:42:22\ncategories: git\ntags: git\n---\n\n## 1 新建分支\n\n### 1.1 新建本地分支\n\n```\ngit checkout -b <branchName>\n```\n\n### 1.2 推送本地分支到远程\n\n```\ngit push origin <localBranch>:<remoteBranch>\n```\n\n\n\n## 2 删除分支\n### 2.1 删除本地分支\n\n```\ngit branch -D <branchName>\n```\n\n### 2.2 删除远程分支\n```\ngit push origin --delete <branchName>\n```\n","slug":"git-分支操作","published":1,"updated":"2017-01-12T08:51:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsx4001ux0s6wy3fyj98","content":"<h2 id=\"1-新建分支\"><a href=\"#1-新建分支\" class=\"headerlink\" title=\"1 新建分支\"></a>1 新建分支</h2><h3 id=\"1-1-新建本地分支\"><a href=\"#1-1-新建本地分支\" class=\"headerlink\" title=\"1.1 新建本地分支\"></a>1.1 新建本地分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b &lt;branchName&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-推送本地分支到远程\"><a href=\"#1-2-推送本地分支到远程\" class=\"headerlink\" title=\"1.2 推送本地分支到远程\"></a>1.2 推送本地分支到远程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;localBranch&gt;:&lt;remoteBranch&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-删除分支\"><a href=\"#2-删除分支\" class=\"headerlink\" title=\"2 删除分支\"></a>2 删除分支</h2><h3 id=\"2-1-删除本地分支\"><a href=\"#2-1-删除本地分支\" class=\"headerlink\" title=\"2.1 删除本地分支\"></a>2.1 删除本地分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D &lt;branchName&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-删除远程分支\"><a href=\"#2-2-删除远程分支\" class=\"headerlink\" title=\"2.2 删除远程分支\"></a>2.2 删除远程分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete &lt;branchName&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-新建分支\"><a href=\"#1-新建分支\" class=\"headerlink\" title=\"1 新建分支\"></a>1 新建分支</h2><h3 id=\"1-1-新建本地分支\"><a href=\"#1-1-新建本地分支\" class=\"headerlink\" title=\"1.1 新建本地分支\"></a>1.1 新建本地分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b &lt;branchName&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-推送本地分支到远程\"><a href=\"#1-2-推送本地分支到远程\" class=\"headerlink\" title=\"1.2 推送本地分支到远程\"></a>1.2 推送本地分支到远程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;localBranch&gt;:&lt;remoteBranch&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-删除分支\"><a href=\"#2-删除分支\" class=\"headerlink\" title=\"2 删除分支\"></a>2 删除分支</h2><h3 id=\"2-1-删除本地分支\"><a href=\"#2-1-删除本地分支\" class=\"headerlink\" title=\"2.1 删除本地分支\"></a>2.1 删除本地分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D &lt;branchName&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-删除远程分支\"><a href=\"#2-2-删除远程分支\" class=\"headerlink\" title=\"2.2 删除远程分支\"></a>2.2 删除远程分支</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete &lt;branchName&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"修改最后一次commit","date":"2017-01-11T13:42:43.000Z","_content":"\n## 命令\n\n对于已经修改提交过的注释，如果需要修改，可以使用`git commit --amend`。\n\n## example\n\n在operation/bin里最新的提交就是 resolving the problem，我现在需要将其改为 resolving the problem for some errors\n\n在framework/base下输入git commit –amend,就会进入一个文本编辑界面（如下）\n```\n     resolving the problem\n     Change-Id: I7e7daffd2e8a5e65130629dc1c56dee5f5c4b5f7\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch shuai.lu_branch\n# Changes to be committed:\n#   (use \"git reset HEAD^1 <file>...\" to unstage)\n#\n#       modified:   operation/bin/alert\n#\n```\n修改commit描述，然后保存退出，这样注释就修改了，再重新push就可以了。\n","source":"_posts/修改最后一次commit.md","raw":"---\ntitle: 修改最后一次commit\ndate: 2017-01-11 21:42:43\ntags:\n---\n\n## 命令\n\n对于已经修改提交过的注释，如果需要修改，可以使用`git commit --amend`。\n\n## example\n\n在operation/bin里最新的提交就是 resolving the problem，我现在需要将其改为 resolving the problem for some errors\n\n在framework/base下输入git commit –amend,就会进入一个文本编辑界面（如下）\n```\n     resolving the problem\n     Change-Id: I7e7daffd2e8a5e65130629dc1c56dee5f5c4b5f7\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n# On branch shuai.lu_branch\n# Changes to be committed:\n#   (use \"git reset HEAD^1 <file>...\" to unstage)\n#\n#       modified:   operation/bin/alert\n#\n```\n修改commit描述，然后保存退出，这样注释就修改了，再重新push就可以了。\n","slug":"修改最后一次commit","published":1,"updated":"2017-01-12T01:18:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsxc001xx0s6jyhfdje2","content":"<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p>对于已经修改提交过的注释，如果需要修改，可以使用<code>git commit --amend</code>。</p>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><p>在operation/bin里最新的提交就是 resolving the problem，我现在需要将其改为 resolving the problem for some errors</p>\n<p>在framework/base下输入git commit –amend,就会进入一个文本编辑界面（如下）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     resolving the problem</span><br><span class=\"line\">     Change-Id: I7e7daffd2e8a5e65130629dc1c56dee5f5c4b5f7</span><br><span class=\"line\"># Please enter the commit message for your changes. Lines starting</span><br><span class=\"line\"># with &apos;#&apos; will be ignored, and an empty message aborts the commit.</span><br><span class=\"line\"># On branch shuai.lu_branch</span><br><span class=\"line\"># Changes to be committed:</span><br><span class=\"line\">#   (use &quot;git reset HEAD^1 &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">#</span><br><span class=\"line\">#       modified:   operation/bin/alert</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure></p>\n<p>修改commit描述，然后保存退出，这样注释就修改了，再重新push就可以了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><p>对于已经修改提交过的注释，如果需要修改，可以使用<code>git commit --amend</code>。</p>\n<h2 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h2><p>在operation/bin里最新的提交就是 resolving the problem，我现在需要将其改为 resolving the problem for some errors</p>\n<p>在framework/base下输入git commit –amend,就会进入一个文本编辑界面（如下）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     resolving the problem</span><br><span class=\"line\">     Change-Id: I7e7daffd2e8a5e65130629dc1c56dee5f5c4b5f7</span><br><span class=\"line\"># Please enter the commit message for your changes. Lines starting</span><br><span class=\"line\"># with &apos;#&apos; will be ignored, and an empty message aborts the commit.</span><br><span class=\"line\"># On branch shuai.lu_branch</span><br><span class=\"line\"># Changes to be committed:</span><br><span class=\"line\">#   (use &quot;git reset HEAD^1 &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">#</span><br><span class=\"line\">#       modified:   operation/bin/alert</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure></p>\n<p>修改commit描述，然后保存退出，这样注释就修改了，再重新push就可以了。</p>\n"},{"title":"python用户交互","date":"2017-03-20T14:05:30.000Z","_content":"\n## 1. raw_input()\nraw_input() 从标准输入中读取一个字符串\n```\nraw_input(...)\n    raw_input([prompt]) -> string\n    \n    Read a string from standard input.  The trailing newline is stripped.\n    If the user hits EOF (Unix: Ctl-D, Windows: Ctl-Z+Return), raise EOFError.\n    On Unix, GNU readline is used if enabled.  The prompt string, if given,\n    is printed without a trailing newline before reading.\n```\n\n例：\n```\nname = raw_input('Please input your name:')\nage = raw_input('age:')\nprint \"name: \" % name\nprint \"age:\" % age\n```\n\n```\nname = raw_input('Please input your name:')\nage = raw_input('age:')\njob = raw_input('Job:')\nsalary = raw_input('Salary:')\n\nprint '''\nPersonal information of %s:\n   Name : %s\n   Age  : %s     d只能输入数字 f只能输入浮点型\n    Job : %s\n  Salary: %s\n''' %(name, name, age, job, salary)\n```\n\n\n## 2. input()\ninput()\t输入的是什么就是什么格式\n\n```\ninput(...)\n    input([prompt]) -> value\n    \n    Equivalent to eval(raw_input(prompt)).\n```\n\n```\n>>> info = \"This var will be printed out ...\"\n>>> age = input('age:')\nage:info\n>>> print age\nThis var will be printed out ...\n```\n","source":"_posts/python用户交互.md","raw":"---\ntitle: python用户交互\ndate: 2017-03-20 22:05:30\ntags: python\n---\n\n## 1. raw_input()\nraw_input() 从标准输入中读取一个字符串\n```\nraw_input(...)\n    raw_input([prompt]) -> string\n    \n    Read a string from standard input.  The trailing newline is stripped.\n    If the user hits EOF (Unix: Ctl-D, Windows: Ctl-Z+Return), raise EOFError.\n    On Unix, GNU readline is used if enabled.  The prompt string, if given,\n    is printed without a trailing newline before reading.\n```\n\n例：\n```\nname = raw_input('Please input your name:')\nage = raw_input('age:')\nprint \"name: \" % name\nprint \"age:\" % age\n```\n\n```\nname = raw_input('Please input your name:')\nage = raw_input('age:')\njob = raw_input('Job:')\nsalary = raw_input('Salary:')\n\nprint '''\nPersonal information of %s:\n   Name : %s\n   Age  : %s     d只能输入数字 f只能输入浮点型\n    Job : %s\n  Salary: %s\n''' %(name, name, age, job, salary)\n```\n\n\n## 2. input()\ninput()\t输入的是什么就是什么格式\n\n```\ninput(...)\n    input([prompt]) -> value\n    \n    Equivalent to eval(raw_input(prompt)).\n```\n\n```\n>>> info = \"This var will be printed out ...\"\n>>> age = input('age:')\nage:info\n>>> print age\nThis var will be printed out ...\n```\n","slug":"python用户交互","published":1,"updated":"2017-03-21T13:16:24.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsxe001zx0s6xequ6i77","content":"<h2 id=\"1-raw-input\"><a href=\"#1-raw-input\" class=\"headerlink\" title=\"1. raw_input()\"></a>1. raw_input()</h2><p>raw_input() 从标准输入中读取一个字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_input(...)</span><br><span class=\"line\">    raw_input([prompt]) -&gt; string</span><br><span class=\"line\">    </span><br><span class=\"line\">    Read a string from standard input.  The trailing newline is stripped.</span><br><span class=\"line\">    If the user hits EOF (Unix: Ctl-D, Windows: Ctl-Z+Return), raise EOFError.</span><br><span class=\"line\">    On Unix, GNU readline is used if enabled.  The prompt string, if given,</span><br><span class=\"line\">    is printed without a trailing newline before reading.</span><br></pre></td></tr></table></figure></p>\n<p>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = raw_input(&apos;Please input your name:&apos;)</span><br><span class=\"line\">age = raw_input(&apos;age:&apos;)</span><br><span class=\"line\">print &quot;name: &quot; % name</span><br><span class=\"line\">print &quot;age:&quot; % age</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = raw_input(&apos;Please input your name:&apos;)</span><br><span class=\"line\">age = raw_input(&apos;age:&apos;)</span><br><span class=\"line\">job = raw_input(&apos;Job:&apos;)</span><br><span class=\"line\">salary = raw_input(&apos;Salary:&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">print &apos;&apos;&apos;</span><br><span class=\"line\">Personal information of %s:</span><br><span class=\"line\">   Name : %s</span><br><span class=\"line\">   Age  : %s     d只能输入数字 f只能输入浮点型</span><br><span class=\"line\">    Job : %s</span><br><span class=\"line\">  Salary: %s</span><br><span class=\"line\">&apos;&apos;&apos; %(name, name, age, job, salary)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-input\"><a href=\"#2-input\" class=\"headerlink\" title=\"2. input()\"></a>2. input()</h2><p>input()    输入的是什么就是什么格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input(...)</span><br><span class=\"line\">    input([prompt]) -&gt; value</span><br><span class=\"line\">    </span><br><span class=\"line\">    Equivalent to eval(raw_input(prompt)).</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; info = &quot;This var will be printed out ...&quot;</span><br><span class=\"line\">&gt;&gt;&gt; age = input(&apos;age:&apos;)</span><br><span class=\"line\">age:info</span><br><span class=\"line\">&gt;&gt;&gt; print age</span><br><span class=\"line\">This var will be printed out ...</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-raw-input\"><a href=\"#1-raw-input\" class=\"headerlink\" title=\"1. raw_input()\"></a>1. raw_input()</h2><p>raw_input() 从标准输入中读取一个字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_input(...)</span><br><span class=\"line\">    raw_input([prompt]) -&gt; string</span><br><span class=\"line\">    </span><br><span class=\"line\">    Read a string from standard input.  The trailing newline is stripped.</span><br><span class=\"line\">    If the user hits EOF (Unix: Ctl-D, Windows: Ctl-Z+Return), raise EOFError.</span><br><span class=\"line\">    On Unix, GNU readline is used if enabled.  The prompt string, if given,</span><br><span class=\"line\">    is printed without a trailing newline before reading.</span><br></pre></td></tr></table></figure></p>\n<p>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = raw_input(&apos;Please input your name:&apos;)</span><br><span class=\"line\">age = raw_input(&apos;age:&apos;)</span><br><span class=\"line\">print &quot;name: &quot; % name</span><br><span class=\"line\">print &quot;age:&quot; % age</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = raw_input(&apos;Please input your name:&apos;)</span><br><span class=\"line\">age = raw_input(&apos;age:&apos;)</span><br><span class=\"line\">job = raw_input(&apos;Job:&apos;)</span><br><span class=\"line\">salary = raw_input(&apos;Salary:&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">print &apos;&apos;&apos;</span><br><span class=\"line\">Personal information of %s:</span><br><span class=\"line\">   Name : %s</span><br><span class=\"line\">   Age  : %s     d只能输入数字 f只能输入浮点型</span><br><span class=\"line\">    Job : %s</span><br><span class=\"line\">  Salary: %s</span><br><span class=\"line\">&apos;&apos;&apos; %(name, name, age, job, salary)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-input\"><a href=\"#2-input\" class=\"headerlink\" title=\"2. input()\"></a>2. input()</h2><p>input()    输入的是什么就是什么格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">input(...)</span><br><span class=\"line\">    input([prompt]) -&gt; value</span><br><span class=\"line\">    </span><br><span class=\"line\">    Equivalent to eval(raw_input(prompt)).</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; info = &quot;This var will be printed out ...&quot;</span><br><span class=\"line\">&gt;&gt;&gt; age = input(&apos;age:&apos;)</span><br><span class=\"line\">age:info</span><br><span class=\"line\">&gt;&gt;&gt; print age</span><br><span class=\"line\">This var will be printed out ...</span><br></pre></td></tr></table></figure>\n"},{"title":"shell style guide","date":"2017-01-12T06:06:39.000Z","_content":"\n# Shell Style Guide\n\n\n\n## <span id=\"contents\">Contents</span>\n\n1.[Shell Files and Interpreter Invocation](#a)\n\n- 1.1 File Extensions\n\n- 1.2 SUID/SGID  \n\n\n\n2.[Environment](#b) \n\n- 2.1 STDOUT vs STDERR  \n\n\n\n3.[Comments](#c)\n\n- 3.1 File Header \n\n- 3.2 Function Comments\n\n- 3.3 Implementation Comments\n\n- 3.4 TODO Comments  \n\n\n\n4.[Formatting](#d)\n\n- 4.1 Indentation \n\n- 4.2 Line Length and Long Strings\n\n- 4.3 Pipelines | Loops\n\n- 4.4 Case statement\n\n- 4.5 Variable expansion\n\n- 4.6 Quoting  \n\n\n\n5.[Features and Bugs](#e) \n\n- 5.1 Command Substitution\n\n- 5.2 Test, [ and [[ \n\n- 5.3 Testing Strings Wildcard Expansion of Filenames \n\n- 5.4 Eval\n\n- 5.5 Pipes to While  \n\n\n\n6.[Naming Conventions](#f)\n\n- 6.1 Function Names \n\n- 6.2 Variable Names \n\n- 6.3 Constants and Environment Variable Names \n\n- 6.4 Source Filenames \n\n- 6.5 Read-only Variables \n\n- 6.7 Use Local Variables \n\n- 6.8 Function Location \n\n- 6.9 main  \n\n\n\n7.[Calling Commands](#g)\n\n- 7.1 Checking Return Values \n\n- 7.2 Builtin Commands vs. External Commands  \n\n\n\n8.[Conclusion](#h)\n\n## Which Shell to Use\n\n**Bash** is the only shell scripting language permitted for executables.  \n\nExecutables must start with **#! /bin/bash** and a minimum number of flags.\n\nUse **set** to set shell options so that calling your script as **bash** ***script_name*** does not break its functionality.\n\n\n\nRestricting all executable shell scripts to bash gives us a consistent shell language that's installed on all our machines.\n\n\n\nThe only exception to this is where you're forced to by whatever you're coding for.\n\nOne example of this is Solaris SVR4 packages which require plain Bourne shell for any scripts.\n\n\n\n## When to use Shell\n\nShell should only be used for small utilities or simple wrapper scripts.  \n\nWhile shell scripting isn't a development language, it is used for writing various utility scripts throughout Google.   This style guide is more a recognition of its use rather than a suggestion that it be used for widespread deployment.\n\n\n\nSome guidelines:\n\n- If you're mostly calling other utilities and are doing relatively little data manipulation, shell is an acceptable choice for the task.\n\n- If performance matters, use something other than shell.\n\n- If you find you need to use arrays for anything more than assignment of **${PIPESTATUS}**, you should use Python.\n\n- If you are writing a script that is more than 100 lines long, you should probably be writing it in Python instead. Bear in mind that scripts grow. Rewrite your script in another language early to avoid a time-consuming rewrite at a later date.  \n\n\n\n**[Go Contents](#contents)**\n\n## 1.  <span id=\"a\">Shell Files and Interpreter Invocation</span>\n\n\n\n### 1.1 File Extensions\n\n\n\nExecutables should have no extension (strongly preferred) or a **.sh** extension. Libraries must have a **.sh** extension and should not be executable.\n\nIt is not necessary to know what language a program is written in when executing it and shell doesn't require an extension so we prefer not to use one for executables.\n\n\n\nHowever, for libraries it's important to know what language it is and sometimes there's a need to have similar libraries in different languages. This allows library files with identical purposes but different languages to be identically named except for the language-specific suffix.\n\n\n\n### 1.2 SUID/SGID\n\n\n\nSUID and SGID are forbidden on shell scripts.\n\nThere are too many security issues with shell that make it nearly impossible to secure sufficiently to allow SUID/SGID. While bash does make it difficult to run SUID, it's still possible on some platforms which is why we're being explicit about banning it.\n\n\n\nUse **sudo** to provide elevated access if you need it.\n\n**[Go Contents](#contents)**\n\n## 2. <span id=\"b\">Environment</span>\n\n\n\n### 2.1 STDOUT vs STDERR\n\n\n\nAll error messages should go to **STDERR**.\n\nThis makes it easier to separate normal status from actual issues.\n\nA function to print out error messages along with other status information is recommended.\n\n```\n\nerr() {\n\n  echo \"[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@\" >&2\n\n}\n\n\n\nif ! do_something; then\n\n  err \"Unable to do_something\"\n\n  exit \"${E_DID_NOTHING}\"\n\nfi\n\n```\n\n**[Go Contents](#contents)**\n\n## 3. <span id=\"c\">Comments</span>\n\n### 3.1 File Header\n\nStart each file with a description of its contents.\n\nEvery file must have a top-level comment including a brief overview of its contents. A copyright notice and author information are optional.\n\n\n\n***Example:***\n\n```\n\n#!/bin/bash\n\n#\n\n# Perform hot backups of Oracle databases.\n\n```\n\n\n\n### 3.2 Function Comments\n\n\n\nAny function that is not both obvious and short must be commented. Any function in a library must be commented regardless of length or complexity.\n\nIt should be possible for someone else to learn how to use your program or to use a function in your library by reading the comments (and self-help, if provided) without reading the code.\n\n\n\nAll function comments should contain:\n\n- Description of the function\n\n- Global variables used and modified\n\n- Arguments taken\n\n- Returned values other than the default exit status of the last command run\n\n\n\n***Example:***\n\n```\n\n#!/bin/bash\n\n#\n\n# Perform hot backups of Oracle databases.\n\n\n\nexport PATH='/usr/xpg4/bin:/usr/bin:/opt/csw/bin:/opt/goog/bin'\n\n\n\n#######################################\n\n# Cleanup files from the backup dir\n\n# Globals:\n\n#   BACKUP_DIR\n\n#   ORACLE_SID\n\n# Arguments:\n\n#   None\n\n# Returns:\n\n#   None\n\n#######################################\n\ncleanup() {\n\n  ...\n\n}\n\n```\n\n\n\n### 3.3 Implementation Comments\n\n\n\nComment tricky, non-obvious, interesting or important parts of your code.\n\nThis follows general Google coding comment practice. Don't comment everything. If there's a complex algorithm or you're doing something out of the ordinary, put a short comment in.\n\n\n\n### 3.4 TODO Comments\n\n\n\nUse **TODO** comments for code that is temporary, a short-term solution, or good-enough but not perfect.\n\nThis matches the convention in the **C++ Guide**.\n\n\n\n**TODOs** should include the string **TODO** in all caps, followed by your username in parentheses. A colon is optional. It's preferable to put a bug/ticket number next to the **TODO** item as well.\n\n\n\n***Examples:***\n\n```\n\n# TODO(mrmonkey): Handle the unlikely edge cases (bug ####)\n\n```\n\n**[Go Contents](#contents)**\n\n## 4. <span id=\"d\">Formatting</span>\n\nWhile you should follow the style that's already there for files that you're modifying, the following are required for any new code.\n\n\n\n### 4.1 Indentation\n\nIndent 2 spaces. No tabs.\n\nUse blank lines between blocks to improve readability. Indentation is two spaces. Whatever you do, don't use tabs. For existing files, stay faithful to the existing indentation.\n\n\n\n### 4.2 Line Length and Long Strings\n\nMaximum line length is 80 characters.\n\nIf you have to write strings that are longer than 80 characters, this should be done with a here document or an embedded newline if possible. Literal strings that have to be longer than 80 chars and can't sensibly be split are ok, but it's strongly preferred to find a way to make it shorter.\n\n```\n\n# DO use 'here document's\n\ncat <<END;\n\nI am an exceptionally long\n\nstring.\n\nEND\n\n\n\n# Embedded newlines are ok too\n\nlong_string=\"I am an exceptionally\n\n  long string.\"\n\n```\n\n### 4.3 Pipelines\n\n\n\nPipelines should be split one per line if they don't all fit on one line.\n\nIf a pipeline all fits on one line, it should be on one line.\n\nIf not, it should be split at one pipe segment per line with the pipe on the newline and a 2 space indent for the next section of the pipe. This applies to a chain of commands combined using '**|**' as well as to logical compounds using '**||**' and '**&&**'.\n\n```\n\n# All fits on one line\n\ncommand1 | command2\n\n\n\n# Long commands\n\ncommand1 \\\n\n  | command2 \\\n\n  | command3 \\\n\n  | command4\n\n```\n\n### 4.4 Loops\n\nPut **; do** and **; then** on the same line as the **while**, **for** or **if**.\n\nLoops in shell are a bit different, but we follow the same principles as with braces when declaring functions.\n\nThat is: **; then** and **; do** should be <font color=\"red\">on the same line</font> as the **if/for/while**.**else** should be on its own line and closing statements should be on their own line vertically aligned with the opening statement.\n\n\n\n***Example:***\n\n```\n\nfor dir in ${dirs_to_cleanup}; do\n\n  if [[ -d \"${dir}/${ORACLE_SID}\" ]]; then\n\n    log_date \"Cleaning up old files in ${dir}/${ORACLE_SID}\"\n\n    rm \"${dir}/${ORACLE_SID}/\"*\n\n    if [[ \"$?\" -ne 0 ]]; then\n\n      error_message\n\n    fi\n\n  else\n\n    mkdir -p \"${dir}/${ORACLE_SID}\"\n\n    if [[ \"$?\" -ne 0 ]]; then\n\n      error_message\n\n    fi\n\n  fi\n\ndone\n\n```\n\n### 4.5 Case statement\n\n- Indent alternatives by 2 spaces.\n\n- A one-line alternative needs a space after the close parenthesis of the pattern and before the **;;**.\n\n- Long or multi-command alternatives should be split over multiple lines with the pattern, actions, and **;;** on separate lines.\n\n\n\nThe matching expressions are indented one level from the '**case**' and '**esac**'. Multiline actions are indented another level. In general, there is no need to quote match expressions. Pattern expressions should not be preceded by an open parenthesis. Avoid the **;&** and **;;&** notations.\n\n```\n\ncase \"${expression}\" in\n\n  a)\n\n    variable=\"...\"\n\n    some_command \"${variable}\" \"${other_expr}\" ...\n\n    ;;\n\n  absolute)\n\n    actions=\"relative\"\n\n    another_command \"${actions}\" \"${other_expr}\" ...\n\n    ;;\n\n  *)\n\n    error \"Unexpected expression '${expression}'\"\n\n    ;;\n\nesac\n\n```\n\nSimple commands may be put on the same line as the pattern and **;;** as long as the expression remains readable. This is often appropriate for single-letter option processing. When the actions don't fit on a single line, put the pattern on a line on its own, then the actions, then **;;**; also <font color=\"red\"> on a line of its own</font>. When on the same line as the actions, use a space after the close parenthesis of the pattern and another before the **;;**.\n\n```\n\nverbose='false'\n\naflag=''\n\nbflag=''\n\nfiles=''\n\nwhile getopts 'abf:v' flag; do\n\n  case \"${flag}\" in\n\n    a) aflag='true' ;;\n\n    b) bflag='true' ;;\n\n    f) files=\"${OPTARG}\" ;;\n\n    v) verbose='true' ;;\n\n    *) error \"Unexpected option ${flag}\" ;;\n\n  esac\n\ndone\n\n```\n\n### 4.6 Variable expansion\n\nIn order of precedence: Stay consistent with what you find; quote your variables; prefer \"**${var}**\" over \"**$var**\", but see details.\n\nThese are meant to be guidelines, as the topic seems too controversial for a mandatory regulation.\n\nThey are listed in order of precedence.\n\n\n\n1. Stay consistent with what you find for existing code.\n\n1. Quote variables, see Quoting section below.\n\n1. Don't brace-quote single character shell specials / positional parameters, unless strictly necessary or avoiding deep confusion.\n\nPrefer brace-quoting all other variables.\n\n\n\n```\n\n# Section of recommended cases.\n\n# Preferred style for 'special' variables:\n\necho \"Positional: $1\" \"$5\" \"$3\"\n\necho \"Specials: !=$!, -=$-, _=$_. ?=$?, #=$# *=$* @=$@ \\$=$$ ...\"\n\n\n\n# Braces necessary:\n\necho \"many parameters: ${10}\"\n\n\n\n# Braces avoiding confusion:\n\n# Output is \"a0b0c0\"\n\nset -- a b c\n\necho \"${1}0${2}0${3}0\"\n\n\n\n# Preferred style for other variables:\n\necho \"PATH=${PATH}, PWD=${PWD}, mine=${some_var}\"\n\nwhile read f; do\n\n  echo \"file=${f}\"\n\ndone < <(ls -l /tmp)\n\n\n\n# Section of discouraged cases\n\n\n\n# Unquoted vars, unbraced vars, brace-quoted single letter\n\n# shell specials.\n\necho a=$avar \"b=$bvar\" \"PID=${$}\" \"${1}\"\n\n\n\n# Confusing use: this is expanded as \"${1}0${2}0${3}0\",\n\n# not \"${10}${20}${30}\n\nset -- a b c\n\necho \"$10$20$30\"\n\n```\n\n### 4.7 Quoting\n\n\n\n- Always quote strings containing variables, command substitutions, spaces or shell meta characters, unless careful unquoted expansion is required.\n\n- Prefer quoting strings that are \"words\" (as opposed to command options or path names).\n\n- Never quote ***literal*** integers.\n\n- Be aware of the quoting rules for pattern matches in [[.\n\n- Use \"**$@**\" unless you have a specific reason to use **$***.\n\n\n\n```\n\n# 'Single' quotes indicate that no substitution is desired.\n\n# \"Double\" quotes indicate that substitution is required/tolerated.\n\n\n\n# Simple examples\n\n# \"quote command substitutions\"\n\nflag=\"$(some_command and its args \"$@\" 'quoted separately')\"\n\n\n\n# \"quote variables\"\n\necho \"${flag}\"\n\n\n\n# \"never quote literal integers\"\n\nvalue=32\n\n# \"quote command substitutions\", even when you expect integers\n\nnumber=\"$(generate_number)\"\n\n\n\n# \"prefer quoting words\", not compulsory\n\nreadonly USE_INTEGER='true'\n\n\n\n# \"quote shell meta characters\"\n\necho 'Hello stranger, and well met. Earn lots of $$$'\n\necho \"Process $$: Done making \\$\\$\\$.\"\n\n\n\n# \"command options or path names\"\n\n# ($1 is assumed to contain a value here)\n\ngrep -li Hugo /dev/null \"$1\"\n\n\n\n# Less simple examples\n\n# \"quote variables, unless proven false\": ccs might be empty\n\ngit send-email --to \"${reviewers}\" ${ccs:+\"--cc\" \"${ccs}\"}\n\n\n\n# Positional parameter precautions: $1 might be unset\n\n# Single quotes leave regex as-is.\n\ngrep -cP '([Ss]pecial|\\|?characters*)$' ${1:+\"$1\"}\n\n\n\n# For passing on arguments,\n\n# \"$@\" is right almost everytime, and\n\n# $* is wrong almost everytime:\n\n#\n\n# * $* and $@ will split on spaces, clobbering up arguments\n\n#   that contain spaces and dropping empty strings;\n\n# * \"$@\" will retain arguments as-is, so no args\n\n#   provided will result in no args being passed on;\n\n#   This is in most cases what you want to use for passing\n\n#   on arguments.\n\n# * \"$*\" expands to one argument, with all args joined\n\n#   by (usually) spaces,\n\n#   so no args provided will result in one empty string\n\n#   being passed on.\n\n# (Consult 'man bash' for the nit-grits ;-)\n\n\n\nset -- 1 \"2 two\" \"3 three tres\"; echo $# ; set -- \"$*\"; echo \"$#, $@\")\n\nset -- 1 \"2 two\" \"3 three tres\"; echo $# ; set -- \"$@\"; echo \"$#, $@\")\n\n```\n\n**[Go Contents](#contents)**\n\n## 5. <span id=\"e\">Features and Bugs</span>\n\n\n\n### 5.1 Command Substitution\n\n\n\nUse **$(command)** instead of backticks.\n\nNested backticks require escaping the inner ones with **\\.** The **$(command)** format doesn't change when nested and is easier to read.\n\n\n\n***Example:***\n\n```\n\n# This is preferred:\n\nvar=\"$(command \"$(command1)\")\"\n\n\n\n# This is not:\n\nvar=\"`command \\`command1\\``\"\n\n```\n\n\n\n### 5.2 Test, [ and [[\n\n\n\n**[[ ... ]]** is preferred over **[**, **test** and **/usr/bin/[**.\n\n**[[ ... ]]** reduces errors as no pathname expansion or word splitting takes place between **[[ and ]]** and **[[ ... ]]** allows for regular expression matching where [ ... ] does not.\n\n\n\n```\n\n# This ensures the string on the left is made up of characters in the\n\n# alnum character class followed by the string name.\n\n# Note that the RHS should not be quoted here.\n\n# For the gory details, see\n\n# E14 at http://tiswww.case.edu/php/chet/bash/FAQ\n\nif [[ \"filename\" =~ ^[[:alnum:]]+name ]]; then\n\n  echo \"Match\"\n\nfi\n\n\n\n# This matches the exact pattern \"f*\" (Does not match in this case)\n\nif [[ \"filename\" == \"f*\" ]]; then\n\n  echo \"Match\"\n\nfi\n\n\n\n# This gives a \"too many arguments\" error as f* is expanded to the\n\n# contents of the current directory\n\nif [ \"filename\" == f* ]; then\n\n  echo \"Match\"\n\nfi\n\n```\n\n\n\n### 5.3 Testing Strings\n\n\n\nUse quotes rather than filler characters where possible.\n\nBash is smart enough to deal with an empty string in a test. So, given that the code is much easier to read, use tests for empty/non-empty strings or empty strings rather than filler characters.\n\n\n\n```\n\n# Do this:\n\nif [[ \"${my_var}\" = \"some_string\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# -z (string length is zero) and -n (string length is not zero) are\n\n# preferred over testing for an empty string\n\nif [[ -z \"${my_var}\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# This is OK (ensure quotes on the empty side), but not preferred:\n\nif [[ \"${my_var}\" = \"\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# Not this:\n\nif [[ \"${my_var}X\" = \"some_stringX\" ]]; then\n\n  do_something\n\nfi\n\n```\n\nTo avoid confusion about what you're testing for, explicitly use **-z** or **-n**.\n\n```\n\n# Use this\n\nif [[ -n \"${my_var}\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# Instead of this as errors can occur if ${my_var} expands to a test\n\n# flag\n\nif [[ \"${my_var}\" ]]; then\n\n  do_something\n\nfi\n\n```\n\n\n\n### 5.4 Wildcard Expansion of Filenames\n\n\n\nUse an explicit path when doing wildcard expansion of filenames.\n\nAs filenames can begin with a -, it's a lot safer to expand wildcards with ./* instead of * .\n\n\n\n```\n\n# Here's the contents of the directory:\n\n# -f  -r  somedir  somefile\n\n\n\n# This deletes almost everything in the directory by force\n\npsa@bilby$ rm -v *\n\nremoved directory: `somedir'\n\nremoved `somefile'\n\n\n\n# As opposed to:\n\npsa@bilby$ rm -v ./*\n\nremoved `./-f'\n\nremoved `./-r'\n\nrm: cannot remove `./somedir': Is a directory\n\nremoved `./somefile'\n\n```\n\n\n\n### 5.5 Eval\n\n**eval** should be avoided.  \n\nEval munges the input when used for assignment to variables and can set variables without making it possible to check what those variables were.\n\n```\n\n# What does this set?\n\n# Did it succeed? In part or whole?\n\neval $(set_my_variables)\n\n\n\n# What happens if one of the returned values has a space in it?\n\nvariable=\"$(eval some_function)\"\n\n```\n\n\n\n### 5.6 Pipes to While\n\n\n\nUse process substitution or for loops in preference to piping to while. Variables modified in a while loop do not propagate to the parent because the loop's commands run in a subshell.\n\nThe implicit subshell in a pipe to while can make it difficult to track down bugs.\n\n```\n\nlast_line='NULL'\n\nyour_command | while read line; do\n\n  last_line=\"${line}\"\n\ndone\n\n\n\n# This will output 'NULL'\n\necho \"${last_line}\"\n\n```\n\nUse a for loop if you are confident that the input will not contain spaces or special characters (usually, this means not user input).\n\n```\n\ntotal=0\n\n# Only do this if there are no spaces in return values.\n\nfor value in $(command); do\n\n  total+=\"${value}\"\n\ndone\n\n```\n\nUsing process substitution allows redirecting output but puts the commands in an explicit subshell rather than the implicit subshell that bash creates for the while loop.\n\n```\n\ntotal=0\n\nlast_file=\n\nwhile read count filename; do\n\n  total+=\"${count}\"\n\n  last_file=\"${filename}\"\n\ndone < <(your_command | uniq -c)\n\n\n\n# This will output the second field of the last line of output from\n\n# the command.\n\necho \"Total = ${total}\"\n\necho \"Last one = ${last_file}\"\n\n```\n\nUse while loops where it is not necessary to pass complex results to the parent shell - this is typically where some more complex \"parsing\" is required. Beware that simple examples are probably more easily done with a tool such as awk. This may also be useful where you specifically don't want to change the parent scope variables.\n\n```\n\n# Trivial implementation of awk expression:\n\n#   awk '$3 == \"nfs\" { print $2 \" maps to \" $1 }' /proc/mounts\n\ncat /proc/mounts | while read src dest type opts rest; do\n\n  if [[ ${type} == \"nfs\" ]]; then\n\n    echo \"NFS ${dest} maps to ${src}\"\n\n  fi\n\ndone\n\n```\n\n**[Go Contents](#contents)**\n\n## 6. <span id=\"f\">Naming Conventions</span>\n\n\n\n### 6.1 Function Names\n\nLower-case, with underscores to separate words. Separate libraries with **::**. Parentheses are required after the function name. The keyword ***function*** is optional, but must be used consistently throughout a project.\n\nIf you're writing single functions, use lowercase and separate words with underscore. If you're writing a package, separate package names with **::**. Braces must be on the same line as the function name (as with other languages at Google) and no space between the function name and the parenthesis.\n\n```\n\n# Single function\n\nmy_func() {\n\n  ...\n\n}\n\n\n\n# Part of a package\n\nmypackage::my_func() {\n\n  ...\n\n}\n\n```\n\n\n\nThe **function** keyword is extraneous when \"()\" is present after the function name, but enhances quick identification of functions.\n\n\n\n### 6.2 Variable Names\n\n\n\nAs for function names.\n\nVariables names for loops should be similarly named for any variable you're looping through.\n\n```\n\nfor zone in ${zones}; do\n\n  something_with \"${zone}\"\n\ndone\n\n```\n\n\n\n### 6.3 Constants and Environment Variable Names\n\n\n\nAll caps, separated with underscores, declared at the top of the file.\n\nConstants and anything exported to the environment should be capitalized.  \n\n```\n\n# Constant\n\nreadonly PATH_TO_FILES='/some/path'  \n\n\n\n# Both constant and environment\n\ndeclare -xr ORACLE_SID='PROD'\n\n```\n\n\n\nSome things become constant at their first setting (for example, via getopts). Thus, it's OK to set a constant in getopts or based on a condition, but it should be made readonly immediately afterwards. Note that **declare** doesn't operate on global variables within functions, so **readonly** or **export** is recommended instead.\n\n```\n\nVERBOSE='false'\n\nwhile getopts 'v' flag; do\n\n  case \"${flag}\" in\n\n    v) VERBOSE='true' ;;\n\n  esac\n\ndone\n\nreadonly VERBOSE\n\n```\n\n### 6.4 Source Filenames\n\n\n\nLowercase, with underscores to separate words if desired.\n\nThis is for consistency with other code styles in Google: **maketemplate** or **make_template** but <font color=\"red\">not</font> **make-template**.\n\n\n\n### 6.5 Read-only Variables\n\n\n\nUse **readonly** or **declare -r** to ensure they're read only.\n\nAs globals are widely used in shell, it's important to catch errors when working with them. When you declare a variable that is meant to be read-only, make this explicit.\n\n```\n\nzip_version=\"$(dpkg --status zip | grep Version: | cut -d ' ' -f 2)\"\n\nif [[ -z \"${zip_version}\" ]]; then\n\n  error_message\n\nelse\n\n  readonly zip_version\n\nfi\n\n```\n\n### 6.6 Use Local Variables\n\n\n\nDeclare function-specific variables with **local**. Declaration and assignment should be on different lines.\n\nEnsure that local variables are only seen inside a function and its children by using **local** when declaring them. This avoids polluting the global name space and inadvertently setting variables that may have significance outside the function.\n\n\n\nDeclaration and assignment must be separate statements when the assignment value is provided by a command substitution; as the 'local' builtin does not propagate the exit code from the command substitution.\n\n```\n\nmy_func2() {\n\n  local name=\"$1\"\n\n\n\n  # Separate lines for declaration and assignment:\n\n  local my_var\n\n  my_var=\"$(my_func)\" || return\n\n\n\n  # DO NOT do this: $? contains the exit code of 'local', not my_func\n\n  local my_var=\"$(my_func)\"\n\n  [[ $? -eq 0 ]] || return\n\n\n\n  ...\n\n}  \n\n\n\n```\n\n### 6.7 Function Location\n\nPut all functions together in the file just below constants. Don't hide executable code between functions.\n\nIf you've got functions, put them all together near the top of the file. Only includes, **set** statements and setting constants may be done before declaring functions.\n\n\n\nDon't hide executable code between functions. Doing so makes the code difficult to follow and results in nasty surprises when debugging.\n\n\n\n### 6.8 main\n\n\n\nA function called ***main*** is required for scripts long enough to contain at least one other function.\n\nIn order to easily find the start of the program, put the main program in a function called **main** as the bottom most function. This provides consistency with the rest of the code base as well as allowing you to define more variables as **local** (which can't be done if the main code is not a function). The last non-comment line in the file should be a call to **main**:\n\n```\n\nmain \"$@\"\n\n```\n\n\n\nObviously, for short scripts where it's just a linear flow, **main** is overkill and so is not required.\n\n\n\n## 7. <span id=\"g\">Calling Commands</span>\n\n\n\n### 7.1 Checking Return Values\n\nAlways check return values and give informative return values.\n\nFor unpiped commands, use **$?** or check directly via an **if** statement to keep it simple.\n\n\n\nExample:\n\n```\n\nif ! mv \"${file_list}\" \"${dest_dir}/\" ; then\n\n  echo \"Unable to move ${file_list} to ${dest_dir}\" >&2\n\n  exit \"${E_BAD_MOVE}\"\n\nfi\n\n\n\n# Or\n\nmv \"${file_list}\" \"${dest_dir}/\"\n\nif [[ \"$?\" -ne 0 ]]; then\n\n  echo \"Unable to move ${file_list} to ${dest_dir}\" >&2\n\n  exit \"${E_BAD_MOVE}\"\n\nfi\n\n```\n\nBash also has the **PIPESTATUS** variable that allows checking of the return code from all parts of a pipe. If it's only necessary to check success or failure of the whole pipe, then the following is acceptable:\n\n```\n\ntar -cf - ./* | ( cd \"${dir}\" && tar -xf - )\n\nif [[ \"${PIPESTATUS[0]}\" -ne 0 || \"${PIPESTATUS[1]}\" -ne 0 ]]; then\n\n  echo \"Unable to tar files to ${dir}\" >&2\n\nfi\n\n```\n\nHowever, as **PIPESTATUS** will be overwritten as soon as you do any other command, if you need to act differently on errors based on where it happened in the pipe, you'll need to assign **PIPESTATUS** to another variable immediately after running the command (don't forget that [ is a command and will wipe out **PIPESTATUS**).\n\n```\n\ntar -cf - ./* | ( cd \"${DIR}\" && tar -xf - )\n\nreturn_codes=(${PIPESTATUS[*]})\n\nif [[ \"${return_codes[0]}\" -ne 0 ]]; then\n\n  do_something\n\nfi\n\nif [[ \"${return_codes[1]}\" -ne 0 ]]; then\n\n  do_something_else\n\nfi\n\n\n\n```\n\n\n\n### 7.2 Builtin Commands vs. External Commands\n\n\n\nGiven the choice between invoking a shell builtin and invoking a separate process, choose the builtin.\n\nWe prefer the use of builtins such as the Parameter Expansion functions in **bash(1)** as it's more robust and portable (especially when compared to things like sed).  \n\n\n\n ***Example:***\n\n```\n\n# Prefer this:\n\naddition=$((${X} + ${Y}))\n\nsubstitution=\"${string/#foo/bar}\"\n\n\n\n# Instead of this:\n\naddition=\"$(expr ${X} + ${Y})\"\n\nsubstitution=\"$(echo \"${string}\" | sed -e 's/^foo/bar/')\"\n\n```\n\n**[Go Contents](#contents)**\n\n## 8. <span id=\"h\">Conclusion</span>\n\nUse common sense and **BE CONSISTENT**.\n\nPlease take a few minutes to read the Parting Words section at the bottom of the **C++ Guide**.\n\n\n\n**[Go Contents](#contents)**\n","source":"_posts/shell-style-guide.md","raw":"---\ntitle: shell style guide\ndate: 2017-01-12 14:06:39\ncategories: shell\ntags: shell\n---\n\n# Shell Style Guide\n\n\n\n## <span id=\"contents\">Contents</span>\n\n1.[Shell Files and Interpreter Invocation](#a)\n\n- 1.1 File Extensions\n\n- 1.2 SUID/SGID  \n\n\n\n2.[Environment](#b) \n\n- 2.1 STDOUT vs STDERR  \n\n\n\n3.[Comments](#c)\n\n- 3.1 File Header \n\n- 3.2 Function Comments\n\n- 3.3 Implementation Comments\n\n- 3.4 TODO Comments  \n\n\n\n4.[Formatting](#d)\n\n- 4.1 Indentation \n\n- 4.2 Line Length and Long Strings\n\n- 4.3 Pipelines | Loops\n\n- 4.4 Case statement\n\n- 4.5 Variable expansion\n\n- 4.6 Quoting  \n\n\n\n5.[Features and Bugs](#e) \n\n- 5.1 Command Substitution\n\n- 5.2 Test, [ and [[ \n\n- 5.3 Testing Strings Wildcard Expansion of Filenames \n\n- 5.4 Eval\n\n- 5.5 Pipes to While  \n\n\n\n6.[Naming Conventions](#f)\n\n- 6.1 Function Names \n\n- 6.2 Variable Names \n\n- 6.3 Constants and Environment Variable Names \n\n- 6.4 Source Filenames \n\n- 6.5 Read-only Variables \n\n- 6.7 Use Local Variables \n\n- 6.8 Function Location \n\n- 6.9 main  \n\n\n\n7.[Calling Commands](#g)\n\n- 7.1 Checking Return Values \n\n- 7.2 Builtin Commands vs. External Commands  \n\n\n\n8.[Conclusion](#h)\n\n## Which Shell to Use\n\n**Bash** is the only shell scripting language permitted for executables.  \n\nExecutables must start with **#! /bin/bash** and a minimum number of flags.\n\nUse **set** to set shell options so that calling your script as **bash** ***script_name*** does not break its functionality.\n\n\n\nRestricting all executable shell scripts to bash gives us a consistent shell language that's installed on all our machines.\n\n\n\nThe only exception to this is where you're forced to by whatever you're coding for.\n\nOne example of this is Solaris SVR4 packages which require plain Bourne shell for any scripts.\n\n\n\n## When to use Shell\n\nShell should only be used for small utilities or simple wrapper scripts.  \n\nWhile shell scripting isn't a development language, it is used for writing various utility scripts throughout Google.   This style guide is more a recognition of its use rather than a suggestion that it be used for widespread deployment.\n\n\n\nSome guidelines:\n\n- If you're mostly calling other utilities and are doing relatively little data manipulation, shell is an acceptable choice for the task.\n\n- If performance matters, use something other than shell.\n\n- If you find you need to use arrays for anything more than assignment of **${PIPESTATUS}**, you should use Python.\n\n- If you are writing a script that is more than 100 lines long, you should probably be writing it in Python instead. Bear in mind that scripts grow. Rewrite your script in another language early to avoid a time-consuming rewrite at a later date.  \n\n\n\n**[Go Contents](#contents)**\n\n## 1.  <span id=\"a\">Shell Files and Interpreter Invocation</span>\n\n\n\n### 1.1 File Extensions\n\n\n\nExecutables should have no extension (strongly preferred) or a **.sh** extension. Libraries must have a **.sh** extension and should not be executable.\n\nIt is not necessary to know what language a program is written in when executing it and shell doesn't require an extension so we prefer not to use one for executables.\n\n\n\nHowever, for libraries it's important to know what language it is and sometimes there's a need to have similar libraries in different languages. This allows library files with identical purposes but different languages to be identically named except for the language-specific suffix.\n\n\n\n### 1.2 SUID/SGID\n\n\n\nSUID and SGID are forbidden on shell scripts.\n\nThere are too many security issues with shell that make it nearly impossible to secure sufficiently to allow SUID/SGID. While bash does make it difficult to run SUID, it's still possible on some platforms which is why we're being explicit about banning it.\n\n\n\nUse **sudo** to provide elevated access if you need it.\n\n**[Go Contents](#contents)**\n\n## 2. <span id=\"b\">Environment</span>\n\n\n\n### 2.1 STDOUT vs STDERR\n\n\n\nAll error messages should go to **STDERR**.\n\nThis makes it easier to separate normal status from actual issues.\n\nA function to print out error messages along with other status information is recommended.\n\n```\n\nerr() {\n\n  echo \"[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@\" >&2\n\n}\n\n\n\nif ! do_something; then\n\n  err \"Unable to do_something\"\n\n  exit \"${E_DID_NOTHING}\"\n\nfi\n\n```\n\n**[Go Contents](#contents)**\n\n## 3. <span id=\"c\">Comments</span>\n\n### 3.1 File Header\n\nStart each file with a description of its contents.\n\nEvery file must have a top-level comment including a brief overview of its contents. A copyright notice and author information are optional.\n\n\n\n***Example:***\n\n```\n\n#!/bin/bash\n\n#\n\n# Perform hot backups of Oracle databases.\n\n```\n\n\n\n### 3.2 Function Comments\n\n\n\nAny function that is not both obvious and short must be commented. Any function in a library must be commented regardless of length or complexity.\n\nIt should be possible for someone else to learn how to use your program or to use a function in your library by reading the comments (and self-help, if provided) without reading the code.\n\n\n\nAll function comments should contain:\n\n- Description of the function\n\n- Global variables used and modified\n\n- Arguments taken\n\n- Returned values other than the default exit status of the last command run\n\n\n\n***Example:***\n\n```\n\n#!/bin/bash\n\n#\n\n# Perform hot backups of Oracle databases.\n\n\n\nexport PATH='/usr/xpg4/bin:/usr/bin:/opt/csw/bin:/opt/goog/bin'\n\n\n\n#######################################\n\n# Cleanup files from the backup dir\n\n# Globals:\n\n#   BACKUP_DIR\n\n#   ORACLE_SID\n\n# Arguments:\n\n#   None\n\n# Returns:\n\n#   None\n\n#######################################\n\ncleanup() {\n\n  ...\n\n}\n\n```\n\n\n\n### 3.3 Implementation Comments\n\n\n\nComment tricky, non-obvious, interesting or important parts of your code.\n\nThis follows general Google coding comment practice. Don't comment everything. If there's a complex algorithm or you're doing something out of the ordinary, put a short comment in.\n\n\n\n### 3.4 TODO Comments\n\n\n\nUse **TODO** comments for code that is temporary, a short-term solution, or good-enough but not perfect.\n\nThis matches the convention in the **C++ Guide**.\n\n\n\n**TODOs** should include the string **TODO** in all caps, followed by your username in parentheses. A colon is optional. It's preferable to put a bug/ticket number next to the **TODO** item as well.\n\n\n\n***Examples:***\n\n```\n\n# TODO(mrmonkey): Handle the unlikely edge cases (bug ####)\n\n```\n\n**[Go Contents](#contents)**\n\n## 4. <span id=\"d\">Formatting</span>\n\nWhile you should follow the style that's already there for files that you're modifying, the following are required for any new code.\n\n\n\n### 4.1 Indentation\n\nIndent 2 spaces. No tabs.\n\nUse blank lines between blocks to improve readability. Indentation is two spaces. Whatever you do, don't use tabs. For existing files, stay faithful to the existing indentation.\n\n\n\n### 4.2 Line Length and Long Strings\n\nMaximum line length is 80 characters.\n\nIf you have to write strings that are longer than 80 characters, this should be done with a here document or an embedded newline if possible. Literal strings that have to be longer than 80 chars and can't sensibly be split are ok, but it's strongly preferred to find a way to make it shorter.\n\n```\n\n# DO use 'here document's\n\ncat <<END;\n\nI am an exceptionally long\n\nstring.\n\nEND\n\n\n\n# Embedded newlines are ok too\n\nlong_string=\"I am an exceptionally\n\n  long string.\"\n\n```\n\n### 4.3 Pipelines\n\n\n\nPipelines should be split one per line if they don't all fit on one line.\n\nIf a pipeline all fits on one line, it should be on one line.\n\nIf not, it should be split at one pipe segment per line with the pipe on the newline and a 2 space indent for the next section of the pipe. This applies to a chain of commands combined using '**|**' as well as to logical compounds using '**||**' and '**&&**'.\n\n```\n\n# All fits on one line\n\ncommand1 | command2\n\n\n\n# Long commands\n\ncommand1 \\\n\n  | command2 \\\n\n  | command3 \\\n\n  | command4\n\n```\n\n### 4.4 Loops\n\nPut **; do** and **; then** on the same line as the **while**, **for** or **if**.\n\nLoops in shell are a bit different, but we follow the same principles as with braces when declaring functions.\n\nThat is: **; then** and **; do** should be <font color=\"red\">on the same line</font> as the **if/for/while**.**else** should be on its own line and closing statements should be on their own line vertically aligned with the opening statement.\n\n\n\n***Example:***\n\n```\n\nfor dir in ${dirs_to_cleanup}; do\n\n  if [[ -d \"${dir}/${ORACLE_SID}\" ]]; then\n\n    log_date \"Cleaning up old files in ${dir}/${ORACLE_SID}\"\n\n    rm \"${dir}/${ORACLE_SID}/\"*\n\n    if [[ \"$?\" -ne 0 ]]; then\n\n      error_message\n\n    fi\n\n  else\n\n    mkdir -p \"${dir}/${ORACLE_SID}\"\n\n    if [[ \"$?\" -ne 0 ]]; then\n\n      error_message\n\n    fi\n\n  fi\n\ndone\n\n```\n\n### 4.5 Case statement\n\n- Indent alternatives by 2 spaces.\n\n- A one-line alternative needs a space after the close parenthesis of the pattern and before the **;;**.\n\n- Long or multi-command alternatives should be split over multiple lines with the pattern, actions, and **;;** on separate lines.\n\n\n\nThe matching expressions are indented one level from the '**case**' and '**esac**'. Multiline actions are indented another level. In general, there is no need to quote match expressions. Pattern expressions should not be preceded by an open parenthesis. Avoid the **;&** and **;;&** notations.\n\n```\n\ncase \"${expression}\" in\n\n  a)\n\n    variable=\"...\"\n\n    some_command \"${variable}\" \"${other_expr}\" ...\n\n    ;;\n\n  absolute)\n\n    actions=\"relative\"\n\n    another_command \"${actions}\" \"${other_expr}\" ...\n\n    ;;\n\n  *)\n\n    error \"Unexpected expression '${expression}'\"\n\n    ;;\n\nesac\n\n```\n\nSimple commands may be put on the same line as the pattern and **;;** as long as the expression remains readable. This is often appropriate for single-letter option processing. When the actions don't fit on a single line, put the pattern on a line on its own, then the actions, then **;;**; also <font color=\"red\"> on a line of its own</font>. When on the same line as the actions, use a space after the close parenthesis of the pattern and another before the **;;**.\n\n```\n\nverbose='false'\n\naflag=''\n\nbflag=''\n\nfiles=''\n\nwhile getopts 'abf:v' flag; do\n\n  case \"${flag}\" in\n\n    a) aflag='true' ;;\n\n    b) bflag='true' ;;\n\n    f) files=\"${OPTARG}\" ;;\n\n    v) verbose='true' ;;\n\n    *) error \"Unexpected option ${flag}\" ;;\n\n  esac\n\ndone\n\n```\n\n### 4.6 Variable expansion\n\nIn order of precedence: Stay consistent with what you find; quote your variables; prefer \"**${var}**\" over \"**$var**\", but see details.\n\nThese are meant to be guidelines, as the topic seems too controversial for a mandatory regulation.\n\nThey are listed in order of precedence.\n\n\n\n1. Stay consistent with what you find for existing code.\n\n1. Quote variables, see Quoting section below.\n\n1. Don't brace-quote single character shell specials / positional parameters, unless strictly necessary or avoiding deep confusion.\n\nPrefer brace-quoting all other variables.\n\n\n\n```\n\n# Section of recommended cases.\n\n# Preferred style for 'special' variables:\n\necho \"Positional: $1\" \"$5\" \"$3\"\n\necho \"Specials: !=$!, -=$-, _=$_. ?=$?, #=$# *=$* @=$@ \\$=$$ ...\"\n\n\n\n# Braces necessary:\n\necho \"many parameters: ${10}\"\n\n\n\n# Braces avoiding confusion:\n\n# Output is \"a0b0c0\"\n\nset -- a b c\n\necho \"${1}0${2}0${3}0\"\n\n\n\n# Preferred style for other variables:\n\necho \"PATH=${PATH}, PWD=${PWD}, mine=${some_var}\"\n\nwhile read f; do\n\n  echo \"file=${f}\"\n\ndone < <(ls -l /tmp)\n\n\n\n# Section of discouraged cases\n\n\n\n# Unquoted vars, unbraced vars, brace-quoted single letter\n\n# shell specials.\n\necho a=$avar \"b=$bvar\" \"PID=${$}\" \"${1}\"\n\n\n\n# Confusing use: this is expanded as \"${1}0${2}0${3}0\",\n\n# not \"${10}${20}${30}\n\nset -- a b c\n\necho \"$10$20$30\"\n\n```\n\n### 4.7 Quoting\n\n\n\n- Always quote strings containing variables, command substitutions, spaces or shell meta characters, unless careful unquoted expansion is required.\n\n- Prefer quoting strings that are \"words\" (as opposed to command options or path names).\n\n- Never quote ***literal*** integers.\n\n- Be aware of the quoting rules for pattern matches in [[.\n\n- Use \"**$@**\" unless you have a specific reason to use **$***.\n\n\n\n```\n\n# 'Single' quotes indicate that no substitution is desired.\n\n# \"Double\" quotes indicate that substitution is required/tolerated.\n\n\n\n# Simple examples\n\n# \"quote command substitutions\"\n\nflag=\"$(some_command and its args \"$@\" 'quoted separately')\"\n\n\n\n# \"quote variables\"\n\necho \"${flag}\"\n\n\n\n# \"never quote literal integers\"\n\nvalue=32\n\n# \"quote command substitutions\", even when you expect integers\n\nnumber=\"$(generate_number)\"\n\n\n\n# \"prefer quoting words\", not compulsory\n\nreadonly USE_INTEGER='true'\n\n\n\n# \"quote shell meta characters\"\n\necho 'Hello stranger, and well met. Earn lots of $$$'\n\necho \"Process $$: Done making \\$\\$\\$.\"\n\n\n\n# \"command options or path names\"\n\n# ($1 is assumed to contain a value here)\n\ngrep -li Hugo /dev/null \"$1\"\n\n\n\n# Less simple examples\n\n# \"quote variables, unless proven false\": ccs might be empty\n\ngit send-email --to \"${reviewers}\" ${ccs:+\"--cc\" \"${ccs}\"}\n\n\n\n# Positional parameter precautions: $1 might be unset\n\n# Single quotes leave regex as-is.\n\ngrep -cP '([Ss]pecial|\\|?characters*)$' ${1:+\"$1\"}\n\n\n\n# For passing on arguments,\n\n# \"$@\" is right almost everytime, and\n\n# $* is wrong almost everytime:\n\n#\n\n# * $* and $@ will split on spaces, clobbering up arguments\n\n#   that contain spaces and dropping empty strings;\n\n# * \"$@\" will retain arguments as-is, so no args\n\n#   provided will result in no args being passed on;\n\n#   This is in most cases what you want to use for passing\n\n#   on arguments.\n\n# * \"$*\" expands to one argument, with all args joined\n\n#   by (usually) spaces,\n\n#   so no args provided will result in one empty string\n\n#   being passed on.\n\n# (Consult 'man bash' for the nit-grits ;-)\n\n\n\nset -- 1 \"2 two\" \"3 three tres\"; echo $# ; set -- \"$*\"; echo \"$#, $@\")\n\nset -- 1 \"2 two\" \"3 three tres\"; echo $# ; set -- \"$@\"; echo \"$#, $@\")\n\n```\n\n**[Go Contents](#contents)**\n\n## 5. <span id=\"e\">Features and Bugs</span>\n\n\n\n### 5.1 Command Substitution\n\n\n\nUse **$(command)** instead of backticks.\n\nNested backticks require escaping the inner ones with **\\.** The **$(command)** format doesn't change when nested and is easier to read.\n\n\n\n***Example:***\n\n```\n\n# This is preferred:\n\nvar=\"$(command \"$(command1)\")\"\n\n\n\n# This is not:\n\nvar=\"`command \\`command1\\``\"\n\n```\n\n\n\n### 5.2 Test, [ and [[\n\n\n\n**[[ ... ]]** is preferred over **[**, **test** and **/usr/bin/[**.\n\n**[[ ... ]]** reduces errors as no pathname expansion or word splitting takes place between **[[ and ]]** and **[[ ... ]]** allows for regular expression matching where [ ... ] does not.\n\n\n\n```\n\n# This ensures the string on the left is made up of characters in the\n\n# alnum character class followed by the string name.\n\n# Note that the RHS should not be quoted here.\n\n# For the gory details, see\n\n# E14 at http://tiswww.case.edu/php/chet/bash/FAQ\n\nif [[ \"filename\" =~ ^[[:alnum:]]+name ]]; then\n\n  echo \"Match\"\n\nfi\n\n\n\n# This matches the exact pattern \"f*\" (Does not match in this case)\n\nif [[ \"filename\" == \"f*\" ]]; then\n\n  echo \"Match\"\n\nfi\n\n\n\n# This gives a \"too many arguments\" error as f* is expanded to the\n\n# contents of the current directory\n\nif [ \"filename\" == f* ]; then\n\n  echo \"Match\"\n\nfi\n\n```\n\n\n\n### 5.3 Testing Strings\n\n\n\nUse quotes rather than filler characters where possible.\n\nBash is smart enough to deal with an empty string in a test. So, given that the code is much easier to read, use tests for empty/non-empty strings or empty strings rather than filler characters.\n\n\n\n```\n\n# Do this:\n\nif [[ \"${my_var}\" = \"some_string\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# -z (string length is zero) and -n (string length is not zero) are\n\n# preferred over testing for an empty string\n\nif [[ -z \"${my_var}\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# This is OK (ensure quotes on the empty side), but not preferred:\n\nif [[ \"${my_var}\" = \"\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# Not this:\n\nif [[ \"${my_var}X\" = \"some_stringX\" ]]; then\n\n  do_something\n\nfi\n\n```\n\nTo avoid confusion about what you're testing for, explicitly use **-z** or **-n**.\n\n```\n\n# Use this\n\nif [[ -n \"${my_var}\" ]]; then\n\n  do_something\n\nfi\n\n\n\n# Instead of this as errors can occur if ${my_var} expands to a test\n\n# flag\n\nif [[ \"${my_var}\" ]]; then\n\n  do_something\n\nfi\n\n```\n\n\n\n### 5.4 Wildcard Expansion of Filenames\n\n\n\nUse an explicit path when doing wildcard expansion of filenames.\n\nAs filenames can begin with a -, it's a lot safer to expand wildcards with ./* instead of * .\n\n\n\n```\n\n# Here's the contents of the directory:\n\n# -f  -r  somedir  somefile\n\n\n\n# This deletes almost everything in the directory by force\n\npsa@bilby$ rm -v *\n\nremoved directory: `somedir'\n\nremoved `somefile'\n\n\n\n# As opposed to:\n\npsa@bilby$ rm -v ./*\n\nremoved `./-f'\n\nremoved `./-r'\n\nrm: cannot remove `./somedir': Is a directory\n\nremoved `./somefile'\n\n```\n\n\n\n### 5.5 Eval\n\n**eval** should be avoided.  \n\nEval munges the input when used for assignment to variables and can set variables without making it possible to check what those variables were.\n\n```\n\n# What does this set?\n\n# Did it succeed? In part or whole?\n\neval $(set_my_variables)\n\n\n\n# What happens if one of the returned values has a space in it?\n\nvariable=\"$(eval some_function)\"\n\n```\n\n\n\n### 5.6 Pipes to While\n\n\n\nUse process substitution or for loops in preference to piping to while. Variables modified in a while loop do not propagate to the parent because the loop's commands run in a subshell.\n\nThe implicit subshell in a pipe to while can make it difficult to track down bugs.\n\n```\n\nlast_line='NULL'\n\nyour_command | while read line; do\n\n  last_line=\"${line}\"\n\ndone\n\n\n\n# This will output 'NULL'\n\necho \"${last_line}\"\n\n```\n\nUse a for loop if you are confident that the input will not contain spaces or special characters (usually, this means not user input).\n\n```\n\ntotal=0\n\n# Only do this if there are no spaces in return values.\n\nfor value in $(command); do\n\n  total+=\"${value}\"\n\ndone\n\n```\n\nUsing process substitution allows redirecting output but puts the commands in an explicit subshell rather than the implicit subshell that bash creates for the while loop.\n\n```\n\ntotal=0\n\nlast_file=\n\nwhile read count filename; do\n\n  total+=\"${count}\"\n\n  last_file=\"${filename}\"\n\ndone < <(your_command | uniq -c)\n\n\n\n# This will output the second field of the last line of output from\n\n# the command.\n\necho \"Total = ${total}\"\n\necho \"Last one = ${last_file}\"\n\n```\n\nUse while loops where it is not necessary to pass complex results to the parent shell - this is typically where some more complex \"parsing\" is required. Beware that simple examples are probably more easily done with a tool such as awk. This may also be useful where you specifically don't want to change the parent scope variables.\n\n```\n\n# Trivial implementation of awk expression:\n\n#   awk '$3 == \"nfs\" { print $2 \" maps to \" $1 }' /proc/mounts\n\ncat /proc/mounts | while read src dest type opts rest; do\n\n  if [[ ${type} == \"nfs\" ]]; then\n\n    echo \"NFS ${dest} maps to ${src}\"\n\n  fi\n\ndone\n\n```\n\n**[Go Contents](#contents)**\n\n## 6. <span id=\"f\">Naming Conventions</span>\n\n\n\n### 6.1 Function Names\n\nLower-case, with underscores to separate words. Separate libraries with **::**. Parentheses are required after the function name. The keyword ***function*** is optional, but must be used consistently throughout a project.\n\nIf you're writing single functions, use lowercase and separate words with underscore. If you're writing a package, separate package names with **::**. Braces must be on the same line as the function name (as with other languages at Google) and no space between the function name and the parenthesis.\n\n```\n\n# Single function\n\nmy_func() {\n\n  ...\n\n}\n\n\n\n# Part of a package\n\nmypackage::my_func() {\n\n  ...\n\n}\n\n```\n\n\n\nThe **function** keyword is extraneous when \"()\" is present after the function name, but enhances quick identification of functions.\n\n\n\n### 6.2 Variable Names\n\n\n\nAs for function names.\n\nVariables names for loops should be similarly named for any variable you're looping through.\n\n```\n\nfor zone in ${zones}; do\n\n  something_with \"${zone}\"\n\ndone\n\n```\n\n\n\n### 6.3 Constants and Environment Variable Names\n\n\n\nAll caps, separated with underscores, declared at the top of the file.\n\nConstants and anything exported to the environment should be capitalized.  \n\n```\n\n# Constant\n\nreadonly PATH_TO_FILES='/some/path'  \n\n\n\n# Both constant and environment\n\ndeclare -xr ORACLE_SID='PROD'\n\n```\n\n\n\nSome things become constant at their first setting (for example, via getopts). Thus, it's OK to set a constant in getopts or based on a condition, but it should be made readonly immediately afterwards. Note that **declare** doesn't operate on global variables within functions, so **readonly** or **export** is recommended instead.\n\n```\n\nVERBOSE='false'\n\nwhile getopts 'v' flag; do\n\n  case \"${flag}\" in\n\n    v) VERBOSE='true' ;;\n\n  esac\n\ndone\n\nreadonly VERBOSE\n\n```\n\n### 6.4 Source Filenames\n\n\n\nLowercase, with underscores to separate words if desired.\n\nThis is for consistency with other code styles in Google: **maketemplate** or **make_template** but <font color=\"red\">not</font> **make-template**.\n\n\n\n### 6.5 Read-only Variables\n\n\n\nUse **readonly** or **declare -r** to ensure they're read only.\n\nAs globals are widely used in shell, it's important to catch errors when working with them. When you declare a variable that is meant to be read-only, make this explicit.\n\n```\n\nzip_version=\"$(dpkg --status zip | grep Version: | cut -d ' ' -f 2)\"\n\nif [[ -z \"${zip_version}\" ]]; then\n\n  error_message\n\nelse\n\n  readonly zip_version\n\nfi\n\n```\n\n### 6.6 Use Local Variables\n\n\n\nDeclare function-specific variables with **local**. Declaration and assignment should be on different lines.\n\nEnsure that local variables are only seen inside a function and its children by using **local** when declaring them. This avoids polluting the global name space and inadvertently setting variables that may have significance outside the function.\n\n\n\nDeclaration and assignment must be separate statements when the assignment value is provided by a command substitution; as the 'local' builtin does not propagate the exit code from the command substitution.\n\n```\n\nmy_func2() {\n\n  local name=\"$1\"\n\n\n\n  # Separate lines for declaration and assignment:\n\n  local my_var\n\n  my_var=\"$(my_func)\" || return\n\n\n\n  # DO NOT do this: $? contains the exit code of 'local', not my_func\n\n  local my_var=\"$(my_func)\"\n\n  [[ $? -eq 0 ]] || return\n\n\n\n  ...\n\n}  \n\n\n\n```\n\n### 6.7 Function Location\n\nPut all functions together in the file just below constants. Don't hide executable code between functions.\n\nIf you've got functions, put them all together near the top of the file. Only includes, **set** statements and setting constants may be done before declaring functions.\n\n\n\nDon't hide executable code between functions. Doing so makes the code difficult to follow and results in nasty surprises when debugging.\n\n\n\n### 6.8 main\n\n\n\nA function called ***main*** is required for scripts long enough to contain at least one other function.\n\nIn order to easily find the start of the program, put the main program in a function called **main** as the bottom most function. This provides consistency with the rest of the code base as well as allowing you to define more variables as **local** (which can't be done if the main code is not a function). The last non-comment line in the file should be a call to **main**:\n\n```\n\nmain \"$@\"\n\n```\n\n\n\nObviously, for short scripts where it's just a linear flow, **main** is overkill and so is not required.\n\n\n\n## 7. <span id=\"g\">Calling Commands</span>\n\n\n\n### 7.1 Checking Return Values\n\nAlways check return values and give informative return values.\n\nFor unpiped commands, use **$?** or check directly via an **if** statement to keep it simple.\n\n\n\nExample:\n\n```\n\nif ! mv \"${file_list}\" \"${dest_dir}/\" ; then\n\n  echo \"Unable to move ${file_list} to ${dest_dir}\" >&2\n\n  exit \"${E_BAD_MOVE}\"\n\nfi\n\n\n\n# Or\n\nmv \"${file_list}\" \"${dest_dir}/\"\n\nif [[ \"$?\" -ne 0 ]]; then\n\n  echo \"Unable to move ${file_list} to ${dest_dir}\" >&2\n\n  exit \"${E_BAD_MOVE}\"\n\nfi\n\n```\n\nBash also has the **PIPESTATUS** variable that allows checking of the return code from all parts of a pipe. If it's only necessary to check success or failure of the whole pipe, then the following is acceptable:\n\n```\n\ntar -cf - ./* | ( cd \"${dir}\" && tar -xf - )\n\nif [[ \"${PIPESTATUS[0]}\" -ne 0 || \"${PIPESTATUS[1]}\" -ne 0 ]]; then\n\n  echo \"Unable to tar files to ${dir}\" >&2\n\nfi\n\n```\n\nHowever, as **PIPESTATUS** will be overwritten as soon as you do any other command, if you need to act differently on errors based on where it happened in the pipe, you'll need to assign **PIPESTATUS** to another variable immediately after running the command (don't forget that [ is a command and will wipe out **PIPESTATUS**).\n\n```\n\ntar -cf - ./* | ( cd \"${DIR}\" && tar -xf - )\n\nreturn_codes=(${PIPESTATUS[*]})\n\nif [[ \"${return_codes[0]}\" -ne 0 ]]; then\n\n  do_something\n\nfi\n\nif [[ \"${return_codes[1]}\" -ne 0 ]]; then\n\n  do_something_else\n\nfi\n\n\n\n```\n\n\n\n### 7.2 Builtin Commands vs. External Commands\n\n\n\nGiven the choice between invoking a shell builtin and invoking a separate process, choose the builtin.\n\nWe prefer the use of builtins such as the Parameter Expansion functions in **bash(1)** as it's more robust and portable (especially when compared to things like sed).  \n\n\n\n ***Example:***\n\n```\n\n# Prefer this:\n\naddition=$((${X} + ${Y}))\n\nsubstitution=\"${string/#foo/bar}\"\n\n\n\n# Instead of this:\n\naddition=\"$(expr ${X} + ${Y})\"\n\nsubstitution=\"$(echo \"${string}\" | sed -e 's/^foo/bar/')\"\n\n```\n\n**[Go Contents](#contents)**\n\n## 8. <span id=\"h\">Conclusion</span>\n\nUse common sense and **BE CONSISTENT**.\n\nPlease take a few minutes to read the Parting Words section at the bottom of the **C++ Guide**.\n\n\n\n**[Go Contents](#contents)**\n","slug":"shell-style-guide","published":1,"updated":"2017-01-12T06:09:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsxf0022x0s6ccc0udhr","content":"<h1 id=\"Shell-Style-Guide\"><a href=\"#Shell-Style-Guide\" class=\"headerlink\" title=\"Shell Style Guide\"></a>Shell Style Guide</h1><h2 id=\"Contents\"><a href=\"#Contents\" class=\"headerlink\" title=\"Contents\"></a><span id=\"contents\">Contents</span></h2><p>1.<a href=\"#a\">Shell Files and Interpreter Invocation</a></p>\n<ul>\n<li><p>1.1 File Extensions</p>\n</li>\n<li><p>1.2 SUID/SGID  </p>\n</li>\n</ul>\n<p>2.<a href=\"#b\">Environment</a> </p>\n<ul>\n<li>2.1 STDOUT vs STDERR  </li>\n</ul>\n<p>3.<a href=\"#c\">Comments</a></p>\n<ul>\n<li><p>3.1 File Header </p>\n</li>\n<li><p>3.2 Function Comments</p>\n</li>\n<li><p>3.3 Implementation Comments</p>\n</li>\n<li><p>3.4 TODO Comments  </p>\n</li>\n</ul>\n<p>4.<a href=\"#d\">Formatting</a></p>\n<ul>\n<li><p>4.1 Indentation </p>\n</li>\n<li><p>4.2 Line Length and Long Strings</p>\n</li>\n<li><p>4.3 Pipelines | Loops</p>\n</li>\n<li><p>4.4 Case statement</p>\n</li>\n<li><p>4.5 Variable expansion</p>\n</li>\n<li><p>4.6 Quoting  </p>\n</li>\n</ul>\n<p>5.<a href=\"#e\">Features and Bugs</a> </p>\n<ul>\n<li><p>5.1 Command Substitution</p>\n</li>\n<li><p>5.2 Test, [ and [[ </p>\n</li>\n<li><p>5.3 Testing Strings Wildcard Expansion of Filenames </p>\n</li>\n<li><p>5.4 Eval</p>\n</li>\n<li><p>5.5 Pipes to While  </p>\n</li>\n</ul>\n<p>6.<a href=\"#f\">Naming Conventions</a></p>\n<ul>\n<li><p>6.1 Function Names </p>\n</li>\n<li><p>6.2 Variable Names </p>\n</li>\n<li><p>6.3 Constants and Environment Variable Names </p>\n</li>\n<li><p>6.4 Source Filenames </p>\n</li>\n<li><p>6.5 Read-only Variables </p>\n</li>\n<li><p>6.7 Use Local Variables </p>\n</li>\n<li><p>6.8 Function Location </p>\n</li>\n<li><p>6.9 main  </p>\n</li>\n</ul>\n<p>7.<a href=\"#g\">Calling Commands</a></p>\n<ul>\n<li><p>7.1 Checking Return Values </p>\n</li>\n<li><p>7.2 Builtin Commands vs. External Commands  </p>\n</li>\n</ul>\n<p>8.<a href=\"#h\">Conclusion</a></p>\n<h2 id=\"Which-Shell-to-Use\"><a href=\"#Which-Shell-to-Use\" class=\"headerlink\" title=\"Which Shell to Use\"></a>Which Shell to Use</h2><p><strong>Bash</strong> is the only shell scripting language permitted for executables.  </p>\n<p>Executables must start with <strong>#! /bin/bash</strong> and a minimum number of flags.</p>\n<p>Use <strong>set</strong> to set shell options so that calling your script as <strong>bash</strong> <strong><em>script_name</em></strong> does not break its functionality.</p>\n<p>Restricting all executable shell scripts to bash gives us a consistent shell language that’s installed on all our machines.</p>\n<p>The only exception to this is where you’re forced to by whatever you’re coding for.</p>\n<p>One example of this is Solaris SVR4 packages which require plain Bourne shell for any scripts.</p>\n<h2 id=\"When-to-use-Shell\"><a href=\"#When-to-use-Shell\" class=\"headerlink\" title=\"When to use Shell\"></a>When to use Shell</h2><p>Shell should only be used for small utilities or simple wrapper scripts.  </p>\n<p>While shell scripting isn’t a development language, it is used for writing various utility scripts throughout Google.   This style guide is more a recognition of its use rather than a suggestion that it be used for widespread deployment.</p>\n<p>Some guidelines:</p>\n<ul>\n<li><p>If you’re mostly calling other utilities and are doing relatively little data manipulation, shell is an acceptable choice for the task.</p>\n</li>\n<li><p>If performance matters, use something other than shell.</p>\n</li>\n<li><p>If you find you need to use arrays for anything more than assignment of <strong>${PIPESTATUS}</strong>, you should use Python.</p>\n</li>\n<li><p>If you are writing a script that is more than 100 lines long, you should probably be writing it in Python instead. Bear in mind that scripts grow. Rewrite your script in another language early to avoid a time-consuming rewrite at a later date.  </p>\n</li>\n</ul>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"1-Shell-Files-and-Interpreter-Invocation\"><a href=\"#1-Shell-Files-and-Interpreter-Invocation\" class=\"headerlink\" title=\"1.  Shell Files and Interpreter Invocation\"></a>1.  <span id=\"a\">Shell Files and Interpreter Invocation</span></h2><h3 id=\"1-1-File-Extensions\"><a href=\"#1-1-File-Extensions\" class=\"headerlink\" title=\"1.1 File Extensions\"></a>1.1 File Extensions</h3><p>Executables should have no extension (strongly preferred) or a <strong>.sh</strong> extension. Libraries must have a <strong>.sh</strong> extension and should not be executable.</p>\n<p>It is not necessary to know what language a program is written in when executing it and shell doesn’t require an extension so we prefer not to use one for executables.</p>\n<p>However, for libraries it’s important to know what language it is and sometimes there’s a need to have similar libraries in different languages. This allows library files with identical purposes but different languages to be identically named except for the language-specific suffix.</p>\n<h3 id=\"1-2-SUID-SGID\"><a href=\"#1-2-SUID-SGID\" class=\"headerlink\" title=\"1.2 SUID/SGID\"></a>1.2 SUID/SGID</h3><p>SUID and SGID are forbidden on shell scripts.</p>\n<p>There are too many security issues with shell that make it nearly impossible to secure sufficiently to allow SUID/SGID. While bash does make it difficult to run SUID, it’s still possible on some platforms which is why we’re being explicit about banning it.</p>\n<p>Use <strong>sudo</strong> to provide elevated access if you need it.</p>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"2-Environment\"><a href=\"#2-Environment\" class=\"headerlink\" title=\"2. Environment\"></a>2. <span id=\"b\">Environment</span></h2><h3 id=\"2-1-STDOUT-vs-STDERR\"><a href=\"#2-1-STDOUT-vs-STDERR\" class=\"headerlink\" title=\"2.1 STDOUT vs STDERR\"></a>2.1 STDOUT vs STDERR</h3><p>All error messages should go to <strong>STDERR</strong>.</p>\n<p>This makes it easier to separate normal status from actual issues.</p>\n<p>A function to print out error messages along with other status information is recommended.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">err() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;[$(date +&apos;%Y-%m-%dT%H:%M:%S%z&apos;)]: $@&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if ! do_something; then</span><br><span class=\"line\"></span><br><span class=\"line\">  err &quot;Unable to do_something&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  exit &quot;$&#123;E_DID_NOTHING&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"3-Comments\"><a href=\"#3-Comments\" class=\"headerlink\" title=\"3. Comments\"></a>3. <span id=\"c\">Comments</span></h2><h3 id=\"3-1-File-Header\"><a href=\"#3-1-File-Header\" class=\"headerlink\" title=\"3.1 File Header\"></a>3.1 File Header</h3><p>Start each file with a description of its contents.</p>\n<p>Every file must have a top-level comment including a brief overview of its contents. A copyright notice and author information are optional.</p>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># Perform hot backups of Oracle databases.</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-Function-Comments\"><a href=\"#3-2-Function-Comments\" class=\"headerlink\" title=\"3.2 Function Comments\"></a>3.2 Function Comments</h3><p>Any function that is not both obvious and short must be commented. Any function in a library must be commented regardless of length or complexity.</p>\n<p>It should be possible for someone else to learn how to use your program or to use a function in your library by reading the comments (and self-help, if provided) without reading the code.</p>\n<p>All function comments should contain:</p>\n<ul>\n<li><p>Description of the function</p>\n</li>\n<li><p>Global variables used and modified</p>\n</li>\n<li><p>Arguments taken</p>\n</li>\n<li><p>Returned values other than the default exit status of the last command run</p>\n</li>\n</ul>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># Perform hot backups of Oracle databases.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=&apos;/usr/xpg4/bin:/usr/bin:/opt/csw/bin:/opt/goog/bin&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#######################################</span><br><span class=\"line\"></span><br><span class=\"line\"># Cleanup files from the backup dir</span><br><span class=\"line\"></span><br><span class=\"line\"># Globals:</span><br><span class=\"line\"></span><br><span class=\"line\">#   BACKUP_DIR</span><br><span class=\"line\"></span><br><span class=\"line\">#   ORACLE_SID</span><br><span class=\"line\"></span><br><span class=\"line\"># Arguments:</span><br><span class=\"line\"></span><br><span class=\"line\">#   None</span><br><span class=\"line\"></span><br><span class=\"line\"># Returns:</span><br><span class=\"line\"></span><br><span class=\"line\">#   None</span><br><span class=\"line\"></span><br><span class=\"line\">#######################################</span><br><span class=\"line\"></span><br><span class=\"line\">cleanup() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-Implementation-Comments\"><a href=\"#3-3-Implementation-Comments\" class=\"headerlink\" title=\"3.3 Implementation Comments\"></a>3.3 Implementation Comments</h3><p>Comment tricky, non-obvious, interesting or important parts of your code.</p>\n<p>This follows general Google coding comment practice. Don’t comment everything. If there’s a complex algorithm or you’re doing something out of the ordinary, put a short comment in.</p>\n<h3 id=\"3-4-TODO-Comments\"><a href=\"#3-4-TODO-Comments\" class=\"headerlink\" title=\"3.4 TODO Comments\"></a>3.4 TODO Comments</h3><p>Use <strong>TODO</strong> comments for code that is temporary, a short-term solution, or good-enough but not perfect.</p>\n<p>This matches the convention in the <strong>C++ Guide</strong>.</p>\n<p><strong>TODOs</strong> should include the string <strong>TODO</strong> in all caps, followed by your username in parentheses. A colon is optional. It’s preferable to put a bug/ticket number next to the <strong>TODO</strong> item as well.</p>\n<p><strong><em>Examples:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># TODO(mrmonkey): Handle the unlikely edge cases (bug ####)</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"4-Formatting\"><a href=\"#4-Formatting\" class=\"headerlink\" title=\"4. Formatting\"></a>4. <span id=\"d\">Formatting</span></h2><p>While you should follow the style that’s already there for files that you’re modifying, the following are required for any new code.</p>\n<h3 id=\"4-1-Indentation\"><a href=\"#4-1-Indentation\" class=\"headerlink\" title=\"4.1 Indentation\"></a>4.1 Indentation</h3><p>Indent 2 spaces. No tabs.</p>\n<p>Use blank lines between blocks to improve readability. Indentation is two spaces. Whatever you do, don’t use tabs. For existing files, stay faithful to the existing indentation.</p>\n<h3 id=\"4-2-Line-Length-and-Long-Strings\"><a href=\"#4-2-Line-Length-and-Long-Strings\" class=\"headerlink\" title=\"4.2 Line Length and Long Strings\"></a>4.2 Line Length and Long Strings</h3><p>Maximum line length is 80 characters.</p>\n<p>If you have to write strings that are longer than 80 characters, this should be done with a here document or an embedded newline if possible. Literal strings that have to be longer than 80 chars and can’t sensibly be split are ok, but it’s strongly preferred to find a way to make it shorter.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># DO use &apos;here document&apos;s</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;END;</span><br><span class=\"line\"></span><br><span class=\"line\">I am an exceptionally long</span><br><span class=\"line\"></span><br><span class=\"line\">string.</span><br><span class=\"line\"></span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Embedded newlines are ok too</span><br><span class=\"line\"></span><br><span class=\"line\">long_string=&quot;I am an exceptionally</span><br><span class=\"line\"></span><br><span class=\"line\">  long string.&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-Pipelines\"><a href=\"#4-3-Pipelines\" class=\"headerlink\" title=\"4.3 Pipelines\"></a>4.3 Pipelines</h3><p>Pipelines should be split one per line if they don’t all fit on one line.</p>\n<p>If a pipeline all fits on one line, it should be on one line.</p>\n<p>If not, it should be split at one pipe segment per line with the pipe on the newline and a 2 space indent for the next section of the pipe. This applies to a chain of commands combined using ‘<strong>|</strong>‘ as well as to logical compounds using ‘<strong>||</strong>‘ and ‘<strong>&amp;&amp;</strong>‘.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># All fits on one line</span><br><span class=\"line\"></span><br><span class=\"line\">command1 | command2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Long commands</span><br><span class=\"line\"></span><br><span class=\"line\">command1 \\</span><br><span class=\"line\"></span><br><span class=\"line\">  | command2 \\</span><br><span class=\"line\"></span><br><span class=\"line\">  | command3 \\</span><br><span class=\"line\"></span><br><span class=\"line\">  | command4</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-Loops\"><a href=\"#4-4-Loops\" class=\"headerlink\" title=\"4.4 Loops\"></a>4.4 Loops</h3><p>Put <strong>; do</strong> and <strong>; then</strong> on the same line as the <strong>while</strong>, <strong>for</strong> or <strong>if</strong>.</p>\n<p>Loops in shell are a bit different, but we follow the same principles as with braces when declaring functions.</p>\n<p>That is: <strong>; then</strong> and <strong>; do</strong> should be <font color=\"red\">on the same line</font> as the <strong>if/for/while</strong>.<strong>else</strong> should be on its own line and closing statements should be on their own line vertically aligned with the opening statement.</p>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">for dir in $&#123;dirs_to_cleanup&#125;; do</span><br><span class=\"line\"></span><br><span class=\"line\">  if [[ -d &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">    log_date &quot;Cleaning up old files in $&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    rm &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;/&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">    if [[ &quot;$?&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">      error_message</span><br><span class=\"line\"></span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">  else</span><br><span class=\"line\"></span><br><span class=\"line\">    mkdir -p &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    if [[ &quot;$?&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">      error_message</span><br><span class=\"line\"></span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-5-Case-statement\"><a href=\"#4-5-Case-statement\" class=\"headerlink\" title=\"4.5 Case statement\"></a>4.5 Case statement</h3><ul>\n<li><p>Indent alternatives by 2 spaces.</p>\n</li>\n<li><p>A one-line alternative needs a space after the close parenthesis of the pattern and before the <strong>;;</strong>.</p>\n</li>\n<li><p>Long or multi-command alternatives should be split over multiple lines with the pattern, actions, and <strong>;;</strong> on separate lines.</p>\n</li>\n</ul>\n<p>The matching expressions are indented one level from the ‘<strong>case</strong>‘ and ‘<strong>esac</strong>‘. Multiline actions are indented another level. In general, there is no need to quote match expressions. Pattern expressions should not be preceded by an open parenthesis. Avoid the <strong>;&amp;</strong> and <strong>;;&amp;</strong> notations.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">case &quot;$&#123;expression&#125;&quot; in</span><br><span class=\"line\"></span><br><span class=\"line\">  a)</span><br><span class=\"line\"></span><br><span class=\"line\">    variable=&quot;...&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    some_command &quot;$&#123;variable&#125;&quot; &quot;$&#123;other_expr&#125;&quot; ...</span><br><span class=\"line\"></span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  absolute)</span><br><span class=\"line\"></span><br><span class=\"line\">    actions=&quot;relative&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    another_command &quot;$&#123;actions&#125;&quot; &quot;$&#123;other_expr&#125;&quot; ...</span><br><span class=\"line\"></span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  *)</span><br><span class=\"line\"></span><br><span class=\"line\">    error &quot;Unexpected expression &apos;$&#123;expression&#125;&apos;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<p>Simple commands may be put on the same line as the pattern and <strong>;;</strong> as long as the expression remains readable. This is often appropriate for single-letter option processing. When the actions don’t fit on a single line, put the pattern on a line on its own, then the actions, then <strong>;;</strong>; also <font color=\"red\"> on a line of its own</font>. When on the same line as the actions, use a space after the close parenthesis of the pattern and another before the <strong>;;</strong>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">verbose=&apos;false&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">aflag=&apos;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">bflag=&apos;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">files=&apos;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">while getopts &apos;abf:v&apos; flag; do</span><br><span class=\"line\"></span><br><span class=\"line\">  case &quot;$&#123;flag&#125;&quot; in</span><br><span class=\"line\"></span><br><span class=\"line\">    a) aflag=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    b) bflag=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    f) files=&quot;$&#123;OPTARG&#125;&quot; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    v) verbose=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    *) error &quot;Unexpected option $&#123;flag&#125;&quot; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  esac</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-6-Variable-expansion\"><a href=\"#4-6-Variable-expansion\" class=\"headerlink\" title=\"4.6 Variable expansion\"></a>4.6 Variable expansion</h3><p>In order of precedence: Stay consistent with what you find; quote your variables; prefer “<strong>${var}</strong>“ over “<strong>$var</strong>“, but see details.</p>\n<p>These are meant to be guidelines, as the topic seems too controversial for a mandatory regulation.</p>\n<p>They are listed in order of precedence.</p>\n<ol>\n<li><p>Stay consistent with what you find for existing code.</p>\n</li>\n<li><p>Quote variables, see Quoting section below.</p>\n</li>\n<li><p>Don’t brace-quote single character shell specials / positional parameters, unless strictly necessary or avoiding deep confusion.</p>\n</li>\n</ol>\n<p>Prefer brace-quoting all other variables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Section of recommended cases.</span><br><span class=\"line\"></span><br><span class=\"line\"># Preferred style for &apos;special&apos; variables:</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Positional: $1&quot; &quot;$5&quot; &quot;$3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Specials: !=$!, -=$-, _=$_. ?=$?, #=$# *=$* @=$@ \\$=$$ ...&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Braces necessary:</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;many parameters: $&#123;10&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Braces avoiding confusion:</span><br><span class=\"line\"></span><br><span class=\"line\"># Output is &quot;a0b0c0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">set -- a b c</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$&#123;1&#125;0$&#123;2&#125;0$&#123;3&#125;0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Preferred style for other variables:</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;PATH=$&#123;PATH&#125;, PWD=$&#123;PWD&#125;, mine=$&#123;some_var&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">while read f; do</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;file=$&#123;f&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done &lt; &lt;(ls -l /tmp)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Section of discouraged cases</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Unquoted vars, unbraced vars, brace-quoted single letter</span><br><span class=\"line\"></span><br><span class=\"line\"># shell specials.</span><br><span class=\"line\"></span><br><span class=\"line\">echo a=$avar &quot;b=$bvar&quot; &quot;PID=$&#123;$&#125;&quot; &quot;$&#123;1&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Confusing use: this is expanded as &quot;$&#123;1&#125;0$&#123;2&#125;0$&#123;3&#125;0&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\"># not &quot;$&#123;10&#125;$&#123;20&#125;$&#123;30&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">set -- a b c</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$10$20$30&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-7-Quoting\"><a href=\"#4-7-Quoting\" class=\"headerlink\" title=\"4.7 Quoting\"></a>4.7 Quoting</h3><ul>\n<li><p>Always quote strings containing variables, command substitutions, spaces or shell meta characters, unless careful unquoted expansion is required.</p>\n</li>\n<li><p>Prefer quoting strings that are “words” (as opposed to command options or path names).</p>\n</li>\n<li><p>Never quote <strong><em>literal</em></strong> integers.</p>\n</li>\n<li><p>Be aware of the quoting rules for pattern matches in [[.</p>\n</li>\n<li><p>Use “<strong>$@</strong>“ unless you have a specific reason to use <strong>$*</strong>.</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># &apos;Single&apos; quotes indicate that no substitution is desired.</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;Double&quot; quotes indicate that substitution is required/tolerated.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Simple examples</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote command substitutions&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">flag=&quot;$(some_command and its args &quot;$@&quot; &apos;quoted separately&apos;)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote variables&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$&#123;flag&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;never quote literal integers&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">value=32</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote command substitutions&quot;, even when you expect integers</span><br><span class=\"line\"></span><br><span class=\"line\">number=&quot;$(generate_number)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;prefer quoting words&quot;, not compulsory</span><br><span class=\"line\"></span><br><span class=\"line\">readonly USE_INTEGER=&apos;true&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote shell meta characters&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &apos;Hello stranger, and well met. Earn lots of $$$&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Process $$: Done making \\$\\$\\$.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;command options or path names&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># ($1 is assumed to contain a value here)</span><br><span class=\"line\"></span><br><span class=\"line\">grep -li Hugo /dev/null &quot;$1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Less simple examples</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote variables, unless proven false&quot;: ccs might be empty</span><br><span class=\"line\"></span><br><span class=\"line\">git send-email --to &quot;$&#123;reviewers&#125;&quot; $&#123;ccs:+&quot;--cc&quot; &quot;$&#123;ccs&#125;&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Positional parameter precautions: $1 might be unset</span><br><span class=\"line\"></span><br><span class=\"line\"># Single quotes leave regex as-is.</span><br><span class=\"line\"></span><br><span class=\"line\">grep -cP &apos;([Ss]pecial|\\|?characters*)$&apos; $&#123;1:+&quot;$1&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># For passing on arguments,</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;$@&quot; is right almost everytime, and</span><br><span class=\"line\"></span><br><span class=\"line\"># $* is wrong almost everytime:</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># * $* and $@ will split on spaces, clobbering up arguments</span><br><span class=\"line\"></span><br><span class=\"line\">#   that contain spaces and dropping empty strings;</span><br><span class=\"line\"></span><br><span class=\"line\"># * &quot;$@&quot; will retain arguments as-is, so no args</span><br><span class=\"line\"></span><br><span class=\"line\">#   provided will result in no args being passed on;</span><br><span class=\"line\"></span><br><span class=\"line\">#   This is in most cases what you want to use for passing</span><br><span class=\"line\"></span><br><span class=\"line\">#   on arguments.</span><br><span class=\"line\"></span><br><span class=\"line\"># * &quot;$*&quot; expands to one argument, with all args joined</span><br><span class=\"line\"></span><br><span class=\"line\">#   by (usually) spaces,</span><br><span class=\"line\"></span><br><span class=\"line\">#   so no args provided will result in one empty string</span><br><span class=\"line\"></span><br><span class=\"line\">#   being passed on.</span><br><span class=\"line\"></span><br><span class=\"line\"># (Consult &apos;man bash&apos; for the nit-grits ;-)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">set -- 1 &quot;2 two&quot; &quot;3 three tres&quot;; echo $# ; set -- &quot;$*&quot;; echo &quot;$#, $@&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">set -- 1 &quot;2 two&quot; &quot;3 three tres&quot;; echo $# ; set -- &quot;$@&quot;; echo &quot;$#, $@&quot;)</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"5-Features-and-Bugs\"><a href=\"#5-Features-and-Bugs\" class=\"headerlink\" title=\"5. Features and Bugs\"></a>5. <span id=\"e\">Features and Bugs</span></h2><h3 id=\"5-1-Command-Substitution\"><a href=\"#5-1-Command-Substitution\" class=\"headerlink\" title=\"5.1 Command Substitution\"></a>5.1 Command Substitution</h3><p>Use <strong>$(command)</strong> instead of backticks.</p>\n<p>Nested backticks require escaping the inner ones with <strong>.</strong> The <strong>$(command)</strong> format doesn’t change when nested and is easier to read.</p>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># This is preferred:</span><br><span class=\"line\"></span><br><span class=\"line\">var=&quot;$(command &quot;$(command1)&quot;)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This is not:</span><br><span class=\"line\"></span><br><span class=\"line\">var=&quot;`command \\`command1\\``&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-Test-and\"><a href=\"#5-2-Test-and\" class=\"headerlink\" title=\"5.2 Test, [ and [[\"></a>5.2 Test, [ and [[</h3><p><strong>[[ … ]]</strong> is preferred over <strong>[</strong>, <strong>test</strong> and <strong>/usr/bin/[</strong>.</p>\n<p><strong>[[ … ]]</strong> reduces errors as no pathname expansion or word splitting takes place between <strong>[[ and ]]</strong> and <strong>[[ … ]]</strong> allows for regular expression matching where [ … ] does not.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># This ensures the string on the left is made up of characters in the</span><br><span class=\"line\"></span><br><span class=\"line\"># alnum character class followed by the string name.</span><br><span class=\"line\"></span><br><span class=\"line\"># Note that the RHS should not be quoted here.</span><br><span class=\"line\"></span><br><span class=\"line\"># For the gory details, see</span><br><span class=\"line\"></span><br><span class=\"line\"># E14 at http://tiswww.case.edu/php/chet/bash/FAQ</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;filename&quot; =~ ^[[:alnum:]]+name ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Match&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This matches the exact pattern &quot;f*&quot; (Does not match in this case)</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;filename&quot; == &quot;f*&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Match&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This gives a &quot;too many arguments&quot; error as f* is expanded to the</span><br><span class=\"line\"></span><br><span class=\"line\"># contents of the current directory</span><br><span class=\"line\"></span><br><span class=\"line\">if [ &quot;filename&quot; == f* ]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Match&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-3-Testing-Strings\"><a href=\"#5-3-Testing-Strings\" class=\"headerlink\" title=\"5.3 Testing Strings\"></a>5.3 Testing Strings</h3><p>Use quotes rather than filler characters where possible.</p>\n<p>Bash is smart enough to deal with an empty string in a test. So, given that the code is much easier to read, use tests for empty/non-empty strings or empty strings rather than filler characters.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Do this:</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;&quot; = &quot;some_string&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># -z (string length is zero) and -n (string length is not zero) are</span><br><span class=\"line\"></span><br><span class=\"line\"># preferred over testing for an empty string</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -z &quot;$&#123;my_var&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This is OK (ensure quotes on the empty side), but not preferred:</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;&quot; = &quot;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Not this:</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;X&quot; = &quot;some_stringX&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>To avoid confusion about what you’re testing for, explicitly use <strong>-z</strong> or <strong>-n</strong>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Use this</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -n &quot;$&#123;my_var&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Instead of this as errors can occur if $&#123;my_var&#125; expands to a test</span><br><span class=\"line\"></span><br><span class=\"line\"># flag</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-4-Wildcard-Expansion-of-Filenames\"><a href=\"#5-4-Wildcard-Expansion-of-Filenames\" class=\"headerlink\" title=\"5.4 Wildcard Expansion of Filenames\"></a>5.4 Wildcard Expansion of Filenames</h3><p>Use an explicit path when doing wildcard expansion of filenames.</p>\n<p>As filenames can begin with a -, it’s a lot safer to expand wildcards with ./<em> instead of </em> .</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Here&apos;s the contents of the directory:</span><br><span class=\"line\"></span><br><span class=\"line\"># -f  -r  somedir  somefile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This deletes almost everything in the directory by force</span><br><span class=\"line\"></span><br><span class=\"line\">psa@bilby$ rm -v *</span><br><span class=\"line\"></span><br><span class=\"line\">removed directory: `somedir&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">removed `somefile&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># As opposed to:</span><br><span class=\"line\"></span><br><span class=\"line\">psa@bilby$ rm -v ./*</span><br><span class=\"line\"></span><br><span class=\"line\">removed `./-f&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">removed `./-r&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">rm: cannot remove `./somedir&apos;: Is a directory</span><br><span class=\"line\"></span><br><span class=\"line\">removed `./somefile&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-5-Eval\"><a href=\"#5-5-Eval\" class=\"headerlink\" title=\"5.5 Eval\"></a>5.5 Eval</h3><p><strong>eval</strong> should be avoided.  </p>\n<p>Eval munges the input when used for assignment to variables and can set variables without making it possible to check what those variables were.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># What does this set?</span><br><span class=\"line\"></span><br><span class=\"line\"># Did it succeed? In part or whole?</span><br><span class=\"line\"></span><br><span class=\"line\">eval $(set_my_variables)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># What happens if one of the returned values has a space in it?</span><br><span class=\"line\"></span><br><span class=\"line\">variable=&quot;$(eval some_function)&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-6-Pipes-to-While\"><a href=\"#5-6-Pipes-to-While\" class=\"headerlink\" title=\"5.6 Pipes to While\"></a>5.6 Pipes to While</h3><p>Use process substitution or for loops in preference to piping to while. Variables modified in a while loop do not propagate to the parent because the loop’s commands run in a subshell.</p>\n<p>The implicit subshell in a pipe to while can make it difficult to track down bugs.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">last_line=&apos;NULL&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">your_command | while read line; do</span><br><span class=\"line\"></span><br><span class=\"line\">  last_line=&quot;$&#123;line&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This will output &apos;NULL&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$&#123;last_line&#125;&quot;</span><br></pre></td></tr></table></figure>\n<p>Use a for loop if you are confident that the input will not contain spaces or special characters (usually, this means not user input).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">total=0</span><br><span class=\"line\"></span><br><span class=\"line\"># Only do this if there are no spaces in return values.</span><br><span class=\"line\"></span><br><span class=\"line\">for value in $(command); do</span><br><span class=\"line\"></span><br><span class=\"line\">  total+=&quot;$&#123;value&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>Using process substitution allows redirecting output but puts the commands in an explicit subshell rather than the implicit subshell that bash creates for the while loop.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">total=0</span><br><span class=\"line\"></span><br><span class=\"line\">last_file=</span><br><span class=\"line\"></span><br><span class=\"line\">while read count filename; do</span><br><span class=\"line\"></span><br><span class=\"line\">  total+=&quot;$&#123;count&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  last_file=&quot;$&#123;filename&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done &lt; &lt;(your_command | uniq -c)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This will output the second field of the last line of output from</span><br><span class=\"line\"></span><br><span class=\"line\"># the command.</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Total = $&#123;total&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Last one = $&#123;last_file&#125;&quot;</span><br></pre></td></tr></table></figure>\n<p>Use while loops where it is not necessary to pass complex results to the parent shell - this is typically where some more complex “parsing” is required. Beware that simple examples are probably more easily done with a tool such as awk. This may also be useful where you specifically don’t want to change the parent scope variables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Trivial implementation of awk expression:</span><br><span class=\"line\"></span><br><span class=\"line\">#   awk &apos;$3 == &quot;nfs&quot; &#123; print $2 &quot; maps to &quot; $1 &#125;&apos; /proc/mounts</span><br><span class=\"line\"></span><br><span class=\"line\">cat /proc/mounts | while read src dest type opts rest; do</span><br><span class=\"line\"></span><br><span class=\"line\">  if [[ $&#123;type&#125; == &quot;nfs&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;NFS $&#123;dest&#125; maps to $&#123;src&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"6-Naming-Conventions\"><a href=\"#6-Naming-Conventions\" class=\"headerlink\" title=\"6. Naming Conventions\"></a>6. <span id=\"f\">Naming Conventions</span></h2><h3 id=\"6-1-Function-Names\"><a href=\"#6-1-Function-Names\" class=\"headerlink\" title=\"6.1 Function Names\"></a>6.1 Function Names</h3><p>Lower-case, with underscores to separate words. Separate libraries with <strong>::</strong>. Parentheses are required after the function name. The keyword <strong><em>function</em></strong> is optional, but must be used consistently throughout a project.</p>\n<p>If you’re writing single functions, use lowercase and separate words with underscore. If you’re writing a package, separate package names with <strong>::</strong>. Braces must be on the same line as the function name (as with other languages at Google) and no space between the function name and the parenthesis.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Single function</span><br><span class=\"line\"></span><br><span class=\"line\">my_func() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Part of a package</span><br><span class=\"line\"></span><br><span class=\"line\">mypackage::my_func() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The <strong>function</strong> keyword is extraneous when “()” is present after the function name, but enhances quick identification of functions.</p>\n<h3 id=\"6-2-Variable-Names\"><a href=\"#6-2-Variable-Names\" class=\"headerlink\" title=\"6.2 Variable Names\"></a>6.2 Variable Names</h3><p>As for function names.</p>\n<p>Variables names for loops should be similarly named for any variable you’re looping through.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">for zone in $&#123;zones&#125;; do</span><br><span class=\"line\"></span><br><span class=\"line\">  something_with &quot;$&#123;zone&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-3-Constants-and-Environment-Variable-Names\"><a href=\"#6-3-Constants-and-Environment-Variable-Names\" class=\"headerlink\" title=\"6.3 Constants and Environment Variable Names\"></a>6.3 Constants and Environment Variable Names</h3><p>All caps, separated with underscores, declared at the top of the file.</p>\n<p>Constants and anything exported to the environment should be capitalized.  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Constant</span><br><span class=\"line\"></span><br><span class=\"line\">readonly PATH_TO_FILES=&apos;/some/path&apos;  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Both constant and environment</span><br><span class=\"line\"></span><br><span class=\"line\">declare -xr ORACLE_SID=&apos;PROD&apos;</span><br></pre></td></tr></table></figure>\n<p>Some things become constant at their first setting (for example, via getopts). Thus, it’s OK to set a constant in getopts or based on a condition, but it should be made readonly immediately afterwards. Note that <strong>declare</strong> doesn’t operate on global variables within functions, so <strong>readonly</strong> or <strong>export</strong> is recommended instead.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">VERBOSE=&apos;false&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">while getopts &apos;v&apos; flag; do</span><br><span class=\"line\"></span><br><span class=\"line\">  case &quot;$&#123;flag&#125;&quot; in</span><br><span class=\"line\"></span><br><span class=\"line\">    v) VERBOSE=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  esac</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\">readonly VERBOSE</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-4-Source-Filenames\"><a href=\"#6-4-Source-Filenames\" class=\"headerlink\" title=\"6.4 Source Filenames\"></a>6.4 Source Filenames</h3><p>Lowercase, with underscores to separate words if desired.</p>\n<p>This is for consistency with other code styles in Google: <strong>maketemplate</strong> or <strong>make_template</strong> but <font color=\"red\">not</font> <strong>make-template</strong>.</p>\n<h3 id=\"6-5-Read-only-Variables\"><a href=\"#6-5-Read-only-Variables\" class=\"headerlink\" title=\"6.5 Read-only Variables\"></a>6.5 Read-only Variables</h3><p>Use <strong>readonly</strong> or <strong>declare -r</strong> to ensure they’re read only.</p>\n<p>As globals are widely used in shell, it’s important to catch errors when working with them. When you declare a variable that is meant to be read-only, make this explicit.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">zip_version=&quot;$(dpkg --status zip | grep Version: | cut -d &apos; &apos; -f 2)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -z &quot;$&#123;zip_version&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  error_message</span><br><span class=\"line\"></span><br><span class=\"line\">else</span><br><span class=\"line\"></span><br><span class=\"line\">  readonly zip_version</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-6-Use-Local-Variables\"><a href=\"#6-6-Use-Local-Variables\" class=\"headerlink\" title=\"6.6 Use Local Variables\"></a>6.6 Use Local Variables</h3><p>Declare function-specific variables with <strong>local</strong>. Declaration and assignment should be on different lines.</p>\n<p>Ensure that local variables are only seen inside a function and its children by using <strong>local</strong> when declaring them. This avoids polluting the global name space and inadvertently setting variables that may have significance outside the function.</p>\n<p>Declaration and assignment must be separate statements when the assignment value is provided by a command substitution; as the ‘local’ builtin does not propagate the exit code from the command substitution.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">my_func2() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  local name=&quot;$1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  # Separate lines for declaration and assignment:</span><br><span class=\"line\"></span><br><span class=\"line\">  local my_var</span><br><span class=\"line\"></span><br><span class=\"line\">  my_var=&quot;$(my_func)&quot; || return</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  # DO NOT do this: $? contains the exit code of &apos;local&apos;, not my_func</span><br><span class=\"line\"></span><br><span class=\"line\">  local my_var=&quot;$(my_func)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  [[ $? -eq 0 ]] || return</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-7-Function-Location\"><a href=\"#6-7-Function-Location\" class=\"headerlink\" title=\"6.7 Function Location\"></a>6.7 Function Location</h3><p>Put all functions together in the file just below constants. Don’t hide executable code between functions.</p>\n<p>If you’ve got functions, put them all together near the top of the file. Only includes, <strong>set</strong> statements and setting constants may be done before declaring functions.</p>\n<p>Don’t hide executable code between functions. Doing so makes the code difficult to follow and results in nasty surprises when debugging.</p>\n<h3 id=\"6-8-main\"><a href=\"#6-8-main\" class=\"headerlink\" title=\"6.8 main\"></a>6.8 main</h3><p>A function called <strong><em>main</em></strong> is required for scripts long enough to contain at least one other function.</p>\n<p>In order to easily find the start of the program, put the main program in a function called <strong>main</strong> as the bottom most function. This provides consistency with the rest of the code base as well as allowing you to define more variables as <strong>local</strong> (which can’t be done if the main code is not a function). The last non-comment line in the file should be a call to <strong>main</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">main &quot;$@&quot;</span><br></pre></td></tr></table></figure>\n<p>Obviously, for short scripts where it’s just a linear flow, <strong>main</strong> is overkill and so is not required.</p>\n<h2 id=\"7-Calling-Commands\"><a href=\"#7-Calling-Commands\" class=\"headerlink\" title=\"7. Calling Commands\"></a>7. <span id=\"g\">Calling Commands</span></h2><h3 id=\"7-1-Checking-Return-Values\"><a href=\"#7-1-Checking-Return-Values\" class=\"headerlink\" title=\"7.1 Checking Return Values\"></a>7.1 Checking Return Values</h3><p>Always check return values and give informative return values.</p>\n<p>For unpiped commands, use <strong>$?</strong> or check directly via an <strong>if</strong> statement to keep it simple.</p>\n<p>Example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">if ! mv &quot;$&#123;file_list&#125;&quot; &quot;$&#123;dest_dir&#125;/&quot; ; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Unable to move $&#123;file_list&#125; to $&#123;dest_dir&#125;&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">  exit &quot;$&#123;E_BAD_MOVE&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Or</span><br><span class=\"line\"></span><br><span class=\"line\">mv &quot;$&#123;file_list&#125;&quot; &quot;$&#123;dest_dir&#125;/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$?&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Unable to move $&#123;file_list&#125; to $&#123;dest_dir&#125;&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">  exit &quot;$&#123;E_BAD_MOVE&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>Bash also has the <strong>PIPESTATUS</strong> variable that allows checking of the return code from all parts of a pipe. If it’s only necessary to check success or failure of the whole pipe, then the following is acceptable:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">tar -cf - ./* | ( cd &quot;$&#123;dir&#125;&quot; &amp;&amp; tar -xf - )</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;PIPESTATUS[0]&#125;&quot; -ne 0 || &quot;$&#123;PIPESTATUS[1]&#125;&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Unable to tar files to $&#123;dir&#125;&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>However, as <strong>PIPESTATUS</strong> will be overwritten as soon as you do any other command, if you need to act differently on errors based on where it happened in the pipe, you’ll need to assign <strong>PIPESTATUS</strong> to another variable immediately after running the command (don’t forget that [ is a command and will wipe out <strong>PIPESTATUS</strong>).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">tar -cf - ./* | ( cd &quot;$&#123;DIR&#125;&quot; &amp;&amp; tar -xf - )</span><br><span class=\"line\"></span><br><span class=\"line\">return_codes=($&#123;PIPESTATUS[*]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;return_codes[0]&#125;&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;return_codes[1]&#125;&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something_else</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-Builtin-Commands-vs-External-Commands\"><a href=\"#7-2-Builtin-Commands-vs-External-Commands\" class=\"headerlink\" title=\"7.2 Builtin Commands vs. External Commands\"></a>7.2 Builtin Commands vs. External Commands</h3><p>Given the choice between invoking a shell builtin and invoking a separate process, choose the builtin.</p>\n<p>We prefer the use of builtins such as the Parameter Expansion functions in <strong>bash(1)</strong> as it’s more robust and portable (especially when compared to things like sed).  </p>\n<p> <strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Prefer this:</span><br><span class=\"line\"></span><br><span class=\"line\">addition=$(($&#123;X&#125; + $&#123;Y&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">substitution=&quot;$&#123;string/#foo/bar&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Instead of this:</span><br><span class=\"line\"></span><br><span class=\"line\">addition=&quot;$(expr $&#123;X&#125; + $&#123;Y&#125;)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">substitution=&quot;$(echo &quot;$&#123;string&#125;&quot; | sed -e &apos;s/^foo/bar/&apos;)&quot;</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"8-Conclusion\"><a href=\"#8-Conclusion\" class=\"headerlink\" title=\"8. Conclusion\"></a>8. <span id=\"h\">Conclusion</span></h2><p>Use common sense and <strong>BE CONSISTENT</strong>.</p>\n<p>Please take a few minutes to read the Parting Words section at the bottom of the <strong>C++ Guide</strong>.</p>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Shell-Style-Guide\"><a href=\"#Shell-Style-Guide\" class=\"headerlink\" title=\"Shell Style Guide\"></a>Shell Style Guide</h1><h2 id=\"Contents\"><a href=\"#Contents\" class=\"headerlink\" title=\"Contents\"></a><span id=\"contents\">Contents</span></h2><p>1.<a href=\"#a\">Shell Files and Interpreter Invocation</a></p>\n<ul>\n<li><p>1.1 File Extensions</p>\n</li>\n<li><p>1.2 SUID/SGID  </p>\n</li>\n</ul>\n<p>2.<a href=\"#b\">Environment</a> </p>\n<ul>\n<li>2.1 STDOUT vs STDERR  </li>\n</ul>\n<p>3.<a href=\"#c\">Comments</a></p>\n<ul>\n<li><p>3.1 File Header </p>\n</li>\n<li><p>3.2 Function Comments</p>\n</li>\n<li><p>3.3 Implementation Comments</p>\n</li>\n<li><p>3.4 TODO Comments  </p>\n</li>\n</ul>\n<p>4.<a href=\"#d\">Formatting</a></p>\n<ul>\n<li><p>4.1 Indentation </p>\n</li>\n<li><p>4.2 Line Length and Long Strings</p>\n</li>\n<li><p>4.3 Pipelines | Loops</p>\n</li>\n<li><p>4.4 Case statement</p>\n</li>\n<li><p>4.5 Variable expansion</p>\n</li>\n<li><p>4.6 Quoting  </p>\n</li>\n</ul>\n<p>5.<a href=\"#e\">Features and Bugs</a> </p>\n<ul>\n<li><p>5.1 Command Substitution</p>\n</li>\n<li><p>5.2 Test, [ and [[ </p>\n</li>\n<li><p>5.3 Testing Strings Wildcard Expansion of Filenames </p>\n</li>\n<li><p>5.4 Eval</p>\n</li>\n<li><p>5.5 Pipes to While  </p>\n</li>\n</ul>\n<p>6.<a href=\"#f\">Naming Conventions</a></p>\n<ul>\n<li><p>6.1 Function Names </p>\n</li>\n<li><p>6.2 Variable Names </p>\n</li>\n<li><p>6.3 Constants and Environment Variable Names </p>\n</li>\n<li><p>6.4 Source Filenames </p>\n</li>\n<li><p>6.5 Read-only Variables </p>\n</li>\n<li><p>6.7 Use Local Variables </p>\n</li>\n<li><p>6.8 Function Location </p>\n</li>\n<li><p>6.9 main  </p>\n</li>\n</ul>\n<p>7.<a href=\"#g\">Calling Commands</a></p>\n<ul>\n<li><p>7.1 Checking Return Values </p>\n</li>\n<li><p>7.2 Builtin Commands vs. External Commands  </p>\n</li>\n</ul>\n<p>8.<a href=\"#h\">Conclusion</a></p>\n<h2 id=\"Which-Shell-to-Use\"><a href=\"#Which-Shell-to-Use\" class=\"headerlink\" title=\"Which Shell to Use\"></a>Which Shell to Use</h2><p><strong>Bash</strong> is the only shell scripting language permitted for executables.  </p>\n<p>Executables must start with <strong>#! /bin/bash</strong> and a minimum number of flags.</p>\n<p>Use <strong>set</strong> to set shell options so that calling your script as <strong>bash</strong> <strong><em>script_name</em></strong> does not break its functionality.</p>\n<p>Restricting all executable shell scripts to bash gives us a consistent shell language that’s installed on all our machines.</p>\n<p>The only exception to this is where you’re forced to by whatever you’re coding for.</p>\n<p>One example of this is Solaris SVR4 packages which require plain Bourne shell for any scripts.</p>\n<h2 id=\"When-to-use-Shell\"><a href=\"#When-to-use-Shell\" class=\"headerlink\" title=\"When to use Shell\"></a>When to use Shell</h2><p>Shell should only be used for small utilities or simple wrapper scripts.  </p>\n<p>While shell scripting isn’t a development language, it is used for writing various utility scripts throughout Google.   This style guide is more a recognition of its use rather than a suggestion that it be used for widespread deployment.</p>\n<p>Some guidelines:</p>\n<ul>\n<li><p>If you’re mostly calling other utilities and are doing relatively little data manipulation, shell is an acceptable choice for the task.</p>\n</li>\n<li><p>If performance matters, use something other than shell.</p>\n</li>\n<li><p>If you find you need to use arrays for anything more than assignment of <strong>${PIPESTATUS}</strong>, you should use Python.</p>\n</li>\n<li><p>If you are writing a script that is more than 100 lines long, you should probably be writing it in Python instead. Bear in mind that scripts grow. Rewrite your script in another language early to avoid a time-consuming rewrite at a later date.  </p>\n</li>\n</ul>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"1-Shell-Files-and-Interpreter-Invocation\"><a href=\"#1-Shell-Files-and-Interpreter-Invocation\" class=\"headerlink\" title=\"1.  Shell Files and Interpreter Invocation\"></a>1.  <span id=\"a\">Shell Files and Interpreter Invocation</span></h2><h3 id=\"1-1-File-Extensions\"><a href=\"#1-1-File-Extensions\" class=\"headerlink\" title=\"1.1 File Extensions\"></a>1.1 File Extensions</h3><p>Executables should have no extension (strongly preferred) or a <strong>.sh</strong> extension. Libraries must have a <strong>.sh</strong> extension and should not be executable.</p>\n<p>It is not necessary to know what language a program is written in when executing it and shell doesn’t require an extension so we prefer not to use one for executables.</p>\n<p>However, for libraries it’s important to know what language it is and sometimes there’s a need to have similar libraries in different languages. This allows library files with identical purposes but different languages to be identically named except for the language-specific suffix.</p>\n<h3 id=\"1-2-SUID-SGID\"><a href=\"#1-2-SUID-SGID\" class=\"headerlink\" title=\"1.2 SUID/SGID\"></a>1.2 SUID/SGID</h3><p>SUID and SGID are forbidden on shell scripts.</p>\n<p>There are too many security issues with shell that make it nearly impossible to secure sufficiently to allow SUID/SGID. While bash does make it difficult to run SUID, it’s still possible on some platforms which is why we’re being explicit about banning it.</p>\n<p>Use <strong>sudo</strong> to provide elevated access if you need it.</p>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"2-Environment\"><a href=\"#2-Environment\" class=\"headerlink\" title=\"2. Environment\"></a>2. <span id=\"b\">Environment</span></h2><h3 id=\"2-1-STDOUT-vs-STDERR\"><a href=\"#2-1-STDOUT-vs-STDERR\" class=\"headerlink\" title=\"2.1 STDOUT vs STDERR\"></a>2.1 STDOUT vs STDERR</h3><p>All error messages should go to <strong>STDERR</strong>.</p>\n<p>This makes it easier to separate normal status from actual issues.</p>\n<p>A function to print out error messages along with other status information is recommended.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">err() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;[$(date +&apos;%Y-%m-%dT%H:%M:%S%z&apos;)]: $@&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if ! do_something; then</span><br><span class=\"line\"></span><br><span class=\"line\">  err &quot;Unable to do_something&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  exit &quot;$&#123;E_DID_NOTHING&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"3-Comments\"><a href=\"#3-Comments\" class=\"headerlink\" title=\"3. Comments\"></a>3. <span id=\"c\">Comments</span></h2><h3 id=\"3-1-File-Header\"><a href=\"#3-1-File-Header\" class=\"headerlink\" title=\"3.1 File Header\"></a>3.1 File Header</h3><p>Start each file with a description of its contents.</p>\n<p>Every file must have a top-level comment including a brief overview of its contents. A copyright notice and author information are optional.</p>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># Perform hot backups of Oracle databases.</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-Function-Comments\"><a href=\"#3-2-Function-Comments\" class=\"headerlink\" title=\"3.2 Function Comments\"></a>3.2 Function Comments</h3><p>Any function that is not both obvious and short must be commented. Any function in a library must be commented regardless of length or complexity.</p>\n<p>It should be possible for someone else to learn how to use your program or to use a function in your library by reading the comments (and self-help, if provided) without reading the code.</p>\n<p>All function comments should contain:</p>\n<ul>\n<li><p>Description of the function</p>\n</li>\n<li><p>Global variables used and modified</p>\n</li>\n<li><p>Arguments taken</p>\n</li>\n<li><p>Returned values other than the default exit status of the last command run</p>\n</li>\n</ul>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># Perform hot backups of Oracle databases.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=&apos;/usr/xpg4/bin:/usr/bin:/opt/csw/bin:/opt/goog/bin&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#######################################</span><br><span class=\"line\"></span><br><span class=\"line\"># Cleanup files from the backup dir</span><br><span class=\"line\"></span><br><span class=\"line\"># Globals:</span><br><span class=\"line\"></span><br><span class=\"line\">#   BACKUP_DIR</span><br><span class=\"line\"></span><br><span class=\"line\">#   ORACLE_SID</span><br><span class=\"line\"></span><br><span class=\"line\"># Arguments:</span><br><span class=\"line\"></span><br><span class=\"line\">#   None</span><br><span class=\"line\"></span><br><span class=\"line\"># Returns:</span><br><span class=\"line\"></span><br><span class=\"line\">#   None</span><br><span class=\"line\"></span><br><span class=\"line\">#######################################</span><br><span class=\"line\"></span><br><span class=\"line\">cleanup() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-Implementation-Comments\"><a href=\"#3-3-Implementation-Comments\" class=\"headerlink\" title=\"3.3 Implementation Comments\"></a>3.3 Implementation Comments</h3><p>Comment tricky, non-obvious, interesting or important parts of your code.</p>\n<p>This follows general Google coding comment practice. Don’t comment everything. If there’s a complex algorithm or you’re doing something out of the ordinary, put a short comment in.</p>\n<h3 id=\"3-4-TODO-Comments\"><a href=\"#3-4-TODO-Comments\" class=\"headerlink\" title=\"3.4 TODO Comments\"></a>3.4 TODO Comments</h3><p>Use <strong>TODO</strong> comments for code that is temporary, a short-term solution, or good-enough but not perfect.</p>\n<p>This matches the convention in the <strong>C++ Guide</strong>.</p>\n<p><strong>TODOs</strong> should include the string <strong>TODO</strong> in all caps, followed by your username in parentheses. A colon is optional. It’s preferable to put a bug/ticket number next to the <strong>TODO</strong> item as well.</p>\n<p><strong><em>Examples:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># TODO(mrmonkey): Handle the unlikely edge cases (bug ####)</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"4-Formatting\"><a href=\"#4-Formatting\" class=\"headerlink\" title=\"4. Formatting\"></a>4. <span id=\"d\">Formatting</span></h2><p>While you should follow the style that’s already there for files that you’re modifying, the following are required for any new code.</p>\n<h3 id=\"4-1-Indentation\"><a href=\"#4-1-Indentation\" class=\"headerlink\" title=\"4.1 Indentation\"></a>4.1 Indentation</h3><p>Indent 2 spaces. No tabs.</p>\n<p>Use blank lines between blocks to improve readability. Indentation is two spaces. Whatever you do, don’t use tabs. For existing files, stay faithful to the existing indentation.</p>\n<h3 id=\"4-2-Line-Length-and-Long-Strings\"><a href=\"#4-2-Line-Length-and-Long-Strings\" class=\"headerlink\" title=\"4.2 Line Length and Long Strings\"></a>4.2 Line Length and Long Strings</h3><p>Maximum line length is 80 characters.</p>\n<p>If you have to write strings that are longer than 80 characters, this should be done with a here document or an embedded newline if possible. Literal strings that have to be longer than 80 chars and can’t sensibly be split are ok, but it’s strongly preferred to find a way to make it shorter.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># DO use &apos;here document&apos;s</span><br><span class=\"line\"></span><br><span class=\"line\">cat &lt;&lt;END;</span><br><span class=\"line\"></span><br><span class=\"line\">I am an exceptionally long</span><br><span class=\"line\"></span><br><span class=\"line\">string.</span><br><span class=\"line\"></span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Embedded newlines are ok too</span><br><span class=\"line\"></span><br><span class=\"line\">long_string=&quot;I am an exceptionally</span><br><span class=\"line\"></span><br><span class=\"line\">  long string.&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-3-Pipelines\"><a href=\"#4-3-Pipelines\" class=\"headerlink\" title=\"4.3 Pipelines\"></a>4.3 Pipelines</h3><p>Pipelines should be split one per line if they don’t all fit on one line.</p>\n<p>If a pipeline all fits on one line, it should be on one line.</p>\n<p>If not, it should be split at one pipe segment per line with the pipe on the newline and a 2 space indent for the next section of the pipe. This applies to a chain of commands combined using ‘<strong>|</strong>‘ as well as to logical compounds using ‘<strong>||</strong>‘ and ‘<strong>&amp;&amp;</strong>‘.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># All fits on one line</span><br><span class=\"line\"></span><br><span class=\"line\">command1 | command2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Long commands</span><br><span class=\"line\"></span><br><span class=\"line\">command1 \\</span><br><span class=\"line\"></span><br><span class=\"line\">  | command2 \\</span><br><span class=\"line\"></span><br><span class=\"line\">  | command3 \\</span><br><span class=\"line\"></span><br><span class=\"line\">  | command4</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-Loops\"><a href=\"#4-4-Loops\" class=\"headerlink\" title=\"4.4 Loops\"></a>4.4 Loops</h3><p>Put <strong>; do</strong> and <strong>; then</strong> on the same line as the <strong>while</strong>, <strong>for</strong> or <strong>if</strong>.</p>\n<p>Loops in shell are a bit different, but we follow the same principles as with braces when declaring functions.</p>\n<p>That is: <strong>; then</strong> and <strong>; do</strong> should be <font color=\"red\">on the same line</font> as the <strong>if/for/while</strong>.<strong>else</strong> should be on its own line and closing statements should be on their own line vertically aligned with the opening statement.</p>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">for dir in $&#123;dirs_to_cleanup&#125;; do</span><br><span class=\"line\"></span><br><span class=\"line\">  if [[ -d &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">    log_date &quot;Cleaning up old files in $&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    rm &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;/&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">    if [[ &quot;$?&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">      error_message</span><br><span class=\"line\"></span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">  else</span><br><span class=\"line\"></span><br><span class=\"line\">    mkdir -p &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    if [[ &quot;$?&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">      error_message</span><br><span class=\"line\"></span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-5-Case-statement\"><a href=\"#4-5-Case-statement\" class=\"headerlink\" title=\"4.5 Case statement\"></a>4.5 Case statement</h3><ul>\n<li><p>Indent alternatives by 2 spaces.</p>\n</li>\n<li><p>A one-line alternative needs a space after the close parenthesis of the pattern and before the <strong>;;</strong>.</p>\n</li>\n<li><p>Long or multi-command alternatives should be split over multiple lines with the pattern, actions, and <strong>;;</strong> on separate lines.</p>\n</li>\n</ul>\n<p>The matching expressions are indented one level from the ‘<strong>case</strong>‘ and ‘<strong>esac</strong>‘. Multiline actions are indented another level. In general, there is no need to quote match expressions. Pattern expressions should not be preceded by an open parenthesis. Avoid the <strong>;&amp;</strong> and <strong>;;&amp;</strong> notations.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">case &quot;$&#123;expression&#125;&quot; in</span><br><span class=\"line\"></span><br><span class=\"line\">  a)</span><br><span class=\"line\"></span><br><span class=\"line\">    variable=&quot;...&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    some_command &quot;$&#123;variable&#125;&quot; &quot;$&#123;other_expr&#125;&quot; ...</span><br><span class=\"line\"></span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  absolute)</span><br><span class=\"line\"></span><br><span class=\"line\">    actions=&quot;relative&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    another_command &quot;$&#123;actions&#125;&quot; &quot;$&#123;other_expr&#125;&quot; ...</span><br><span class=\"line\"></span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  *)</span><br><span class=\"line\"></span><br><span class=\"line\">    error &quot;Unexpected expression &apos;$&#123;expression&#125;&apos;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<p>Simple commands may be put on the same line as the pattern and <strong>;;</strong> as long as the expression remains readable. This is often appropriate for single-letter option processing. When the actions don’t fit on a single line, put the pattern on a line on its own, then the actions, then <strong>;;</strong>; also <font color=\"red\"> on a line of its own</font>. When on the same line as the actions, use a space after the close parenthesis of the pattern and another before the <strong>;;</strong>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">verbose=&apos;false&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">aflag=&apos;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">bflag=&apos;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">files=&apos;&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">while getopts &apos;abf:v&apos; flag; do</span><br><span class=\"line\"></span><br><span class=\"line\">  case &quot;$&#123;flag&#125;&quot; in</span><br><span class=\"line\"></span><br><span class=\"line\">    a) aflag=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    b) bflag=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    f) files=&quot;$&#123;OPTARG&#125;&quot; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    v) verbose=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">    *) error &quot;Unexpected option $&#123;flag&#125;&quot; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  esac</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-6-Variable-expansion\"><a href=\"#4-6-Variable-expansion\" class=\"headerlink\" title=\"4.6 Variable expansion\"></a>4.6 Variable expansion</h3><p>In order of precedence: Stay consistent with what you find; quote your variables; prefer “<strong>${var}</strong>“ over “<strong>$var</strong>“, but see details.</p>\n<p>These are meant to be guidelines, as the topic seems too controversial for a mandatory regulation.</p>\n<p>They are listed in order of precedence.</p>\n<ol>\n<li><p>Stay consistent with what you find for existing code.</p>\n</li>\n<li><p>Quote variables, see Quoting section below.</p>\n</li>\n<li><p>Don’t brace-quote single character shell specials / positional parameters, unless strictly necessary or avoiding deep confusion.</p>\n</li>\n</ol>\n<p>Prefer brace-quoting all other variables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Section of recommended cases.</span><br><span class=\"line\"></span><br><span class=\"line\"># Preferred style for &apos;special&apos; variables:</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Positional: $1&quot; &quot;$5&quot; &quot;$3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Specials: !=$!, -=$-, _=$_. ?=$?, #=$# *=$* @=$@ \\$=$$ ...&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Braces necessary:</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;many parameters: $&#123;10&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Braces avoiding confusion:</span><br><span class=\"line\"></span><br><span class=\"line\"># Output is &quot;a0b0c0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">set -- a b c</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$&#123;1&#125;0$&#123;2&#125;0$&#123;3&#125;0&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Preferred style for other variables:</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;PATH=$&#123;PATH&#125;, PWD=$&#123;PWD&#125;, mine=$&#123;some_var&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">while read f; do</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;file=$&#123;f&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done &lt; &lt;(ls -l /tmp)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Section of discouraged cases</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Unquoted vars, unbraced vars, brace-quoted single letter</span><br><span class=\"line\"></span><br><span class=\"line\"># shell specials.</span><br><span class=\"line\"></span><br><span class=\"line\">echo a=$avar &quot;b=$bvar&quot; &quot;PID=$&#123;$&#125;&quot; &quot;$&#123;1&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Confusing use: this is expanded as &quot;$&#123;1&#125;0$&#123;2&#125;0$&#123;3&#125;0&quot;,</span><br><span class=\"line\"></span><br><span class=\"line\"># not &quot;$&#123;10&#125;$&#123;20&#125;$&#123;30&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">set -- a b c</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$10$20$30&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-7-Quoting\"><a href=\"#4-7-Quoting\" class=\"headerlink\" title=\"4.7 Quoting\"></a>4.7 Quoting</h3><ul>\n<li><p>Always quote strings containing variables, command substitutions, spaces or shell meta characters, unless careful unquoted expansion is required.</p>\n</li>\n<li><p>Prefer quoting strings that are “words” (as opposed to command options or path names).</p>\n</li>\n<li><p>Never quote <strong><em>literal</em></strong> integers.</p>\n</li>\n<li><p>Be aware of the quoting rules for pattern matches in [[.</p>\n</li>\n<li><p>Use “<strong>$@</strong>“ unless you have a specific reason to use <strong>$*</strong>.</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># &apos;Single&apos; quotes indicate that no substitution is desired.</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;Double&quot; quotes indicate that substitution is required/tolerated.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Simple examples</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote command substitutions&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">flag=&quot;$(some_command and its args &quot;$@&quot; &apos;quoted separately&apos;)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote variables&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$&#123;flag&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;never quote literal integers&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">value=32</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote command substitutions&quot;, even when you expect integers</span><br><span class=\"line\"></span><br><span class=\"line\">number=&quot;$(generate_number)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;prefer quoting words&quot;, not compulsory</span><br><span class=\"line\"></span><br><span class=\"line\">readonly USE_INTEGER=&apos;true&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote shell meta characters&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &apos;Hello stranger, and well met. Earn lots of $$$&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Process $$: Done making \\$\\$\\$.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;command options or path names&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># ($1 is assumed to contain a value here)</span><br><span class=\"line\"></span><br><span class=\"line\">grep -li Hugo /dev/null &quot;$1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Less simple examples</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;quote variables, unless proven false&quot;: ccs might be empty</span><br><span class=\"line\"></span><br><span class=\"line\">git send-email --to &quot;$&#123;reviewers&#125;&quot; $&#123;ccs:+&quot;--cc&quot; &quot;$&#123;ccs&#125;&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Positional parameter precautions: $1 might be unset</span><br><span class=\"line\"></span><br><span class=\"line\"># Single quotes leave regex as-is.</span><br><span class=\"line\"></span><br><span class=\"line\">grep -cP &apos;([Ss]pecial|\\|?characters*)$&apos; $&#123;1:+&quot;$1&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># For passing on arguments,</span><br><span class=\"line\"></span><br><span class=\"line\"># &quot;$@&quot; is right almost everytime, and</span><br><span class=\"line\"></span><br><span class=\"line\"># $* is wrong almost everytime:</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"></span><br><span class=\"line\"># * $* and $@ will split on spaces, clobbering up arguments</span><br><span class=\"line\"></span><br><span class=\"line\">#   that contain spaces and dropping empty strings;</span><br><span class=\"line\"></span><br><span class=\"line\"># * &quot;$@&quot; will retain arguments as-is, so no args</span><br><span class=\"line\"></span><br><span class=\"line\">#   provided will result in no args being passed on;</span><br><span class=\"line\"></span><br><span class=\"line\">#   This is in most cases what you want to use for passing</span><br><span class=\"line\"></span><br><span class=\"line\">#   on arguments.</span><br><span class=\"line\"></span><br><span class=\"line\"># * &quot;$*&quot; expands to one argument, with all args joined</span><br><span class=\"line\"></span><br><span class=\"line\">#   by (usually) spaces,</span><br><span class=\"line\"></span><br><span class=\"line\">#   so no args provided will result in one empty string</span><br><span class=\"line\"></span><br><span class=\"line\">#   being passed on.</span><br><span class=\"line\"></span><br><span class=\"line\"># (Consult &apos;man bash&apos; for the nit-grits ;-)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">set -- 1 &quot;2 two&quot; &quot;3 three tres&quot;; echo $# ; set -- &quot;$*&quot;; echo &quot;$#, $@&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">set -- 1 &quot;2 two&quot; &quot;3 three tres&quot;; echo $# ; set -- &quot;$@&quot;; echo &quot;$#, $@&quot;)</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"5-Features-and-Bugs\"><a href=\"#5-Features-and-Bugs\" class=\"headerlink\" title=\"5. Features and Bugs\"></a>5. <span id=\"e\">Features and Bugs</span></h2><h3 id=\"5-1-Command-Substitution\"><a href=\"#5-1-Command-Substitution\" class=\"headerlink\" title=\"5.1 Command Substitution\"></a>5.1 Command Substitution</h3><p>Use <strong>$(command)</strong> instead of backticks.</p>\n<p>Nested backticks require escaping the inner ones with <strong>.</strong> The <strong>$(command)</strong> format doesn’t change when nested and is easier to read.</p>\n<p><strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># This is preferred:</span><br><span class=\"line\"></span><br><span class=\"line\">var=&quot;$(command &quot;$(command1)&quot;)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This is not:</span><br><span class=\"line\"></span><br><span class=\"line\">var=&quot;`command \\`command1\\``&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-Test-and\"><a href=\"#5-2-Test-and\" class=\"headerlink\" title=\"5.2 Test, [ and [[\"></a>5.2 Test, [ and [[</h3><p><strong>[[ … ]]</strong> is preferred over <strong>[</strong>, <strong>test</strong> and <strong>/usr/bin/[</strong>.</p>\n<p><strong>[[ … ]]</strong> reduces errors as no pathname expansion or word splitting takes place between <strong>[[ and ]]</strong> and <strong>[[ … ]]</strong> allows for regular expression matching where [ … ] does not.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># This ensures the string on the left is made up of characters in the</span><br><span class=\"line\"></span><br><span class=\"line\"># alnum character class followed by the string name.</span><br><span class=\"line\"></span><br><span class=\"line\"># Note that the RHS should not be quoted here.</span><br><span class=\"line\"></span><br><span class=\"line\"># For the gory details, see</span><br><span class=\"line\"></span><br><span class=\"line\"># E14 at http://tiswww.case.edu/php/chet/bash/FAQ</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;filename&quot; =~ ^[[:alnum:]]+name ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Match&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This matches the exact pattern &quot;f*&quot; (Does not match in this case)</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;filename&quot; == &quot;f*&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Match&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This gives a &quot;too many arguments&quot; error as f* is expanded to the</span><br><span class=\"line\"></span><br><span class=\"line\"># contents of the current directory</span><br><span class=\"line\"></span><br><span class=\"line\">if [ &quot;filename&quot; == f* ]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Match&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-3-Testing-Strings\"><a href=\"#5-3-Testing-Strings\" class=\"headerlink\" title=\"5.3 Testing Strings\"></a>5.3 Testing Strings</h3><p>Use quotes rather than filler characters where possible.</p>\n<p>Bash is smart enough to deal with an empty string in a test. So, given that the code is much easier to read, use tests for empty/non-empty strings or empty strings rather than filler characters.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Do this:</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;&quot; = &quot;some_string&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># -z (string length is zero) and -n (string length is not zero) are</span><br><span class=\"line\"></span><br><span class=\"line\"># preferred over testing for an empty string</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -z &quot;$&#123;my_var&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This is OK (ensure quotes on the empty side), but not preferred:</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;&quot; = &quot;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Not this:</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;X&quot; = &quot;some_stringX&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>To avoid confusion about what you’re testing for, explicitly use <strong>-z</strong> or <strong>-n</strong>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Use this</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -n &quot;$&#123;my_var&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Instead of this as errors can occur if $&#123;my_var&#125; expands to a test</span><br><span class=\"line\"></span><br><span class=\"line\"># flag</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;my_var&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-4-Wildcard-Expansion-of-Filenames\"><a href=\"#5-4-Wildcard-Expansion-of-Filenames\" class=\"headerlink\" title=\"5.4 Wildcard Expansion of Filenames\"></a>5.4 Wildcard Expansion of Filenames</h3><p>Use an explicit path when doing wildcard expansion of filenames.</p>\n<p>As filenames can begin with a -, it’s a lot safer to expand wildcards with ./<em> instead of </em> .</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Here&apos;s the contents of the directory:</span><br><span class=\"line\"></span><br><span class=\"line\"># -f  -r  somedir  somefile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This deletes almost everything in the directory by force</span><br><span class=\"line\"></span><br><span class=\"line\">psa@bilby$ rm -v *</span><br><span class=\"line\"></span><br><span class=\"line\">removed directory: `somedir&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">removed `somefile&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># As opposed to:</span><br><span class=\"line\"></span><br><span class=\"line\">psa@bilby$ rm -v ./*</span><br><span class=\"line\"></span><br><span class=\"line\">removed `./-f&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">removed `./-r&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">rm: cannot remove `./somedir&apos;: Is a directory</span><br><span class=\"line\"></span><br><span class=\"line\">removed `./somefile&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-5-Eval\"><a href=\"#5-5-Eval\" class=\"headerlink\" title=\"5.5 Eval\"></a>5.5 Eval</h3><p><strong>eval</strong> should be avoided.  </p>\n<p>Eval munges the input when used for assignment to variables and can set variables without making it possible to check what those variables were.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># What does this set?</span><br><span class=\"line\"></span><br><span class=\"line\"># Did it succeed? In part or whole?</span><br><span class=\"line\"></span><br><span class=\"line\">eval $(set_my_variables)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># What happens if one of the returned values has a space in it?</span><br><span class=\"line\"></span><br><span class=\"line\">variable=&quot;$(eval some_function)&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-6-Pipes-to-While\"><a href=\"#5-6-Pipes-to-While\" class=\"headerlink\" title=\"5.6 Pipes to While\"></a>5.6 Pipes to While</h3><p>Use process substitution or for loops in preference to piping to while. Variables modified in a while loop do not propagate to the parent because the loop’s commands run in a subshell.</p>\n<p>The implicit subshell in a pipe to while can make it difficult to track down bugs.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">last_line=&apos;NULL&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">your_command | while read line; do</span><br><span class=\"line\"></span><br><span class=\"line\">  last_line=&quot;$&#123;line&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This will output &apos;NULL&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;$&#123;last_line&#125;&quot;</span><br></pre></td></tr></table></figure>\n<p>Use a for loop if you are confident that the input will not contain spaces or special characters (usually, this means not user input).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">total=0</span><br><span class=\"line\"></span><br><span class=\"line\"># Only do this if there are no spaces in return values.</span><br><span class=\"line\"></span><br><span class=\"line\">for value in $(command); do</span><br><span class=\"line\"></span><br><span class=\"line\">  total+=&quot;$&#123;value&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>Using process substitution allows redirecting output but puts the commands in an explicit subshell rather than the implicit subshell that bash creates for the while loop.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">total=0</span><br><span class=\"line\"></span><br><span class=\"line\">last_file=</span><br><span class=\"line\"></span><br><span class=\"line\">while read count filename; do</span><br><span class=\"line\"></span><br><span class=\"line\">  total+=&quot;$&#123;count&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  last_file=&quot;$&#123;filename&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done &lt; &lt;(your_command | uniq -c)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># This will output the second field of the last line of output from</span><br><span class=\"line\"></span><br><span class=\"line\"># the command.</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Total = $&#123;total&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Last one = $&#123;last_file&#125;&quot;</span><br></pre></td></tr></table></figure>\n<p>Use while loops where it is not necessary to pass complex results to the parent shell - this is typically where some more complex “parsing” is required. Beware that simple examples are probably more easily done with a tool such as awk. This may also be useful where you specifically don’t want to change the parent scope variables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Trivial implementation of awk expression:</span><br><span class=\"line\"></span><br><span class=\"line\">#   awk &apos;$3 == &quot;nfs&quot; &#123; print $2 &quot; maps to &quot; $1 &#125;&apos; /proc/mounts</span><br><span class=\"line\"></span><br><span class=\"line\">cat /proc/mounts | while read src dest type opts rest; do</span><br><span class=\"line\"></span><br><span class=\"line\">  if [[ $&#123;type&#125; == &quot;nfs&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;NFS $&#123;dest&#125; maps to $&#123;src&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"6-Naming-Conventions\"><a href=\"#6-Naming-Conventions\" class=\"headerlink\" title=\"6. Naming Conventions\"></a>6. <span id=\"f\">Naming Conventions</span></h2><h3 id=\"6-1-Function-Names\"><a href=\"#6-1-Function-Names\" class=\"headerlink\" title=\"6.1 Function Names\"></a>6.1 Function Names</h3><p>Lower-case, with underscores to separate words. Separate libraries with <strong>::</strong>. Parentheses are required after the function name. The keyword <strong><em>function</em></strong> is optional, but must be used consistently throughout a project.</p>\n<p>If you’re writing single functions, use lowercase and separate words with underscore. If you’re writing a package, separate package names with <strong>::</strong>. Braces must be on the same line as the function name (as with other languages at Google) and no space between the function name and the parenthesis.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Single function</span><br><span class=\"line\"></span><br><span class=\"line\">my_func() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Part of a package</span><br><span class=\"line\"></span><br><span class=\"line\">mypackage::my_func() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The <strong>function</strong> keyword is extraneous when “()” is present after the function name, but enhances quick identification of functions.</p>\n<h3 id=\"6-2-Variable-Names\"><a href=\"#6-2-Variable-Names\" class=\"headerlink\" title=\"6.2 Variable Names\"></a>6.2 Variable Names</h3><p>As for function names.</p>\n<p>Variables names for loops should be similarly named for any variable you’re looping through.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">for zone in $&#123;zones&#125;; do</span><br><span class=\"line\"></span><br><span class=\"line\">  something_with &quot;$&#123;zone&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-3-Constants-and-Environment-Variable-Names\"><a href=\"#6-3-Constants-and-Environment-Variable-Names\" class=\"headerlink\" title=\"6.3 Constants and Environment Variable Names\"></a>6.3 Constants and Environment Variable Names</h3><p>All caps, separated with underscores, declared at the top of the file.</p>\n<p>Constants and anything exported to the environment should be capitalized.  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Constant</span><br><span class=\"line\"></span><br><span class=\"line\">readonly PATH_TO_FILES=&apos;/some/path&apos;  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Both constant and environment</span><br><span class=\"line\"></span><br><span class=\"line\">declare -xr ORACLE_SID=&apos;PROD&apos;</span><br></pre></td></tr></table></figure>\n<p>Some things become constant at their first setting (for example, via getopts). Thus, it’s OK to set a constant in getopts or based on a condition, but it should be made readonly immediately afterwards. Note that <strong>declare</strong> doesn’t operate on global variables within functions, so <strong>readonly</strong> or <strong>export</strong> is recommended instead.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">VERBOSE=&apos;false&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">while getopts &apos;v&apos; flag; do</span><br><span class=\"line\"></span><br><span class=\"line\">  case &quot;$&#123;flag&#125;&quot; in</span><br><span class=\"line\"></span><br><span class=\"line\">    v) VERBOSE=&apos;true&apos; ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  esac</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\">readonly VERBOSE</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-4-Source-Filenames\"><a href=\"#6-4-Source-Filenames\" class=\"headerlink\" title=\"6.4 Source Filenames\"></a>6.4 Source Filenames</h3><p>Lowercase, with underscores to separate words if desired.</p>\n<p>This is for consistency with other code styles in Google: <strong>maketemplate</strong> or <strong>make_template</strong> but <font color=\"red\">not</font> <strong>make-template</strong>.</p>\n<h3 id=\"6-5-Read-only-Variables\"><a href=\"#6-5-Read-only-Variables\" class=\"headerlink\" title=\"6.5 Read-only Variables\"></a>6.5 Read-only Variables</h3><p>Use <strong>readonly</strong> or <strong>declare -r</strong> to ensure they’re read only.</p>\n<p>As globals are widely used in shell, it’s important to catch errors when working with them. When you declare a variable that is meant to be read-only, make this explicit.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">zip_version=&quot;$(dpkg --status zip | grep Version: | cut -d &apos; &apos; -f 2)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -z &quot;$&#123;zip_version&#125;&quot; ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  error_message</span><br><span class=\"line\"></span><br><span class=\"line\">else</span><br><span class=\"line\"></span><br><span class=\"line\">  readonly zip_version</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-6-Use-Local-Variables\"><a href=\"#6-6-Use-Local-Variables\" class=\"headerlink\" title=\"6.6 Use Local Variables\"></a>6.6 Use Local Variables</h3><p>Declare function-specific variables with <strong>local</strong>. Declaration and assignment should be on different lines.</p>\n<p>Ensure that local variables are only seen inside a function and its children by using <strong>local</strong> when declaring them. This avoids polluting the global name space and inadvertently setting variables that may have significance outside the function.</p>\n<p>Declaration and assignment must be separate statements when the assignment value is provided by a command substitution; as the ‘local’ builtin does not propagate the exit code from the command substitution.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">my_func2() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  local name=&quot;$1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  # Separate lines for declaration and assignment:</span><br><span class=\"line\"></span><br><span class=\"line\">  local my_var</span><br><span class=\"line\"></span><br><span class=\"line\">  my_var=&quot;$(my_func)&quot; || return</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  # DO NOT do this: $? contains the exit code of &apos;local&apos;, not my_func</span><br><span class=\"line\"></span><br><span class=\"line\">  local my_var=&quot;$(my_func)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  [[ $? -eq 0 ]] || return</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-7-Function-Location\"><a href=\"#6-7-Function-Location\" class=\"headerlink\" title=\"6.7 Function Location\"></a>6.7 Function Location</h3><p>Put all functions together in the file just below constants. Don’t hide executable code between functions.</p>\n<p>If you’ve got functions, put them all together near the top of the file. Only includes, <strong>set</strong> statements and setting constants may be done before declaring functions.</p>\n<p>Don’t hide executable code between functions. Doing so makes the code difficult to follow and results in nasty surprises when debugging.</p>\n<h3 id=\"6-8-main\"><a href=\"#6-8-main\" class=\"headerlink\" title=\"6.8 main\"></a>6.8 main</h3><p>A function called <strong><em>main</em></strong> is required for scripts long enough to contain at least one other function.</p>\n<p>In order to easily find the start of the program, put the main program in a function called <strong>main</strong> as the bottom most function. This provides consistency with the rest of the code base as well as allowing you to define more variables as <strong>local</strong> (which can’t be done if the main code is not a function). The last non-comment line in the file should be a call to <strong>main</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">main &quot;$@&quot;</span><br></pre></td></tr></table></figure>\n<p>Obviously, for short scripts where it’s just a linear flow, <strong>main</strong> is overkill and so is not required.</p>\n<h2 id=\"7-Calling-Commands\"><a href=\"#7-Calling-Commands\" class=\"headerlink\" title=\"7. Calling Commands\"></a>7. <span id=\"g\">Calling Commands</span></h2><h3 id=\"7-1-Checking-Return-Values\"><a href=\"#7-1-Checking-Return-Values\" class=\"headerlink\" title=\"7.1 Checking Return Values\"></a>7.1 Checking Return Values</h3><p>Always check return values and give informative return values.</p>\n<p>For unpiped commands, use <strong>$?</strong> or check directly via an <strong>if</strong> statement to keep it simple.</p>\n<p>Example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">if ! mv &quot;$&#123;file_list&#125;&quot; &quot;$&#123;dest_dir&#125;/&quot; ; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Unable to move $&#123;file_list&#125; to $&#123;dest_dir&#125;&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">  exit &quot;$&#123;E_BAD_MOVE&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Or</span><br><span class=\"line\"></span><br><span class=\"line\">mv &quot;$&#123;file_list&#125;&quot; &quot;$&#123;dest_dir&#125;/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$?&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Unable to move $&#123;file_list&#125; to $&#123;dest_dir&#125;&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">  exit &quot;$&#123;E_BAD_MOVE&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>Bash also has the <strong>PIPESTATUS</strong> variable that allows checking of the return code from all parts of a pipe. If it’s only necessary to check success or failure of the whole pipe, then the following is acceptable:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">tar -cf - ./* | ( cd &quot;$&#123;dir&#125;&quot; &amp;&amp; tar -xf - )</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;PIPESTATUS[0]&#125;&quot; -ne 0 || &quot;$&#123;PIPESTATUS[1]&#125;&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  echo &quot;Unable to tar files to $&#123;dir&#125;&quot; &gt;&amp;2</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>However, as <strong>PIPESTATUS</strong> will be overwritten as soon as you do any other command, if you need to act differently on errors based on where it happened in the pipe, you’ll need to assign <strong>PIPESTATUS</strong> to another variable immediately after running the command (don’t forget that [ is a command and will wipe out <strong>PIPESTATUS</strong>).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">tar -cf - ./* | ( cd &quot;$&#123;DIR&#125;&quot; &amp;&amp; tar -xf - )</span><br><span class=\"line\"></span><br><span class=\"line\">return_codes=($&#123;PIPESTATUS[*]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;return_codes[0]&#125;&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">if [[ &quot;$&#123;return_codes[1]&#125;&quot; -ne 0 ]]; then</span><br><span class=\"line\"></span><br><span class=\"line\">  do_something_else</span><br><span class=\"line\"></span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-Builtin-Commands-vs-External-Commands\"><a href=\"#7-2-Builtin-Commands-vs-External-Commands\" class=\"headerlink\" title=\"7.2 Builtin Commands vs. External Commands\"></a>7.2 Builtin Commands vs. External Commands</h3><p>Given the choice between invoking a shell builtin and invoking a separate process, choose the builtin.</p>\n<p>We prefer the use of builtins such as the Parameter Expansion functions in <strong>bash(1)</strong> as it’s more robust and portable (especially when compared to things like sed).  </p>\n<p> <strong><em>Example:</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># Prefer this:</span><br><span class=\"line\"></span><br><span class=\"line\">addition=$(($&#123;X&#125; + $&#123;Y&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">substitution=&quot;$&#123;string/#foo/bar&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Instead of this:</span><br><span class=\"line\"></span><br><span class=\"line\">addition=&quot;$(expr $&#123;X&#125; + $&#123;Y&#125;)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">substitution=&quot;$(echo &quot;$&#123;string&#125;&quot; | sed -e &apos;s/^foo/bar/&apos;)&quot;</span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n<h2 id=\"8-Conclusion\"><a href=\"#8-Conclusion\" class=\"headerlink\" title=\"8. Conclusion\"></a>8. <span id=\"h\">Conclusion</span></h2><p>Use common sense and <strong>BE CONSISTENT</strong>.</p>\n<p>Please take a few minutes to read the Parting Words section at the bottom of the <strong>C++ Guide</strong>.</p>\n<p><strong><a href=\"#contents\">Go Contents</a></strong></p>\n"},{"title":"ubuntu安装为知笔记","date":"2017-01-20T07:38:17.000Z","_content":"\n今天在ubunu上重新安装wiznote时，发现[官方](http://www.wiz.cn/wiznote-linux.html)提供的方法只能编译安装，无奈步骤繁琐。接着我尝试了之前的安装方法，发现会报错。\n\n## 1.添加软件源来安装\nubuntu下可以通过软件源来进行安装，命令如下\n```\n$ sudo add-apt-repository ppa:wiznote-team\n$ sudo apt-get update\n$ sudo apt-get install wiznote\n```\n在更新时，会报`Hash Sum mismatch`\n```\nW: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-amd64/Packages  Hash Sum mismatch\nW: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-i386/Packages  Hash Sum mismatch\nW: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/i18n/Translation-en  Hash Sum mismatch\n```\n所以再执行install命令也会失败！！\n\n## 2.直接从软件源上下载安装包\n\n### 2.1 下载\n执行如下命令时\n```\n$ sudo add-apt-repository ppa:wiznote-team\n```\n会输出如下日志\n```\n The code is hosted here: https://github.com/WizTeam/WizQTClient\nvisit our homepage for detailed info: http://www.wiznote.cn/\nAny questions and bugs report to: <email address hidden>\nThe binary name is WizNote. Please use WizNote to start program in cmd.\n More info: https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa\nPress [ENTER] to continue or ctrl-c to cancel adding it\n```\n\n打开[最后一个链接](https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa)之后，点击 [View package details](https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages) 就会跳转到如下页面\nhttps://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages  点击其中的版本，下载相应的deb包。\n\n### 2.2安装方法\n\n- 方法1\n双击下载文件，使用软件中心安装  \n- 方法2\n```\ndpkg -i xxx.deb\n```\n\n","source":"_posts/ubuntu安装为知笔记.md","raw":"---\ntitle: ubuntu安装为知笔记\ndate: 2017-01-20 15:38:17\ntags: ubuntu\n---\n\n今天在ubunu上重新安装wiznote时，发现[官方](http://www.wiz.cn/wiznote-linux.html)提供的方法只能编译安装，无奈步骤繁琐。接着我尝试了之前的安装方法，发现会报错。\n\n## 1.添加软件源来安装\nubuntu下可以通过软件源来进行安装，命令如下\n```\n$ sudo add-apt-repository ppa:wiznote-team\n$ sudo apt-get update\n$ sudo apt-get install wiznote\n```\n在更新时，会报`Hash Sum mismatch`\n```\nW: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-amd64/Packages  Hash Sum mismatch\nW: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-i386/Packages  Hash Sum mismatch\nW: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/i18n/Translation-en  Hash Sum mismatch\n```\n所以再执行install命令也会失败！！\n\n## 2.直接从软件源上下载安装包\n\n### 2.1 下载\n执行如下命令时\n```\n$ sudo add-apt-repository ppa:wiznote-team\n```\n会输出如下日志\n```\n The code is hosted here: https://github.com/WizTeam/WizQTClient\nvisit our homepage for detailed info: http://www.wiznote.cn/\nAny questions and bugs report to: <email address hidden>\nThe binary name is WizNote. Please use WizNote to start program in cmd.\n More info: https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa\nPress [ENTER] to continue or ctrl-c to cancel adding it\n```\n\n打开[最后一个链接](https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa)之后，点击 [View package details](https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages) 就会跳转到如下页面\nhttps://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages  点击其中的版本，下载相应的deb包。\n\n### 2.2安装方法\n\n- 方法1\n双击下载文件，使用软件中心安装  \n- 方法2\n```\ndpkg -i xxx.deb\n```\n\n","slug":"ubuntu安装为知笔记","published":1,"updated":"2017-01-20T08:00:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsxg0025x0s6af3r1cxo","content":"<p>今天在ubunu上重新安装wiznote时，发现<a href=\"http://www.wiz.cn/wiznote-linux.html\" target=\"_blank\" rel=\"noopener\">官方</a>提供的方法只能编译安装，无奈步骤繁琐。接着我尝试了之前的安装方法，发现会报错。</p>\n<h2 id=\"1-添加软件源来安装\"><a href=\"#1-添加软件源来安装\" class=\"headerlink\" title=\"1.添加软件源来安装\"></a>1.添加软件源来安装</h2><p>ubuntu下可以通过软件源来进行安装，命令如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:wiznote-team</span><br><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install wiznote</span><br></pre></td></tr></table></figure></p>\n<p>在更新时，会报<code>Hash Sum mismatch</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-amd64/Packages  Hash Sum mismatch</span><br><span class=\"line\">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-i386/Packages  Hash Sum mismatch</span><br><span class=\"line\">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/i18n/Translation-en  Hash Sum mismatch</span><br></pre></td></tr></table></figure></p>\n<p>所以再执行install命令也会失败！！</p>\n<h2 id=\"2-直接从软件源上下载安装包\"><a href=\"#2-直接从软件源上下载安装包\" class=\"headerlink\" title=\"2.直接从软件源上下载安装包\"></a>2.直接从软件源上下载安装包</h2><h3 id=\"2-1-下载\"><a href=\"#2-1-下载\" class=\"headerlink\" title=\"2.1 下载\"></a>2.1 下载</h3><p>执行如下命令时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:wiznote-team</span><br></pre></td></tr></table></figure></p>\n<p>会输出如下日志<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> The code is hosted here: https://github.com/WizTeam/WizQTClient</span><br><span class=\"line\">visit our homepage for detailed info: http://www.wiznote.cn/</span><br><span class=\"line\">Any questions and bugs report to: &lt;email address hidden&gt;</span><br><span class=\"line\">The binary name is WizNote. Please use WizNote to start program in cmd.</span><br><span class=\"line\"> More info: https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa</span><br><span class=\"line\">Press [ENTER] to continue or ctrl-c to cancel adding it</span><br></pre></td></tr></table></figure></p>\n<p>打开<a href=\"https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa\" target=\"_blank\" rel=\"noopener\">最后一个链接</a>之后，点击 <a href=\"https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages\" target=\"_blank\" rel=\"noopener\">View package details</a> 就会跳转到如下页面<br><a href=\"https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages\" target=\"_blank\" rel=\"noopener\">https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages</a>  点击其中的版本，下载相应的deb包。</p>\n<h3 id=\"2-2安装方法\"><a href=\"#2-2安装方法\" class=\"headerlink\" title=\"2.2安装方法\"></a>2.2安装方法</h3><ul>\n<li>方法1<br>双击下载文件，使用软件中心安装  </li>\n<li>方法2<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg -i xxx.deb</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>今天在ubunu上重新安装wiznote时，发现<a href=\"http://www.wiz.cn/wiznote-linux.html\" target=\"_blank\" rel=\"noopener\">官方</a>提供的方法只能编译安装，无奈步骤繁琐。接着我尝试了之前的安装方法，发现会报错。</p>\n<h2 id=\"1-添加软件源来安装\"><a href=\"#1-添加软件源来安装\" class=\"headerlink\" title=\"1.添加软件源来安装\"></a>1.添加软件源来安装</h2><p>ubuntu下可以通过软件源来进行安装，命令如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:wiznote-team</span><br><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install wiznote</span><br></pre></td></tr></table></figure></p>\n<p>在更新时，会报<code>Hash Sum mismatch</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-amd64/Packages  Hash Sum mismatch</span><br><span class=\"line\">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-i386/Packages  Hash Sum mismatch</span><br><span class=\"line\">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/i18n/Translation-en  Hash Sum mismatch</span><br></pre></td></tr></table></figure></p>\n<p>所以再执行install命令也会失败！！</p>\n<h2 id=\"2-直接从软件源上下载安装包\"><a href=\"#2-直接从软件源上下载安装包\" class=\"headerlink\" title=\"2.直接从软件源上下载安装包\"></a>2.直接从软件源上下载安装包</h2><h3 id=\"2-1-下载\"><a href=\"#2-1-下载\" class=\"headerlink\" title=\"2.1 下载\"></a>2.1 下载</h3><p>执行如下命令时<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:wiznote-team</span><br></pre></td></tr></table></figure></p>\n<p>会输出如下日志<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> The code is hosted here: https://github.com/WizTeam/WizQTClient</span><br><span class=\"line\">visit our homepage for detailed info: http://www.wiznote.cn/</span><br><span class=\"line\">Any questions and bugs report to: &lt;email address hidden&gt;</span><br><span class=\"line\">The binary name is WizNote. Please use WizNote to start program in cmd.</span><br><span class=\"line\"> More info: https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa</span><br><span class=\"line\">Press [ENTER] to continue or ctrl-c to cancel adding it</span><br></pre></td></tr></table></figure></p>\n<p>打开<a href=\"https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa\" target=\"_blank\" rel=\"noopener\">最后一个链接</a>之后，点击 <a href=\"https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages\" target=\"_blank\" rel=\"noopener\">View package details</a> 就会跳转到如下页面<br><a href=\"https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages\" target=\"_blank\" rel=\"noopener\">https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages</a>  点击其中的版本，下载相应的deb包。</p>\n<h3 id=\"2-2安装方法\"><a href=\"#2-2安装方法\" class=\"headerlink\" title=\"2.2安装方法\"></a>2.2安装方法</h3><ul>\n<li>方法1<br>双击下载文件，使用软件中心安装  </li>\n<li>方法2<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg -i xxx.deb</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"website enable ssl","date":"2017-08-09T12:33:10.000Z","_content":"\n# website enable ssl\n\n## 1. nginx enable ssl\n网站启用ssl需要nginx ssl 模块的支持\n### 1.1 查看nginx是否编译了ssl模块\n```\nnginx -V\n```\n### 1.2 编译ssl模块\n```\ncd nginx/src/dir\n./configure --with-http_ssl_module\nmake && make install\n```\n\n## 2. 启用ssl\n### 2.1 生成证书\n```\nsudo openssl genrsa -des3 -out server.key 2048\nsudo openssl req -new -key server.key -out server.csr\nsudo cp server.key server.key.org\nsudo openssl rsa -in server.key.org -out server.key\nsudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n```\n\n## 2.2 在server区域，指定证书位置\n``` \nssl_certificate /dir/server.crt;\nssl_certificate_key /dir/server.key;\n```\n## 2.3 修改监听的端口号\n```\nlisten       443 ssl; \nserver_name  ssl.test.cn; \n```\n\n## 2.4 将http的访问redirect到https\n在http区域添加如下内容\n```\nserver {\n       listen       80;\n       server_name  ssl.test.cn;;\n       return 301 https://ssl.test.cn:443$request_uri;\n}\n```\n\n## 2.5 重启或者reloadnginx\n\n## 2.6 测试\n访问http://ssl.test.cn\n已经会自动跳转到https://ssl.test.cn\n","source":"_posts/website-enable-ssl.md","raw":"---\ntitle: website enable ssl\ndate: 2017-08-09 20:33:10\ntags: [nginx,ssl]\n---\n\n# website enable ssl\n\n## 1. nginx enable ssl\n网站启用ssl需要nginx ssl 模块的支持\n### 1.1 查看nginx是否编译了ssl模块\n```\nnginx -V\n```\n### 1.2 编译ssl模块\n```\ncd nginx/src/dir\n./configure --with-http_ssl_module\nmake && make install\n```\n\n## 2. 启用ssl\n### 2.1 生成证书\n```\nsudo openssl genrsa -des3 -out server.key 2048\nsudo openssl req -new -key server.key -out server.csr\nsudo cp server.key server.key.org\nsudo openssl rsa -in server.key.org -out server.key\nsudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n```\n\n## 2.2 在server区域，指定证书位置\n``` \nssl_certificate /dir/server.crt;\nssl_certificate_key /dir/server.key;\n```\n## 2.3 修改监听的端口号\n```\nlisten       443 ssl; \nserver_name  ssl.test.cn; \n```\n\n## 2.4 将http的访问redirect到https\n在http区域添加如下内容\n```\nserver {\n       listen       80;\n       server_name  ssl.test.cn;;\n       return 301 https://ssl.test.cn:443$request_uri;\n}\n```\n\n## 2.5 重启或者reloadnginx\n\n## 2.6 测试\n访问http://ssl.test.cn\n已经会自动跳转到https://ssl.test.cn\n","slug":"website-enable-ssl","published":1,"updated":"2017-08-30T13:49:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn9vlsxh0029x0s6fmiqmuay","content":"<h1 id=\"website-enable-ssl\"><a href=\"#website-enable-ssl\" class=\"headerlink\" title=\"website enable ssl\"></a>website enable ssl</h1><h2 id=\"1-nginx-enable-ssl\"><a href=\"#1-nginx-enable-ssl\" class=\"headerlink\" title=\"1. nginx enable ssl\"></a>1. nginx enable ssl</h2><p>网站启用ssl需要nginx ssl 模块的支持</p>\n<h3 id=\"1-1-查看nginx是否编译了ssl模块\"><a href=\"#1-1-查看nginx是否编译了ssl模块\" class=\"headerlink\" title=\"1.1 查看nginx是否编译了ssl模块\"></a>1.1 查看nginx是否编译了ssl模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -V</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-编译ssl模块\"><a href=\"#1-2-编译ssl模块\" class=\"headerlink\" title=\"1.2 编译ssl模块\"></a>1.2 编译ssl模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx/src/dir</span><br><span class=\"line\">./configure --with-http_ssl_module</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-启用ssl\"><a href=\"#2-启用ssl\" class=\"headerlink\" title=\"2. 启用ssl\"></a>2. 启用ssl</h2><h3 id=\"2-1-生成证书\"><a href=\"#2-1-生成证书\" class=\"headerlink\" title=\"2.1 生成证书\"></a>2.1 生成证书</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo openssl genrsa -des3 -out server.key 2048</span><br><span class=\"line\">sudo openssl req -new -key server.key -out server.csr</span><br><span class=\"line\">sudo cp server.key server.key.org</span><br><span class=\"line\">sudo openssl rsa -in server.key.org -out server.key</span><br><span class=\"line\">sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-在server区域，指定证书位置\"><a href=\"#2-2-在server区域，指定证书位置\" class=\"headerlink\" title=\"2.2 在server区域，指定证书位置\"></a>2.2 在server区域，指定证书位置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssl_certificate /dir/server.crt;</span><br><span class=\"line\">ssl_certificate_key /dir/server.key;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-修改监听的端口号\"><a href=\"#2-3-修改监听的端口号\" class=\"headerlink\" title=\"2.3 修改监听的端口号\"></a>2.3 修改监听的端口号</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen       443 ssl; </span><br><span class=\"line\">server_name  ssl.test.cn;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-将http的访问redirect到https\"><a href=\"#2-4-将http的访问redirect到https\" class=\"headerlink\" title=\"2.4 将http的访问redirect到https\"></a>2.4 将http的访问redirect到https</h2><p>在http区域添加如下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen       80;</span><br><span class=\"line\">       server_name  ssl.test.cn;;</span><br><span class=\"line\">       return 301 https://ssl.test.cn:443$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-5-重启或者reloadnginx\"><a href=\"#2-5-重启或者reloadnginx\" class=\"headerlink\" title=\"2.5 重启或者reloadnginx\"></a>2.5 重启或者reloadnginx</h2><h2 id=\"2-6-测试\"><a href=\"#2-6-测试\" class=\"headerlink\" title=\"2.6 测试\"></a>2.6 测试</h2><p>访问<a href=\"http://ssl.test.cn\" target=\"_blank\" rel=\"noopener\">http://ssl.test.cn</a><br>已经会自动跳转到<a href=\"https://ssl.test.cn\" target=\"_blank\" rel=\"noopener\">https://ssl.test.cn</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"website-enable-ssl\"><a href=\"#website-enable-ssl\" class=\"headerlink\" title=\"website enable ssl\"></a>website enable ssl</h1><h2 id=\"1-nginx-enable-ssl\"><a href=\"#1-nginx-enable-ssl\" class=\"headerlink\" title=\"1. nginx enable ssl\"></a>1. nginx enable ssl</h2><p>网站启用ssl需要nginx ssl 模块的支持</p>\n<h3 id=\"1-1-查看nginx是否编译了ssl模块\"><a href=\"#1-1-查看nginx是否编译了ssl模块\" class=\"headerlink\" title=\"1.1 查看nginx是否编译了ssl模块\"></a>1.1 查看nginx是否编译了ssl模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -V</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-编译ssl模块\"><a href=\"#1-2-编译ssl模块\" class=\"headerlink\" title=\"1.2 编译ssl模块\"></a>1.2 编译ssl模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx/src/dir</span><br><span class=\"line\">./configure --with-http_ssl_module</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-启用ssl\"><a href=\"#2-启用ssl\" class=\"headerlink\" title=\"2. 启用ssl\"></a>2. 启用ssl</h2><h3 id=\"2-1-生成证书\"><a href=\"#2-1-生成证书\" class=\"headerlink\" title=\"2.1 生成证书\"></a>2.1 生成证书</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo openssl genrsa -des3 -out server.key 2048</span><br><span class=\"line\">sudo openssl req -new -key server.key -out server.csr</span><br><span class=\"line\">sudo cp server.key server.key.org</span><br><span class=\"line\">sudo openssl rsa -in server.key.org -out server.key</span><br><span class=\"line\">sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-在server区域，指定证书位置\"><a href=\"#2-2-在server区域，指定证书位置\" class=\"headerlink\" title=\"2.2 在server区域，指定证书位置\"></a>2.2 在server区域，指定证书位置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssl_certificate /dir/server.crt;</span><br><span class=\"line\">ssl_certificate_key /dir/server.key;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-修改监听的端口号\"><a href=\"#2-3-修改监听的端口号\" class=\"headerlink\" title=\"2.3 修改监听的端口号\"></a>2.3 修改监听的端口号</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen       443 ssl; </span><br><span class=\"line\">server_name  ssl.test.cn;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-将http的访问redirect到https\"><a href=\"#2-4-将http的访问redirect到https\" class=\"headerlink\" title=\"2.4 将http的访问redirect到https\"></a>2.4 将http的访问redirect到https</h2><p>在http区域添加如下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen       80;</span><br><span class=\"line\">       server_name  ssl.test.cn;;</span><br><span class=\"line\">       return 301 https://ssl.test.cn:443$request_uri;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-5-重启或者reloadnginx\"><a href=\"#2-5-重启或者reloadnginx\" class=\"headerlink\" title=\"2.5 重启或者reloadnginx\"></a>2.5 重启或者reloadnginx</h2><h2 id=\"2-6-测试\"><a href=\"#2-6-测试\" class=\"headerlink\" title=\"2.6 测试\"></a>2.6 测试</h2><p>访问<a href=\"http://ssl.test.cn\" target=\"_blank\" rel=\"noopener\">http://ssl.test.cn</a><br>已经会自动跳转到<a href=\"https://ssl.test.cn\" target=\"_blank\" rel=\"noopener\">https://ssl.test.cn</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjn9vlsik0004x0s6tmdvshvx","category_id":"cjn9vlsin0007x0s6kaxee5yy","_id":"cjn9vlsit000jx0s6o1yqc0mg"},{"post_id":"cjn9vlsis000fx0s6nzjczgt3","category_id":"cjn9vlsiu000kx0s6vdwq9vhs","_id":"cjn9vlsiz000vx0s6t3qdq2zw"},{"post_id":"cjn9vlsiu000lx0s6t8n1v8yy","category_id":"cjn9vlsiu000kx0s6vdwq9vhs","_id":"cjn9vlsj1000zx0s6unjxuh3q"},{"post_id":"cjn9vlsx4001ux0s6wy3fyj98","category_id":"cjn9vlsiu000kx0s6vdwq9vhs","_id":"cjn9vlsxf0023x0s604dq5cy0"},{"post_id":"cjn9vlsx3001sx0s6d6mc1gow","category_id":"cjn9vlsxb001wx0s6xccvdpgu","_id":"cjn9vlsxi002ax0s6yuguvuf2"},{"post_id":"cjn9vlsxf0022x0s6ccc0udhr","category_id":"cjn9vlsxh0027x0s613i4rq7d","_id":"cjn9vlsxj002fx0s680d3fp11"}],"PostTag":[{"post_id":"cjn9vlsi50000x0s6825buxlo","tag_id":"cjn9vlsih0002x0s6xf0yu76x","_id":"cjn9vlsin0008x0s60ny1oojc"},{"post_id":"cjn9vlsio0009x0s696xe9ksy","tag_id":"cjn9vlsih0002x0s6xf0yu76x","_id":"cjn9vlsiq000cx0s6c2f0hbuz"},{"post_id":"cjn9vlsie0001x0s6ufsn5h5p","tag_id":"cjn9vlsih0002x0s6xf0yu76x","_id":"cjn9vlsir000ex0s6ybcjg9qs"},{"post_id":"cjn9vlsij0003x0s6046rr9zs","tag_id":"cjn9vlsih0002x0s6xf0yu76x","_id":"cjn9vlsit000hx0s6jp5xnwnj"},{"post_id":"cjn9vlsik0004x0s6tmdvshvx","tag_id":"cjn9vlsis000gx0s6i7zx2snc","_id":"cjn9vlsiw000ox0s6kut9sbw0"},{"post_id":"cjn9vlsil0005x0s6x2p76oo6","tag_id":"cjn9vlsiv000mx0s6ulwre7js","_id":"cjn9vlsiy000tx0s6pvxq2jzc"},{"post_id":"cjn9vlsip000ax0s6g7xntqt1","tag_id":"cjn9vlsiv000mx0s6ulwre7js","_id":"cjn9vlsj0000yx0s652q1wrke"},{"post_id":"cjn9vlsis000fx0s6nzjczgt3","tag_id":"cjn9vlsiv000mx0s6ulwre7js","_id":"cjn9vlsj10011x0s6pzck76cd"},{"post_id":"cjn9vlsit000ix0s6g1qynq5z","tag_id":"cjn9vlsj10010x0s6gd6r53ni","_id":"cjn9vlsj20013x0s637482z2a"},{"post_id":"cjn9vlsiu000lx0s6t8n1v8yy","tag_id":"cjn9vlsiv000mx0s6ulwre7js","_id":"cjn9vlsj20015x0s6ngetv28g"},{"post_id":"cjn9vlsiv000nx0s645nfj39x","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlsj30017x0s64ld8ings"},{"post_id":"cjn9vlsiw000px0s697pl36fo","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlsj30019x0s6edx5wxb3"},{"post_id":"cjn9vlsix000sx0s6atyxpffr","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlsj4001bx0s67qejypau"},{"post_id":"cjn9vlsiy000ux0s69se9dtiy","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlsj4001dx0s6ymv3nh6e"},{"post_id":"cjn9vlsj0000xx0s61mc6ym9f","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlsj5001ex0s6hwqzo4hv"},{"post_id":"cjn9vlsjb001fx0s6lgsfhw0d","tag_id":"cjn9vlsj10010x0s6gd6r53ni","_id":"cjn9vlsjc001gx0s661hjzt55"},{"post_id":"cjn9vlswv001jx0s6qlhzmm7o","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlswz001nx0s6s0txd7br"},{"post_id":"cjn9vlswu001hx0s65pmxtqkz","tag_id":"cjn9vlswx001lx0s65ij0uazk","_id":"cjn9vlsx3001rx0s6ivbxkvrf"},{"post_id":"cjn9vlsx0001px0s65ffxct13","tag_id":"cjn9vlswx001lx0s65ij0uazk","_id":"cjn9vlsx4001tx0s66etoqx5b"},{"post_id":"cjn9vlswy001mx0s6sy2g2tex","tag_id":"cjn9vlsx1001qx0s6z6tagj14","_id":"cjn9vlsxd001yx0s6o6gxh9ya"},{"post_id":"cjn9vlsx4001ux0s6wy3fyj98","tag_id":"cjn9vlsiv000mx0s6ulwre7js","_id":"cjn9vlsxe0020x0s6fk7r88nc"},{"post_id":"cjn9vlswz001ox0s6iw1h19n7","tag_id":"cjn9vlsx6001vx0s6rjbsbazr","_id":"cjn9vlsxg0024x0s6zh0bnwqc"},{"post_id":"cjn9vlsxe001zx0s6xequ6i77","tag_id":"cjn9vlsj20014x0s6fv0tital","_id":"cjn9vlsxg0026x0s6hjaaz276"},{"post_id":"cjn9vlsx3001sx0s6d6mc1gow","tag_id":"cjn9vlsx6001vx0s6rjbsbazr","_id":"cjn9vlsxi002bx0s6g4iyiqkx"},{"post_id":"cjn9vlsxg0025x0s6af3r1cxo","tag_id":"cjn9vlswx001lx0s65ij0uazk","_id":"cjn9vlsxi002cx0s6yc3cw110"},{"post_id":"cjn9vlsxf0022x0s6ccc0udhr","tag_id":"cjn9vlsxh0028x0s6qvbi5cwz","_id":"cjn9vlsxi002ex0s6t1xwz45n"},{"post_id":"cjn9vlsxh0029x0s6fmiqmuay","tag_id":"cjn9vlsxi002dx0s6ytvvvcnj","_id":"cjn9vlsxj002hx0s67xu5ctzt"},{"post_id":"cjn9vlsxh0029x0s6fmiqmuay","tag_id":"cjn9vlsxj002gx0s6fvaf8tmr","_id":"cjn9vlsxj002ix0s6zz54ltah"}],"Tag":[{"name":"docker","_id":"cjn9vlsih0002x0s6xf0yu76x"},{"name":"ceph","_id":"cjn9vlsis000gx0s6i7zx2snc"},{"name":"git","_id":"cjn9vlsiv000mx0s6ulwre7js"},{"name":"linux","_id":"cjn9vlsj10010x0s6gd6r53ni"},{"name":"python","_id":"cjn9vlsj20014x0s6fv0tital"},{"name":"ubuntu","_id":"cjn9vlswx001lx0s65ij0uazk"},{"name":"tmux","_id":"cjn9vlsx1001qx0s6z6tagj14"},{"name":"vim插件","_id":"cjn9vlsx6001vx0s6rjbsbazr"},{"name":"shell","_id":"cjn9vlsxh0028x0s6qvbi5cwz"},{"name":"nginx","_id":"cjn9vlsxi002dx0s6ytvvvcnj"},{"name":"ssl","_id":"cjn9vlsxj002gx0s6fvaf8tmr"}]}}