<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[linux系统监控基本命令]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/25/linux%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="1-nmon软件"><a href="#1-nmon软件" class="headerlink" title="1. nmon软件"></a>1. nmon软件</h2><h3 id="1-1-运行nmon软件"><a href="#1-1-运行nmon软件" class="headerlink" title="1.1 运行nmon软件"></a>1.1 运行nmon软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:~$ nmon</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">┌nmon─14g──────[H for help]───Hostname=localhost────Refresh= 2secs ───16:48.29────────────────────────┐</div><div class="line">------------------------------       For help type H or ...                                           │</div><div class="line">│  #    #  #    #   ####   #    #        nmon -?  - hint                                              │</div><div class="line">│  ##   #  ##  ##  #    #  ##   #        nmon -h  - full                                              │</div><div class="line">│  # #  #  # ## #  #    #  # #  #                                                                     │</div><div class="line">│  #  # #  #    #  #    #  #  # #       To start the same way every time                              │</div><div class="line">│  #   ##  #    #  #    #  #   ##        set the NMON ksh variable                                    │</div><div class="line">│  #    #  #    #   ####   #    #                                                                     │</div><div class="line">│  ------------------------------                                                                     │</div><div class="line">│                                                                                                     │</div><div class="line">│  Use these keys to toggle statistics on/off:                                                        │</div><div class="line">│     c = CPU        l = CPU Long-term   - = Faster screen updates                                    │</div><div class="line">│     m = Memory     j = Filesystems     + = Slower screen updates                                    │</div><div class="line">│     d = Disks      n = Network         V = Virtual Memory                                           │</div><div class="line">│     r = Resource   N = NFS             v = Verbose hints                                            │</div><div class="line">│     k = kernel     t = Top-processes   . = only busy disks/procs                                    │</div><div class="line">│     h = more options                 q = Quit                                                       │</div><div class="line">│─────────────────────────────────────────────────────────────────────────────────────────────────────│</div></pre></td></tr></table></figure>
<h3 id="1-2-显示CPU信息"><a href="#1-2-显示CPU信息" class="headerlink" title="1.2 显示CPU信息"></a>1.2 显示CPU信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">│ CPU Utilisation ──────────────────────────────────────────────────────────────</div><div class="line">│---------------------------+-------------------------------------------------+</div><div class="line">│CPU  User%  Sys% Wait% Idle|0          |25         |50          |75       100|</div><div class="line">│  1  15.2   1.5   0.0  83.2|UUUUUUU           &gt;                              |</div><div class="line">│  2   7.1   2.6   0.0  90.3|UUUs             &gt;                               |</div><div class="line">│  3  17.5   1.0   0.5  81.0|UUUUUUUU        &gt;                                |</div><div class="line">│  4  13.6   3.0   0.0  83.3|UUUUUUs            &gt;                             |</div><div class="line">│---------------------------+-------------------------------------------------+</div><div class="line">│Avg  13.4   2.1   0.3  84.3|UUUUUUs        &gt;                                 |</div><div class="line">│---------------------------+-------------------------------------------------+</div></pre></td></tr></table></figure>
<h3 id="1-3-显示内存信息"><a href="#1-3-显示内存信息" class="headerlink" title="1.3 显示内存信息"></a>1.3 显示内存信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">│ Memory Stats ──────────────────────────────────────────────────────────────────</div><div class="line">                RAM     High      Low     Swap    Page Size=4 KB</div><div class="line">│ Total MB      7843.5     -0.0     -0.0   3916.0</div><div class="line">│ Free  MB      1259.8     -0.0     -0.0   3915.6</div><div class="line">│ Free Percent    16.1%   100.0%   100.0%   100.0%</div><div class="line">│             MB                  MB                  MB</div><div class="line">│                      Cached=  2912.7     Active=  3842.7</div><div class="line">│ Buffers=   929.4 Swapcached=     0.0  Inactive =  1789.8</div><div class="line">│ Dirty  =     0.1 Writeback =     0.0  Mapped   =   946.5</div><div class="line">│ Slab   =   799.7 Commit_AS =  6624.9 PageTables=    40.2</div></pre></td></tr></table></figure>
<h3 id="1-4-显示磁盘信息"><a href="#1-4-显示磁盘信息" class="headerlink" title="1.4 显示磁盘信息"></a>1.4 显示磁盘信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> Disk I/O ──/proc/diskstats────mostly in KB/s─────Warning:contains duplicates────</div><div class="line">│DiskName Busy  Read WriteKB|0          |25         |50          |75       100|</div><div class="line">│sda        5%    0.0   42.0|WW&gt;                                              |</div><div class="line">│sda1       0%    0.0    0.0|&gt;                                                |</div><div class="line">│sda2       0%    0.0    0.0|&gt;                                                |</div><div class="line">│sda5       5%    0.0   42.0|WW&gt;                                              |</div><div class="line">│sda6       0%    0.0    0.0|&gt;                                                |</div><div class="line">│Totals Read-MB/s=0.0      Writes-MB/s=0.1      Transfers/sec=12.0</div></pre></td></tr></table></figure>
<h3 id="1-5-显示网络信息"><a href="#1-5-显示网络信息" class="headerlink" title="1.5 显示网络信息"></a>1.5 显示网络信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> Network I/O ────────────────────────────────────────────────────────────────────</div><div class="line">│I/F Name Recv=KB/s Trans=KB/s packin packout insize outsize Peak-&gt;Recv Trans </div><div class="line">│      lo     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </div><div class="line">│   wlan0     0.1     0.0       0.5      0.0   215.0    0.0        0.1     0.0 </div><div class="line">│ docker0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0 </div><div class="line">│    eth0     0.0     0.0       0.0      0.0     0.0    0.0        0.0     0.0</div><div class="line">│ Network Error Counters ─────────────────────────────────────────────────────────</div><div class="line">│I/F Name iErrors iDrop iOverrun iFrame oErrors   oDrop oOverrun oCarrier oColls</div><div class="line">│      lo       0       0       0       0       0       0       0       0       0</div><div class="line">│   wlan0       0       0       0       0       0       0       0       0       0</div><div class="line">│ docker0       0       0       0       0       0       0       0       0       0</div><div class="line">│    eth0       0       0       0       0       0       0       0       0       0</div></pre></td></tr></table></figure>
<h3 id="1-6-显示内核信息"><a href="#1-6-显示内核信息" class="headerlink" title="1.6 显示内核信息"></a>1.6 显示内核信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Kernel Stats ────────────────────────────────────────────────────────────────────</div><div class="line">│ RunQueue              3   Load Average    CPU use since boot time</div><div class="line">│ ContextSwitch    2735.0    1 mins  0.54    Uptime Days=  0 Hours= 7 Mins=58</div><div class="line">│ Forks               0.5    5 mins  0.86    Idle   Days=  1 Hours= 1 Mins=36</div><div class="line">│ Interrupts        836.9   15 mins  0.92    Average CPU use=-221.51%</div></pre></td></tr></table></figure>
<h2 id="2-ethstatus"><a href="#2-ethstatus" class="headerlink" title="2. ethstatus"></a>2. ethstatus</h2><p><code>ethstatus</code>可以实时监控网卡的带宽占用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">───────────────────.EthStatus v0.4a.──────────────────────────────[0/910]──────────────────────│</div><div class="line">│                                                                                              │</div><div class="line">│                                                                                              │</div><div class="line">│                      ######                                                                  │</div><div class="line">│                                                                                              │</div><div class="line">│         ###                                                                                  │</div><div class="line">│        ON/OFF                      RX  TX                                                    │</div><div class="line">│                            0.00 B/s   0 Packets/s                                            │</div><div class="line">│                                                                                              │</div><div class="line">│                                                                                              │</div><div class="line">│     IP Address:          192.168.1.116                                                       │</div><div class="line">│     Interface name:      wlan0         Graphic Using Speed:    9.77 MB/s                     │</div><div class="line">│     Top Speed:           732.00 B/s    Top Packets/s:          5                             │</div><div class="line">│     Received Packets:    593428        Transmited Packets:     437965                        │</div><div class="line">│     Received:            399.68 MB     Transmitted:            54.73 MB                      │</div><div class="line">│     Errors on Receiving: 0             Errors on Transmission: 0                             │</div><div class="line">│                                                                                              │</div><div class="line">│                                                                                              │</div></pre></td></tr></table></figure>
<h2 id="3-iftop监控网卡实时流量"><a href="#3-iftop监控网卡实时流量" class="headerlink" title="3. iftop监控网卡实时流量"></a>3. iftop监控网卡实时流量</h2><p>常用参数列表</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr>
<td>-i</td>
<td>指定需要监测的网卡</td>
<td>sudo iftop -i wlan0</td>
</tr>
<tr>
<td>-n</td>
<td>将输出的主机信息都通过ip显示，不进行DNS方向解析</td>
<td>sudo iftop -n -i wlan0</td>
</tr>
<tr>
<td>-B</td>
<td>将输出以byte为单位显示网卡流量，默认是bit</td>
<td>sudo iftop -B -i wlan0</td>
</tr>
<tr>
<td>-p</td>
<td>以混杂模式运行iftop,此时iftop可以作为网络嗅探器</td>
<td>sudo iftop -p -i wlan0</td>
</tr>
<tr>
<td>-N</td>
<td>只显示链接端口号，不显示对应的服务名称</td>
<td>sudo iftop -N -i wlan0</td>
</tr>
<tr>
<td>-P</td>
<td>显示主机及端口信息</td>
<td>sudo iftop -P -i wlan0</td>
</tr>
<tr>
<td>-F</td>
<td>显示特定网段的网卡进出流量</td>
<td>sudo iftop -F 192.168.1.10/24</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">                    12.5kb              25.0kb               37.5kb              50.0kb         [0/37]</div><div class="line">+-------------------+-------------------+--------------------+-------------------+--------------------</div><div class="line">192.168.1.116                         =&gt; 101.227.160.102                       17.6kb  3.55kb  1.90kb </div><div class="line">                                      &lt;=                                       7.29kb  1.50kb   807b</div><div class="line">224.0.0.251                           =&gt; 192.168.1.165                            0b      0b      0b  </div><div class="line">                                      &lt;=                                       1.72kb  2.21kb   566b</div><div class="line">192.168.1.116                         =&gt; 140.206.160.161                       4.89kb  0.98kb  1.21kb</div><div class="line">                                      &lt;=                                       1.18kb   242b    302b</div><div class="line">192.168.1.116                         =&gt; 192.168.1.1                              0b    112b     96b  </div><div class="line">                                      &lt;=                                          0b    378b    254b</div><div class="line">239.255.255.250                       =&gt; 192.168.1.148                            0b      0b      0b</div><div class="line">                                      &lt;=                                       1.19kb   486b    730b</div><div class="line">224.0.0.251                           =&gt; 192.168.1.166                            0b      0b      0b</div><div class="line">                                      &lt;=                                        272b     54b     14b</div><div class="line">192.168.1.165                         =&gt; all-routers.mcast.net                    0b     26b      6b</div><div class="line">                                      &lt;=                                          0b      0b      0b</div><div class="line">192.168.1.116                         =&gt; 101.226.76.164                           0b      0b   2.11kb</div><div class="line">                                      &lt;=                                          0b      0b    752b  </div><div class="line">192.168.1.116                         =&gt; dev                                      0b      0b   1.50kb</div><div class="line">                                      &lt;=                                          0b      0b    544b</div><div class="line">192.168.1.116                         =&gt; stage                                    0b      0b   1.40kb</div><div class="line">                                      &lt;=                                          0b      0b    504b</div><div class="line">239.255.255.250                       =&gt; 192.168.1.135                            0b      0b      0b</div><div class="line">                                      &lt;=                                          0b      0b    161b</div><div class="line">239.255.255.250                       =&gt; 192.168.1.113                            0b      0b      0b</div><div class="line">                                      &lt;=                                          0b      0b    160b</div><div class="line">------------------------------------------------------------------------------------------------------</div><div class="line">TX:             cum:   51.5kB   peak:   44.7kb                        rates:   22.4kb  4.64kb  8.27kb</div><div class="line">RX:                    46.8kB           28.5kb                                 11.6kb  4.87kb  4.94kb</div><div class="line">TOTAL:                 98.4kB           73.2kb                                 34.1kb  9.51kb  13.2kb</div></pre></td></tr></table></figure>
<h2 id="4-mtr"><a href="#4-mtr" class="headerlink" title="4. mtr"></a>4. mtr</h2><p>mtr是Linux中有一个非常棒的网络连通性判断工具,它结合了<code>ping</code>，<code>traceroute</code>，<code>nslookup</code>的相关特性。<br>相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。</p>
<p>常用参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-s</td>
<td>用来指定ping数据包的大小</td>
</tr>
<tr>
<td><code>--no-dns</code></td>
<td>不对IP地址做域名解析</td>
</tr>
<tr>
<td>-a</td>
<td>使用这个参数来设置ICMP返回之间的要求默认是1秒</td>
</tr>
<tr>
<td><code>--report</code></td>
<td>给主机发送10个ICMP包，然后输出报告</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">                    My traceroute  [v0.85]                                     [0/102]</div><div class="line">localhost (0.0.0.0)                            Sun Mar 26 20:25:43 2017</div><div class="line">Keys:  Help   Display mode   Restart statistics   Order of fields   quit</div><div class="line">                                            Packets               Pings</div><div class="line"> Host                                    Loss%   Snt   Last   Avg  Best  Wrst StDev</div><div class="line"> 1. 192.168.0.1                           0.0%     8    1.5   2.3   1.3   4.3   0.8</div><div class="line"> 2. 192.168.1.1                           0.0%     8    1.7   4.6   1.7  13.7   5.2</div><div class="line"> 3. 114.245.248.1                         0.0%     8   78.3 108.3   3.7 363.8 149.8</div><div class="line"> 4. 123.126.26.45                         0.0%     8    7.9  19.6   3.8  76.7  26.3</div><div class="line"> 5. 61.148.158.53                         0.0%     8    7.2  12.2   5.1  31.6   9.2</div><div class="line"> 6. 61.51.115.106                         0.0%     8   78.8  15.4   4.6  78.8  25.7</div><div class="line"> 7. 61.49.168.110                         0.0%     8    4.9   7.1   4.8  12.8   2.7</div><div class="line"> 8. ???</div><div class="line"> 9. ???</div><div class="line">10. 61.135.169.121                        0.0%     7    4.3   5.9   4.2  10.9   2.2</div></pre></td></tr></table></figure>
<p><strong>说明</strong><br>当分析mtr的输出时，需要注意两点:loss和latency<br>如果你在任何一跳上看到loss的百分比，这就说明这一跳上可能有问题。当然也有可能是服务提供商人为限制了ICMP发送的速率，也会导致丢包。如果下一跳没有丢包，那说明该丢包是人为限制的。<br>如果第4跳和第5跳都有50%的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是30%的丢包率，我们可以猜测30%的丢包率除了网络糟糕的原因之前还有人为限制ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。当出现短暂的10%丢包率的时候，不必担心，应用层的程序会弥补这点损失。</p>
<h2 id="5-htop"><a href="#5-htop" class="headerlink" title="5. htop"></a>5. htop</h2><p>常用功能键</p>
<table>
<thead>
<tr>
<th>按键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>F1</td>
<td>帮助</td>
</tr>
<tr>
<td>F2</td>
<td>设置</td>
</tr>
<tr>
<td>F3</td>
<td>搜索进程</td>
</tr>
<tr>
<td>F4</td>
<td>过滤器，按关键字搜索</td>
</tr>
<tr>
<td>F5</td>
<td>显示树形结构</td>
</tr>
<tr>
<td>F6</td>
<td>选择排序方式</td>
</tr>
<tr>
<td>F7</td>
<td>减少nice值，可以提高对应进程的优先级</td>
</tr>
<tr>
<td>F8</td>
<td>增加nice值，可以降低对应进程的优先级</td>
</tr>
<tr>
<td>F9</td>
<td>杀掉选中的进程</td>
</tr>
<tr>
<td>F10</td>
<td>退出</td>
</tr>
<tr>
<td>/</td>
<td>搜索字符</td>
</tr>
<tr>
<td>h</td>
<td>显示帮助</td>
</tr>
<tr>
<td>l</td>
<td>显示进程打开的文件 lsof</td>
</tr>
<tr>
<td>u</td>
<td>显示所有用户，并可以选择某一特定用户的进程</td>
</tr>
<tr>
<td>s</td>
<td>将调用strace追踪进程的系统调用</td>
</tr>
<tr>
<td>t</td>
<td>显示树形结构</td>
</tr>
<tr>
<td>H</td>
<td>显示/隐藏用户线程</td>
</tr>
<tr>
<td>I</td>
<td>倒转排序</td>
</tr>
<tr>
<td>K</td>
<td>显示/隐藏内核线程</td>
</tr>
<tr>
<td>M</td>
<td>按内存占用排序</td>
</tr>
<tr>
<td>P</td>
<td>按CPU排序</td>
</tr>
<tr>
<td>T</td>
<td>按运行时间排序</td>
</tr>
</tbody>
</table>
<p>htop的左上角显示CPU、内存、交换区的使用情况，右边显示任务、负载、开机时间，下面是进程实时状态。<br>最后一行是F1～F10的功能菜单和对应的字符快捷键。</p>
<h2 id="6-linux系统性能分析"><a href="#6-linux系统性能分析" class="headerlink" title="6. linux系统性能分析"></a>6. linux系统性能分析</h2><p>分析次序为cpu mem disk network</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python字符串处理]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/23/python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<h2 id="1-字符串处理函数"><a href="#1-字符串处理函数" class="headerlink" title="1. 字符串处理函数"></a>1. 字符串处理函数</h2><table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>s.find(substring,[start[,end]])</td>
<td>查找子字符串，可以指定开始结束的位置，返回索引值，否则返回-1</td>
</tr>
<tr>
<td>s.rfind(substring,[start[,end]])</td>
<td>反向查找字符串</td>
</tr>
<tr>
<td>s.index(substring,[start[,end]])</td>
<td>同find，找不到产生ValueError异常</td>
</tr>
<tr>
<td>s.rindex(substring,[start[,end]])</td>
<td>同反向查找</td>
</tr>
<tr>
<td>s.count(substring,[start[,end]])</td>
<td>返回找到子串的个数</td>
</tr>
<tr>
<td>s.lowercase()</td>
<td>所有字符转换成小写</td>
</tr>
<tr>
<td>s.capitalize()</td>
<td>首字母转换成大写</td>
</tr>
<tr>
<td>s.lower()</td>
<td>所有字符转换成小写</td>
</tr>
<tr>
<td>s.upper()</td>
<td>所有字符转换成大写</td>
</tr>
<tr>
<td>s.swapcase()</td>
<td>大小写互换</td>
</tr>
<tr>
<td>s.split(str,’’)</td>
<td>将string转换成list，以空格分割</td>
</tr>
<tr>
<td>s.join(list,’’)</td>
<td>将list转换成string,以空格连接</td>
</tr>
</tbody>
</table>
<p><strong>处理字符串的内置函数</strong></p>
<table>
<thead>
<tr>
<th>函数名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>len(str)</td>
<td>串长度</td>
</tr>
<tr>
<td>cmp(‘first_str’,str)</td>
<td>字符串比较，第一个大，返回1</td>
</tr>
<tr>
<td>max(‘string’)</td>
<td>寻找字符串中最大的字符</td>
</tr>
<tr>
<td>min(‘string’)</td>
<td>寻找字符串中最小的字符</td>
</tr>
</tbody>
</table>
<h2 id="2-实例"><a href="#2-实例" class="headerlink" title="2. 实例"></a>2. 实例</h2><h3 id="2-1-查找子字符串"><a href="#2-1-查找子字符串" class="headerlink" title="2.1 查找子字符串"></a>2.1 查找子字符串</h3><p><code>s.find()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string = &quot;this is the test string&quot;</div><div class="line">&gt;&gt;&gt; string.find(&apos;test&apos;)</div><div class="line">12</div></pre></td></tr></table></figure>
<h3 id="2-2-查找子字符串"><a href="#2-2-查找子字符串" class="headerlink" title="2.2 查找子字符串"></a>2.2 查找子字符串</h3><p><code>s.index()</code><br>找不到就报错，找到就返回索引<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string = &quot;this is the test string&quot;</div><div class="line">&gt;&gt;&gt; string.index(&apos;error&apos;)</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</div><div class="line">ValueError: substring not found</div><div class="line">&gt;&gt;&gt; string.index(&apos;test&apos;)</div><div class="line">12</div></pre></td></tr></table></figure></p>
<h3 id="2-3-首字母转换成大写"><a href="#2-3-首字母转换成大写" class="headerlink" title="2.3 首字母转换成大写"></a>2.3 首字母转换成大写</h3><p><code>s.capitalize()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string = &quot;this is the test string&quot;</div><div class="line">&gt;&gt;&gt; string.capitalize()</div><div class="line">&apos;This is the test string&apos;</div></pre></td></tr></table></figure>
<h3 id="2-4-字符串转换成大写"><a href="#2-4-字符串转换成大写" class="headerlink" title="2.4 字符串转换成大写"></a>2.4 字符串转换成大写</h3><p><code>s.upper()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string.upper()</div><div class="line">&apos;THIS IS THE TEST STRING&apos;</div></pre></td></tr></table></figure>
<h3 id="2-5-字符串转换成小写"><a href="#2-5-字符串转换成小写" class="headerlink" title="2.5 字符串转换成小写"></a>2.5 字符串转换成小写</h3><p><code>s.lower()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string.lower()</div><div class="line">&apos;this is the test string&apos;</div></pre></td></tr></table></figure>
<h3 id="2-6-大小写互换"><a href="#2-6-大小写互换" class="headerlink" title="2.6 大小写互换"></a>2.6 大小写互换</h3><p><code>s.swapcase()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string += &quot;THIS IS CAP&quot;</div><div class="line">&gt;&gt;&gt; string</div><div class="line">&apos;this is the test stringTHIS IS CAP&apos;</div><div class="line">&gt;&gt;&gt; string.swapcase()</div><div class="line">&apos;THIS IS THE TEST STRINGthis is cap&apos;</div></pre></td></tr></table></figure>
<h3 id="2-7-将string转换为list"><a href="#2-7-将string转换为list" class="headerlink" title="2.7 将string转换为list"></a>2.7 将string转换为list</h3><p><code>s.split()</code><br>默认为空格，可以指定分隔符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; string.split()</div><div class="line">[&apos;this&apos;, &apos;is&apos;, &apos;the&apos;, &apos;test&apos;, &apos;stringTHIS&apos;, &apos;IS&apos;, &apos;CAP&apos;]</div></pre></td></tr></table></figure></p>
<h3 id="2-8-将list转换为string"><a href="#2-8-将list转换为string" class="headerlink" title="2.8 将list转换为string"></a>2.8 将list转换为string</h3><p><code>s.join()</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; &apos;|&apos;.join(string.split())</div><div class="line">&apos;this|is|the|test|stringTHIS|IS|CAP&apos;</div></pre></td></tr></table></figure></p>
<p><strong>拓展</strong><br><code>+=</code>和<code>.join</code>实现的效果是一样的，但是<code>+=</code>每次都会新开辟空间，但是<code>.join</code>不用<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; a = &apos;the&apos;</div><div class="line">&gt;&gt;&gt; a += &apos; test&apos;</div><div class="line">&gt;&gt;&gt; a += &apos; is&apos;</div><div class="line">&gt;&gt;&gt; a += &apos; end&apos;</div><div class="line">&gt;&gt;&gt; a</div><div class="line">&apos;the test is end&apos;</div><div class="line"></div><div class="line">&gt;&gt;&gt; &apos;&apos;.join(a)</div><div class="line">&apos;the test is end&apos;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python文件处理]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/22/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<h2 id="1-文件操作"><a href="#1-文件操作" class="headerlink" title="1. 文件操作"></a>1. 文件操作</h2><p>file(‘文件名’,’操作符’)<br><strong>省略操作符 默认为读</strong></p>
<table>
<thead>
<tr>
<th>模式</th>
<th>操作符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>只读</td>
<td><code>r</code></td>
<td>文件必须存在</td>
</tr>
<tr>
<td>只写</td>
<td><code>w</code></td>
<td>文件不存在则创建，文件存在则清空文件内容</td>
</tr>
<tr>
<td>追加</td>
<td><code>a</code></td>
<td>文件不存在则创建，文件存在则在文件末尾添加内容</td>
</tr>
<tr>
<td>读写</td>
<td><code>r+</code></td>
<td></td>
</tr>
<tr>
<td>写读</td>
<td><code>w+</code></td>
<td></td>
</tr>
<tr>
<td>追加</td>
<td><code>a+</code></td>
</tr>
</tbody>
</table>
<p>在python中，以什么样的方式出来文件是比较重要的，如果你<br><strong>以只读的方式打开文件，那你就不能写操作</strong><br><strong>以只写的方式打开文件，那你就不能读操作</strong><br><strong>以追加的方式打开文件，也应该是不能进行读操作的</strong><br><strong><font color="red">操作完毕，不要忘记关闭文件</font></strong></p>
<h3 id="1-1-以只读方式打开文件"><a href="#1-1-以只读方式打开文件" class="headerlink" title="1.1 以只读方式打开文件"></a>1.1 以只读方式打开文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;r&apos;)  #f为该文件对象</div><div class="line">&gt;&gt;&gt; f.readline()</div><div class="line">&apos;hello world\n&apos;</div><div class="line">&gt;&gt;&gt; f.readline()</div><div class="line">&apos;\n&apos;</div><div class="line">&gt;&gt;&gt; f.readline()</div><div class="line">&apos;this is the second line\n&apos;</div><div class="line">&gt;&gt;&gt; f.readline()</div><div class="line">&gt;&gt;&gt; f.close()</div></pre></td></tr></table></figure>
<h3 id="1-2-以只写方式打开文件"><a href="#1-2-以只写方式打开文件" class="headerlink" title="1.2 以只写方式打开文件"></a>1.2 以只写方式打开文件</h3><p><strong>如果文件存在并且有内容，则会把文件之前的内容清除；如果文件不存在。则会创建文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;w&apos;)</div><div class="line">&gt;&gt;&gt; f.read()</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</div><div class="line">IOError: File not open for reading</div><div class="line"></div><div class="line">&gt;&gt;&gt; f.readline()</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</div><div class="line">IOError: File not open for reading</div><div class="line"></div><div class="line">&gt;&gt;&gt; f.write(&apos;this is the newest line&apos;)</div><div class="line">&gt;&gt;&gt; f.close()</div><div class="line">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</div><div class="line">&gt;&gt;&gt; f_read.read()</div><div class="line">&apos;this is the newest line&apos;</div><div class="line">&gt;&gt;&gt; f_read.read()</div><div class="line">&apos;&apos;</div></pre></td></tr></table></figure></p>
<h3 id="1-3-以追加的方式打开文件"><a href="#1-3-以追加的方式打开文件" class="headerlink" title="1.3 以追加的方式打开文件"></a>1.3 以追加的方式打开文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f = file(&apos;test&apos;,&apos;a&apos;) </div><div class="line">&gt;&gt;&gt; f.write(&apos;second line&apos;) </div><div class="line">&gt;&gt;&gt; f.write(&apos;\nthird line&apos;)</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<p>这个时候，打开文件，刚才写入的内容并没有写入到文件里。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f_read = file(&apos;test&apos;,&apos;r&apos;)</div><div class="line">&gt;&gt;&gt; f_read.readline()</div><div class="line">&apos;this is the newest line&apos;</div></pre></td></tr></table></figure></p>
<p><strong>文件在关闭的时候才会写入到文件里</strong>或者<strong>强制写入</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f.flush()</div></pre></td></tr></table></figure></p>
<p>追加模式也不可以读<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f.read()</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</div><div class="line">IOError: File not open for reading</div></pre></td></tr></table></figure></p>
<p><strong>拓展</strong></p>
<ol>
<li><p>去掉换行符<br><code>line.strip(&#39;换行符&#39;)</code><br>省略换行符默认为空格</p>
</li>
<li><p>把行分割<br><code>line.split(&#39;分隔符&#39;)</code></p>
</li>
</ol>
<h2 id="2-实例"><a href="#2-实例" class="headerlink" title="2. 实例"></a>2. 实例</h2><h3 id="2-1-读取-etc-passwd的内容"><a href="#2-1-读取-etc-passwd的内容" class="headerlink" title="2.1 读取/etc/passwd的内容"></a>2.1 读取<code>/etc/passwd</code>的内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">f = file(&apos;/etc/passwd&apos;)</div><div class="line">for line in f.readlines(): #循环文件的每一行 </div><div class="line">    line = line.strip(&apos;\n&apos;).split(&apos;:&apos;) </div><div class="line">    print line</div></pre></td></tr></table></figure>
<p>得到的结果如下<strong>一个列表</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[&apos;root&apos;, &apos;x&apos;, &apos;0&apos;, &apos;0&apos;, &apos;root&apos;, &apos;/root&apos;, &apos;/bin/bash&apos;]</div><div class="line">[&apos;daemon&apos;, &apos;x&apos;, &apos;1&apos;, &apos;1&apos;, &apos;daemon&apos;, &apos;/usr/sbin&apos;, &apos;/usr/sbin/nologin&apos;]</div><div class="line">[&apos;bin&apos;, &apos;x&apos;, &apos;2&apos;, &apos;2&apos;, &apos;bin&apos;, &apos;/bin&apos;, &apos;/usr/sbin/nologin&apos;]</div><div class="line">[&apos;sys&apos;, &apos;x&apos;, &apos;3&apos;, &apos;3&apos;, &apos;sys&apos;, &apos;/dev&apos;, &apos;/usr/sbin/nologin&apos;]</div><div class="line">[&apos;sync&apos;, &apos;x&apos;, &apos;4&apos;, &apos;65534&apos;, &apos;sync&apos;, &apos;/bin&apos;, &apos;/bin/sync&apos;]</div><div class="line">[&apos;games&apos;, &apos;x&apos;, &apos;5&apos;, &apos;60&apos;, &apos;games&apos;, &apos;/usr/games&apos;, &apos;/usr/sbin/nologin&apos;]</div><div class="line">[&apos;man&apos;, &apos;x&apos;, &apos;6&apos;, &apos;12&apos;, &apos;man&apos;, &apos;/var/cache/man&apos;, &apos;/usr/sbin/nologin&apos;]</div></pre></td></tr></table></figure></p>
<p>打印第1列，第2列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print line[0],line[1]</div></pre></td></tr></table></figure></p>
<h3 id="2-2-写文件"><a href="#2-2-写文件" class="headerlink" title="2.2 写文件"></a>2.2 写文件</h3><p>语言本身不存在文件保护的设置，避免多个程序对同一个文件进行操作，需要自己来完成。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f.closed</div><div class="line">False</div></pre></td></tr></table></figure></p>
<p><strong>如果<code>f.closed</code>值为False,说明文件已经被打开</strong></p>
<p>显示文件的字符集，默认为ASCII<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f.encoding</div><div class="line">&gt;&gt;&gt; print f.encoding</div><div class="line">None</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;w&apos;) </div><div class="line">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;) </div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</div><div class="line">UnicodeEncodeError: &apos;ascii&apos; codec can&apos;t encode characters in position 0-5: ordinal not in range(128)</div><div class="line">&gt;&gt;&gt; f.write(u&apos;测试文件编码&apos;.encode(&apos;utf-8&apos;))</div><div class="line">&gt;&gt;&gt; f.flush()</div></pre></td></tr></table></figure>
<p>读到末尾，<code>next()</code>会报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; f = file(&apos;test_coding&apos;,&apos;r&apos;) </div><div class="line">&gt;&gt;&gt; f.readline()</div><div class="line">&apos;&apos;</div><div class="line">&gt;&gt;&gt; f.next()</div><div class="line">Traceback (most recent call last):</div><div class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</div><div class="line">StopIteration</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p>
<h2 id="3-文件操作相关方法"><a href="#3-文件操作相关方法" class="headerlink" title="3. 文件操作相关方法"></a>3. 文件操作相关方法</h2><p>readline是通过next实现的</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>f.readlines()</td>
<td>以列表的形式读出文件</td>
</tr>
<tr>
<td>f.read()</td>
<td>以字符串的形式，一次性读出文件</td>
</tr>
<tr>
<td>f.seek()</td>
<td>跳到文件的指定位置</td>
</tr>
<tr>
<td>f.tell()</td>
<td>当前位置</td>
</tr>
<tr>
<td>f.truncate(100)</td>
<td>从头开始截断文件</td>
</tr>
<tr>
<td>f.writelines()</td>
<td>多行写</td>
</tr>
<tr>
<td>f.xreadlines()</td>
<td>逐行读</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python用户交互]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/20/python%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92/</url>
      <content type="html"><![CDATA[<h2 id="1-raw-input"><a href="#1-raw-input" class="headerlink" title="1. raw_input()"></a>1. raw_input()</h2><p>raw_input() 从标准输入中读取一个字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">raw_input(...)</div><div class="line">    raw_input([prompt]) -&gt; string</div><div class="line">    </div><div class="line">    Read a string from standard input.  The trailing newline is stripped.</div><div class="line">    If the user hits EOF (Unix: Ctl-D, Windows: Ctl-Z+Return), raise EOFError.</div><div class="line">    On Unix, GNU readline is used if enabled.  The prompt string, if given,</div><div class="line">    is printed without a trailing newline before reading.</div></pre></td></tr></table></figure></p>
<p>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">name = raw_input(&apos;Please input your name:&apos;)</div><div class="line">age = raw_input(&apos;age:&apos;)</div><div class="line">print &quot;name: &quot; % name</div><div class="line">print &quot;age:&quot; % age</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">name = raw_input(&apos;Please input your name:&apos;)</div><div class="line">age = raw_input(&apos;age:&apos;)</div><div class="line">job = raw_input(&apos;Job:&apos;)</div><div class="line">salary = raw_input(&apos;Salary:&apos;)</div><div class="line"></div><div class="line">print &apos;&apos;&apos;</div><div class="line">Personal information of %s:</div><div class="line">   Name : %s</div><div class="line">   Age  : %s     d只能输入数字 f只能输入浮点型</div><div class="line">    Job : %s</div><div class="line">  Salary: %s</div><div class="line">&apos;&apos;&apos; %(name, name, age, job, salary)</div></pre></td></tr></table></figure>
<h2 id="2-input"><a href="#2-input" class="headerlink" title="2. input()"></a>2. input()</h2><p>input()    输入的是什么就是什么格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">input(...)</div><div class="line">    input([prompt]) -&gt; value</div><div class="line">    </div><div class="line">    Equivalent to eval(raw_input(prompt)).</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; info = &quot;This var will be printed out ...&quot;</div><div class="line">&gt;&gt;&gt; age = input(&apos;age:&apos;)</div><div class="line">age:info</div><div class="line">&gt;&gt;&gt; print age</div><div class="line">This var will be printed out ...</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python使用和导入模块]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/20/python%E4%BD%BF%E7%94%A8%E5%92%8C%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97/</url>
      <content type="html"><![CDATA[<h2 id="1-导入模块的方法"><a href="#1-导入模块的方法" class="headerlink" title="1. 导入模块的方法"></a>1. 导入模块的方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">import moduleName 导入模块</div><div class="line">From module import sayHi  从模块导入某个具体的方法</div><div class="line">import moduleName as newName  给模块起别名</div><div class="line">from sys import *   导入模块下的所有方法</div></pre></td></tr></table></figure>
<ul>
<li><p>给模块起别名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import multiprocessing as multi</div></pre></td></tr></table></figure>
</li>
<li><p>把模块下所有的方法导入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; from sys import *</div><div class="line">&gt;&gt;&gt; print path</div><div class="line">[&apos;&apos;, &apos;/usr/lib/python2.7&apos;, &apos;/usr/lib/python2.7/plat-x86_64-linux-gnu&apos;, &apos;/usr/lib/python2.7/lib-tk&apos;, &apos;/usr/lib/python2.7/lib-old&apos;, &apos;/usr/lib/python2.7/lib-dynload&apos;, &apos;/usr/local/lib/python2.7/dist-packages&apos;, &apos;/usr/lib/python2.7/dist-packages&apos;, &apos;/usr/lib/python2.7/dist-packages/PILcompat&apos;, &apos;/usr/lib/python2.7/dist-packages/gtk-2.0&apos;, &apos;/usr/lib/pymodules/python2.7&apos;, &apos;/usr/lib/python2.7/dist-packages/ubuntu-sso-client&apos;]</div></pre></td></tr></table></figure>
</li>
</ul>
<font color="red">不建议使用<code>from sys import *</code> 可能被自定义的变量覆盖 调用时加上模块名 <code>sys.argv[2]</code> 可防止 </font>


<h2 id="2-系统命令交互模块"><a href="#2-系统命令交互模块" class="headerlink" title="2. 系统命令交互模块"></a>2. 系统命令交互模块</h2><h3 id="2-1-os模块"><a href="#2-1-os模块" class="headerlink" title="2.1 os模块"></a>2.1 os模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import os</div><div class="line">&gt;&gt;&gt; os.system(&apos;pwd&apos;)</div><div class="line">/home/niuzhiqiang/Desktop</div><div class="line">0</div><div class="line">&gt;&gt;&gt; cur_dir = os.system(&apos;pwd&apos;)</div><div class="line">/home/xxx/Desktop</div><div class="line">&gt;&gt;&gt; print cur_dir</div><div class="line">0</div><div class="line"></div><div class="line">&gt;&gt;&gt; os.popen(&apos;pwd&apos;)</div><div class="line">&lt;open file &apos;pwd&apos;, mode &apos;r&apos; at 0x7f9017578c90&gt;</div><div class="line">&gt;&gt;&gt; cur_dir = os.popen(&apos;pwd&apos;).read()</div><div class="line">&gt;&gt;&gt; print cur_dir</div><div class="line">/home/xxx/Desktop</div></pre></td></tr></table></figure>
<p><strong>例：循环列出目录下的内容</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; os.walk(&apos;/the/directory/&apos;)</div><div class="line">&gt;&gt;&gt; os.next()</div><div class="line">&gt;&gt;&gt; os.next()</div></pre></td></tr></table></figure>
<h3 id="2-2-commands模块"><a href="#2-2-commands模块" class="headerlink" title="2.2 commands模块"></a>2.2 commands模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import commands</div><div class="line">&gt;&gt;&gt; res = commands.getstatusoutput(&apos;pwd&apos;)</div><div class="line">&gt;&gt;&gt; print res</div><div class="line">(0, &apos;/home/xxx/Desktop&apos;)</div><div class="line">&gt;&gt;&gt; print res[1]</div><div class="line">/home/xxx/Desktop</div></pre></td></tr></table></figure>
<h3 id="2-3-subprocess模块"><a href="#2-3-subprocess模块" class="headerlink" title="2.3 subprocess模块"></a>2.3 subprocess模块</h3><p>todo</p>
<h3 id="2-4-sys模块"><a href="#2-4-sys模块" class="headerlink" title="2.4 sys模块"></a>2.4 sys模块</h3><p>取程序的参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import sys</div><div class="line">print sys.argv</div><div class="line">print sys.argv[2]</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">from sys import argv</div><div class="line"># 不需要使用`sys.`</div><div class="line">print argv</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python字符编码]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/20/python%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="1-ASSIC码"><a href="#1-ASSIC码" class="headerlink" title="1. ASSIC码"></a>1. ASSIC码</h2><p>一共规定了128个字符的编码</p>
<h3 id="1-1-ord函数"><a href="#1-1-ord函数" class="headerlink" title="1.1 ord函数"></a>1.1 ord函数</h3><p><code>ord(&#39;single-char&#39;)</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ord(...)</div><div class="line">    ord(c) -&gt; integer</div><div class="line">    </div><div class="line">    Return the integer ordinal of a one-character string.</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; ord(&apos;a&apos;)</div><div class="line">97</div><div class="line">&gt;&gt;&gt; type(ord(&apos;a&apos;))</div><div class="line">&lt;type &apos;int&apos;&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">string = &apos;Hello World&apos;</div><div class="line">for i in string:</div><div class="line">    print ord(i)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">string = &apos;Hello World&apos;</div><div class="line">list_ascii = [ord(i) for i in string]</div><div class="line">print list_ascii</div></pre></td></tr></table></figure>
<h3 id="1-2-chr函数"><a href="#1-2-chr函数" class="headerlink" title="1.2 chr函数"></a>1.2 chr函数</h3><p><code>chr(number)</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">chr(...)</div><div class="line">    chr(i) -&gt; character</div><div class="line">        </div><div class="line">            Return a string of one character with ordinal i; 0 &lt;= i &lt; 256.</div></pre></td></tr></table></figure>
<h2 id="2-Unicode编码"><a href="#2-Unicode编码" class="headerlink" title="2. Unicode编码"></a>2. Unicode编码</h2><p>16位 可以存下汉字</p>
<h3 id="2-1-默认编码是ASCII"><a href="#2-1-默认编码是ASCII" class="headerlink" title="2.1 默认编码是ASCII"></a>2.1 默认编码是ASCII</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; a = &apos;hello&apos;</div><div class="line">&gt;&gt;&gt; type(a)</div><div class="line">&lt;type &apos;str&apos;&gt;</div><div class="line">&gt;&gt;&gt; a</div><div class="line">&apos;hello&apos;</div></pre></td></tr></table></figure>
<h3 id="2-2-加u则指定为Unicode"><a href="#2-2-加u则指定为Unicode" class="headerlink" title="2.2 加u则指定为Unicode"></a>2.2 加<code>u</code>则指定为Unicode</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; a = u&apos;hello&apos;</div><div class="line">&gt;&gt;&gt; type(a)</div><div class="line">&lt;type &apos;unicode&apos;&gt;</div><div class="line">&gt;&gt;&gt; a</div><div class="line">u&apos;hello&apos;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; b=u&apos;你好&apos;</div><div class="line">&gt;&gt;&gt; b</div><div class="line">u&apos;\u4f60\u597d&apos;</div><div class="line">&gt;&gt;&gt; len(b)</div><div class="line">2</div></pre></td></tr></table></figure>
<h2 id="3-UTF-8编码"><a href="#3-UTF-8编码" class="headerlink" title="3. UTF-8编码"></a>3. UTF-8编码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 转换成utf-8</div><div class="line">&gt;&gt;&gt; b.encode(&apos;utf-8&apos;)</div><div class="line">&apos;\xe4\xbd\xa0\xe5\xa5\xbd&apos;</div><div class="line"></div><div class="line"></div><div class="line">&gt;&gt;&gt; b_utf8 = b.encode(&apos;utf-8&apos;)</div><div class="line">&gt;&gt;&gt; len(b_utf8)</div><div class="line">6</div></pre></td></tr></table></figure>
<h2 id="4-Unicode和UTF-8的转换"><a href="#4-Unicode和UTF-8的转换" class="headerlink" title="4. Unicode和UTF-8的转换"></a>4. Unicode和UTF-8的转换</h2><h3 id="4-1-Unicode-gt-gt-UTF-8"><a href="#4-1-Unicode-gt-gt-UTF-8" class="headerlink" title="4.1 Unicode &gt;&gt; UTF-8"></a>4.1 Unicode &gt;&gt; UTF-8</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name.encode(&apos;utf-8&apos;)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; b=u&apos;你好&apos;</div><div class="line"># Unicode转换成UTF-8 </div><div class="line">&gt;&gt;&gt; b_utf8=b.encode(&apos;utf-8&apos;)</div></pre></td></tr></table></figure>
<h3 id="4-2-UTF-8-gt-gt-Unicode"><a href="#4-2-UTF-8-gt-gt-Unicode" class="headerlink" title="4.2 UTF-8  &gt;&gt; Unicode"></a>4.2 UTF-8  &gt;&gt; Unicode</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name_utf8.decode(&apos;utf-8&apos;)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; b_utf8</div><div class="line">&apos;\xe4\xbd\xa0\xe5\xa5\xbd&apos;</div><div class="line">&gt;&gt;&gt; b_utf8.decode(&apos;utf-8&apos;)</div><div class="line">u&apos;\u4f60\u597d&apos;</div></pre></td></tr></table></figure>
<h2 id="5-指定程序的编码方式"><a href="#5-指定程序的编码方式" class="headerlink" title="5. 指定程序的编码方式"></a>5. 指定程序的编码方式</h2><p>程序如果有中文,需要指定编码方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#_*_ coding:utf-8 _*_</div><div class="line"></div><div class="line">name = u&apos;中文&apos;</div><div class="line">print name</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ceph]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/03/13/ceph/</url>
      <content type="html"><![CDATA[<h1 id="ceph的搭建"><a href="#ceph的搭建" class="headerlink" title="ceph的搭建"></a>ceph的搭建</h1><p><strong>注</strong> 如果在安装过程中，想要重新安装，需要执行如下命令清除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo stop ceph-all  #停止所有CEPH进程</div><div class="line">ceph-deploy uninstall  [&#123;ceph-node&#125;]   #卸载所有ceph程序</div><div class="line">ceph-deploy purge   [[ceph-node&#125; [&#123;ceph-node&#125;] #删除ceph相关的包</div><div class="line">ceph-deploy purgedata &#123;ceph-node&#125; [&#123;ceph-node&#125;]   #删除ceph相关的包</div><div class="line">ceph-deploy forgetkeys #删除key</div></pre></td></tr></table></figure></p>
<h2 id="1-安装前准备"><a href="#1-安装前准备" class="headerlink" title="1. 安装前准备"></a>1. 安装前准备</h2><h3 id="1-1-添加hosts解析"><a href="#1-1-添加hosts解析" class="headerlink" title="1.1 添加hosts解析"></a>1.1 添加hosts解析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/hosts</div><div class="line"></div><div class="line"># 添加如下内容</div><div class="line">192.168.1.174	node1</div><div class="line">192.168.1.175	node2</div></pre></td></tr></table></figure>
<p><strong>注:  <font color="red">node1 node2必须为hostname，因为在安装过程中会验证hostname是否为node{1,2}<br>遇到这个错误，需要完全清理ceph软件和配置数据，从头再来<br></font></strong></p>
<h3 id="1-2-免密码登录"><a href="#1-2-免密码登录" class="headerlink" title="1.2 免密码登录"></a>1.2 免密码登录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 生成密钥对</div><div class="line">ssh-keygen -t rsa</div><div class="line"></div><div class="line"># admin节点需要通过密钥对登录到其他节点</div><div class="line">ssh-copy-id ceph@node1</div><div class="line">ssh-copy-id ceph@node2</div></pre></td></tr></table></figure>
<p>在<strong>每个Ceph节点</strong>中为用户增加 root 权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo &quot;ceph ALL = (root) NOPASSWD:ALL&quot; | sudo tee /etc/sudoers.d/ceph</div><div class="line">sudo chmod 0440 /etc/sudoers.d/ceph</div></pre></td></tr></table></figure></p>
<h3 id="1-3-安装ceph-deploy软件"><a href="#1-3-安装ceph-deploy软件" class="headerlink" title="1.3 安装ceph-deploy软件"></a>1.3 安装ceph-deploy软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wget -q -O- &apos;https://download.ceph.com/keys/release.asc&apos; | sudo apt-key add -</div><div class="line"></div><div class="line"># 添加Ceph软件包源，用Ceph稳定版（如cuttlefish 、 dumpling 、 emperor 、 firefly 等等）替换掉 &#123;ceph-stable-release&#125;</div><div class="line"># echo deb http://download.ceph.com/debian-&#123;ceph-stable-release&#125;/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</div><div class="line"># 例如：</div><div class="line">echo deb http://download.ceph.com/debian-dumpling/ $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/ceph.list</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install ceph-deploy</div></pre></td></tr></table></figure>
<h2 id="2-创建ceph目录"><a href="#2-创建ceph目录" class="headerlink" title="2. 创建ceph目录"></a>2. 创建ceph目录</h2><p>我们使用ceph-deploy部署，<strong>后续操作均在admin节点操作</strong>。<br>首先需要创建工作环境，该环境会保存所有的配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir opt/ceph</div><div class="line">cd opt/ceph</div></pre></td></tr></table></figure></p>
<h2 id="3-创建集群"><a href="#3-创建集群" class="headerlink" title="3. 创建集群"></a>3. 创建集群</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy new node1</div></pre></td></tr></table></figure>
<p>其中node1是mon节点，执行该命令会生成ceph配置文件、monitor密钥文件以及日志文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ls</div><div class="line">ceph.conf  ceph.log  ceph.mon.keyring</div></pre></td></tr></table></figure></p>
<h2 id="4-修改默认冗余份数"><a href="#4-修改默认冗余份数" class="headerlink" title="4. 修改默认冗余份数"></a>4. 修改默认冗余份数</h2><h3 id="4-1-设置osd冗余份数"><a href="#4-1-设置osd冗余份数" class="headerlink" title="4.1 设置osd冗余份数"></a>4.1 设置osd冗余份数</h3><p>由于我们目前只有两个osd节点，而默认的冗余份数是3，因此我们需要设置为2，如果osd节点大于2，则此步骤省略。<br>修改ceph.conf文件，在[global]下增加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ echo &quot;osd pool default size = 2&quot; &gt;&gt; ceph.conf</div></pre></td></tr></table></figure></p>
<p><strong>如果有多块网卡需要配置使用哪块网卡</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mon_host = `对应网卡的IP地址`</div></pre></td></tr></table></figure></p>
<h3 id="4-2-在节点上安装ceph软件"><a href="#4-2-在节点上安装ceph软件" class="headerlink" title="4.2 在节点上安装ceph软件"></a>4.2 在节点上安装ceph软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy install node1 node2</div></pre></td></tr></table></figure>
<p>如果失败会报如下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[node1][ERROR ] RuntimeError: command returned non-zero exit status: 100</div><div class="line">[ceph_deploy][ERROR ] RuntimeError: Failed to execute command: apt-get -q update</div></pre></td></tr></table></figure></p>
<p><strong>解决方法</strong></p>
<ul>
<li><p>1.同步配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ rsync -avz ../ceph ceph@node2:~/opt/</div></pre></td></tr></table></figure>
</li>
<li><p>2.在<font color="red">所有节点</font>分别安装ceph</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ sudo apt-get install ceph</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-初始化mon节点和收集密钥信息"><a href="#5-初始化mon节点和收集密钥信息" class="headerlink" title="5. 初始化mon节点和收集密钥信息"></a>5. 初始化mon节点和收集密钥信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy mon create-initial</div></pre></td></tr></table></figure>
<p>如果报如下错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[node1][DEBUG ] get remote short hostname</div><div class="line">[node1][WARNIN] ********************************************************************************</div><div class="line">[node1][WARNIN] provided hostname must match remote hostname</div><div class="line">[node1][WARNIN] provided hostname: node1</div><div class="line">[node1][WARNIN] remote hostname: ubuntu</div><div class="line">[node1][WARNIN] monitors may not reach quorum and create-keys will not complete</div></pre></td></tr></table></figure></p>
<p>因为/etc/hosts中解析的<code>ip地址 主机名</code>和远端的主机名不匹配所致，在/etc/hosts中修改为正确的hostname，清理下从头重新安装。</p>
<p>执行完毕，目录应该有以下文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;cluster-name&#125;.client.admin.keyring</div><div class="line">&#123;cluster-name&#125;.bootstrap-osd.keyring</div><div class="line">&#123;cluster-name&#125;.bootstrap-mds.keyring</div><div class="line">&#123;cluster-name&#125;.bootstrap-rgw.keyring</div></pre></td></tr></table></figure></p>
<h2 id="6-配置osd节点"><a href="#6-配置osd节点" class="headerlink" title="6. 配置osd节点"></a>6. 配置osd节点</h2><p>首先格式化磁盘，注意我们使用的是/dev/sdb：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy disk zap node1:sdb</div><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy disk zap node2:sdb</div></pre></td></tr></table></figure></p>
<p>以上步骤会<font color="red">清空磁盘的所有数据</font>。</p>
<p>接下来创建osd，注意由于我们只是测试，故没有使用单独的磁盘作为journal<br>(todo分析具体什么)<br>实际在生产环境下，需要配备SSD分区作为journal，能够最大化IO吞吐量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy osd create node1:sdb</div><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy osd create node2:sdb</div></pre></td></tr></table></figure></p>
<p>在节点上执行<code>df -h</code>会得到如下结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dev/sdb1        35G   36M   35G   1% /var/lib/ceph/osd/ceph-0</div></pre></td></tr></table></figure></p>
<h2 id="7-配置admin节点"><a href="#7-配置admin节点" class="headerlink" title="7. 配置admin节点"></a>7. 配置admin节点</h2><p>admin节点同时也作为我们的client节点，需要拷贝其他节点的配置文件以及密钥，使得不需要指定mon地址以及用户信息就可以直接管理我们的ceph集群，执行以下命令即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-deploy admin node1 node2</div><div class="line">ceph@node1:~/opt/ceph$ sudo chmod +r /etc/ceph/ceph.client.admin.keyring # 保证具有读取的密钥的权限</div></pre></td></tr></table></figure></p>
<h2 id="8-测试结果"><a href="#8-测试结果" class="headerlink" title="8. 测试结果"></a>8. 测试结果</h2><p>运行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph health</div><div class="line">ceph@node1:~/opt/ceph$ ceph -s</div></pre></td></tr></table></figure></p>
<p>结果若返回active + clean状态，则说明部署成功！</p>
<h2 id="9-配置mds"><a href="#9-配置mds" class="headerlink" title="9. 配置mds"></a>9. 配置mds</h2><p><a href="http://docs.ceph.com/docs/master/install/manual-deployment/#adding-mds" target="_blank" rel="external">Adding MDS参考链接</a></p>
<h3 id="9-1-安装mds"><a href="#9-1-安装mds" class="headerlink" title="9.1 安装mds"></a>9.1 安装mds</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ sudo apt-get install ceph-mds</div></pre></td></tr></table></figure>
<h3 id="9-2-配置"><a href="#9-2-配置" class="headerlink" title="9.2 配置"></a>9.2 配置</h3><p>{id}是一个任意的名字,例如可以是电脑的主机名</p>
<p>编辑<code>ceph.conf</code>，添加MDS区域<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[mds]</div><div class="line">  mds data = /var/lib/ceph/mds/mds.$id</div><div class="line">  keyring = /var/lib/ceph/mds/mds.$id/mds.$id.keyring</div><div class="line"></div><div class="line">[mds.0] # 0为id</div><div class="line">  host = 0 # &#123;id&#125;</div></pre></td></tr></table></figure></p>
<h3 id="9-3-创建目录"><a href="#9-3-创建目录" class="headerlink" title="9.3 创建目录"></a>9.3 创建目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ mkdir -p /var/lib/ceph/mds/&#123;cluster-name&#125;-&#123;id&#125;</div></pre></td></tr></table></figure>
<h3 id="9-4-生成keyring"><a href="#9-4-生成keyring" class="headerlink" title="9.4 生成keyring"></a>9.4 生成keyring</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-authtool --create-keyring /var/lib/ceph/mds/&#123;cluster-name&#125;-&#123;id&#125;/keyring --gen-key -n mds.&#123;id&#125;</div></pre></td></tr></table></figure>
<p>Import the keyring and set caps.:</p>
<h3 id="9-5-导入keyring"><a href="#9-5-导入keyring" class="headerlink" title="9.5 导入keyring"></a>9.5 导入keyring</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph auth add mds.&#123;id&#125; osd &quot;allow rwx&quot; mds &quot;allow&quot; mon &quot;allow profile mds&quot; -i /var/lib/ceph/mds/&#123;cluster&#125;-&#123;id&#125;/keyring</div></pre></td></tr></table></figure>
<h3 id="9-6-修改配置文件"><a href="#9-6-修改配置文件" class="headerlink" title="9.6 修改配置文件"></a>9.6 修改配置文件</h3><p>Add to ceph.conf.:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[mds.&#123;id&#125;]</div><div class="line">host = &#123;id&#125;</div></pre></td></tr></table></figure></p>
<h3 id="9-7-手动启动"><a href="#9-7-手动启动" class="headerlink" title="9.7 手动启动"></a>9.7 手动启动</h3><p>Start the daemon the manual way.:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph-mds --cluster &#123;cluster-name&#125; -i &#123;id&#125; -m &#123;mon-hostname&#125;:&#123;mon-port&#125; [-f]</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ service ceph start</div><div class="line">ceph@node1:~/opt/ceph$ sudo service ceph start mds</div></pre></td></tr></table></figure>
<p>检查进程是否存在<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ps -ef | grep ceph</div><div class="line">root      4032     1  0 17:18 ?        00:00:00 /usr/bin/ceph-mon --cluster=ceph -i node1 -f</div><div class="line">root      4687     1  0 17:19 ?        00:00:04 /usr/bin/ceph-osd --cluster=ceph -i 0 -f</div><div class="line">root      5196     1  0 17:23 ?        00:00:00 ceph-mds --cluster mds -i 0 -m 192.168.1.176:6789</div></pre></td></tr></table></figure></p>
<p>如果已经存在，下面步骤跳过，直接执行第10步的挂载</p>
<p>如果mds起不来，可以执行如下命令，查看具体报错信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ sudo ceph-mds --cluster node1 -i 0 -m 192.168.1.176:6789 -f</div><div class="line">starting mds.0 at :/0</div><div class="line">2017-03-13 15:15:49.485908 7f32b07bb800 -1 did not load config file, using default settings.</div><div class="line">2017-03-13 15:15:49.488414 7f32b07bb800 -1 monclient(hunting): ERROR: missing keyring, cannot use cephx for authentication</div><div class="line">2017-03-13 15:15:49.490934 7f32b07bb800 -1 mds.-1.0 ERROR: failed to authenticate: (95) Operation not supported</div></pre></td></tr></table></figure></p>
<blockquote>
<p>If starting the daemon fails with this error:<br>mds.-1.0 ERROR: failed to authenticate: (22) Invalid argument<br>Then make sure you do not have a keyring set in ceph.conf in the global section; move it to the client section; or add a keyring setting specific to this mds daemon. And verify that you see the same key in the mds data directory and ceph auth get mds.{id} output.</p>
</blockquote>
<p><strong> 检查步骤 </strong><br>查看如下结果是否一致<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ ceph auth get mds.0</div><div class="line">exported keyring for mds.0</div><div class="line">[mds.0]</div><div class="line">        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==</div><div class="line">        caps mds = &quot;allow&quot;</div><div class="line">        caps mon = &quot;allow profile mds&quot;</div><div class="line">        caps osd = &quot;allow rwx&quot;</div><div class="line"></div><div class="line"></div><div class="line">ceph@node1:~/opt/ceph$ cat /var/lib/ceph/mds/mds-0/keyring</div><div class="line">[mds.0]</div><div class="line">        key = AQBrR8ZY8GN+NxAAVu2pKRH0pXKixwca7HUdjA==</div></pre></td></tr></table></figure></p>
<p>如果仍然报如上错误，可以尝试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ sudo chown -R ceph:ceph /var/lib/ceph/mds/mds-0</div></pre></td></tr></table></figure></p>
<p>重新生成认证文件应该就会成功,<font color="red">不过不确定对后续操作的影响</font></p>
<p><a href="https://www.sebastien-han.fr/blog/2013/05/13/deploy-a-ceph-mds-server/" target="_blank" rel="external">也可以尝试这里的步骤，不过不保证会好使</a></p>
<p>Now you are ready to create a Ceph filesystem.</p>
<h2 id="10-挂载"><a href="#10-挂载" class="headerlink" title="10. 挂载"></a>10. 挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs</div><div class="line">ceph@node1:~/opt/ceph$ sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</div><div class="line">ceph@node1:~/opt/ceph$ df -h</div></pre></td></tr></table></figure>
<p>在node2上执行 安装ceph-fuse<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ceph@node1:~/opt/ceph$ sudo apt-get install ceph-fuse</div><div class="line">ceph@node1:~/opt/ceph$ sudo mkdir /mnt/cephfs</div><div class="line">ceph@node1:~/opt/ceph$ sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</div><div class="line">ceph@node1:~/opt/ceph$ df -h</div></pre></td></tr></table></figure></p>
<h2 id="11-注意事项"><a href="#11-注意事项" class="headerlink" title="11. 注意事项"></a>11. 注意事项</h2><font color="red">用户ceph不能够锁定，为了安全问题，只能将用户ceph改为nologin</font>

<h2 id="12-服务器重启"><a href="#12-服务器重启" class="headerlink" title="12. 服务器重启"></a>12. 服务器重启</h2><p>服务器重启后，对于mon节点来说<code>osd</code>和<code>mon</code>会自动启动<br>osd节点的osd服务也会自动启动</p>
<p> mon节点的<code>mds</code>服务需要手动启动，启动方法为<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ceph-mds --cluster &#123;cluster-name&#125; -i &#123;id&#125; -m &#123;mon-hostname&#125;:&#123;mon-port&#125; [-f]</div></pre></td></tr></table></figure></p>
<p> <strong>另</strong><br> 启动完mds后还需要执行挂载命令<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ceph-fuse -m &#123;ip-address-of-monitor&#125;:6789 /mnt/cephfs</div></pre></td></tr></table></figure></p>
<p> 可以将以上命令<strong>放入到开机启动项中</strong>，但是服务器重启完成后要进行检查ceph的运行状态<br> <code>ceph -s</code>或者<code>ps -ef | grep ceph</code> 或者 通过<code>df -h</code>查看ceph-fuse是否成功挂载目录<br> 如果长时间没成功，并且<code>ceph -s</code>报错，可以尝试将另一节点node2也重启，node1可以成功挂载。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker容器]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/27/docker%E5%AE%B9%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="1-新建并启动容器"><a href="#1-新建并启动容器" class="headerlink" title="1. 新建并启动容器"></a>1. 新建并启动容器</h2><p><code>docker run</code><br>例：下面的命令输出一个“Hello World”并终止容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo docker run ubuntu:14.04 /bin/echo &apos;Hello World&apos;</div><div class="line">Hello World</div></pre></td></tr></table></figure></p>
<p>启动一个bash终端并允许交互<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo docker run -t -i ubuntu:14.04 /bin/bash</div><div class="line">root@3060c837bd2d:/#</div></pre></td></tr></table></figure></p>
<p><code>-t</code>让docker分配一个伪终端并绑定到容器的标准输入上，<code>-i</code>则让容器的标准输入保持打开。</p>
<h2 id="2-启动已终止的容器"><a href="#2-启动已终止的容器" class="headerlink" title="2. 启动已终止的容器"></a>2. 启动已终止的容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo docker ps -a 找到容器ID</div><div class="line">sudo docker start CONTAINER_ID</div></pre></td></tr></table></figure>
<h2 id="3-守护态运行"><a href="#3-守护态运行" class="headerlink" title="3. 守护态运行"></a>3. 守护态运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sudo docker run -d ubuntu:14.04 /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</div></pre></td></tr></table></figure>
<p>在使用<code>-d</code>参数时,容器启动后会进入后台。某些时候需要进入容器进行操作,有很多种方法,包括使用<code>docker attach</code>命令或nsenter工具等。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ubuntu@ubuntu:~$ sudo docker ps</div><div class="line">CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES</div><div class="line">428e85fb5182        ubuntu:12.04        &quot;/bin/sh -c &apos;while t   3 minutes ago       Up 3 minutes                            pensive_kirch       </div><div class="line">ubuntu@ubuntu:~$ sudo docker attach 428e85fb5182</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">^Cubuntu@ubuntu:~$ </div><div class="line">ubuntu@ubuntu:~$ sudo docker ps</div><div class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</div></pre></td></tr></table></figure></p>
<p>获取容器的输出信息，可以通过<code>docker log</code>命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker logs CONTAINER_ID</div></pre></td></tr></table></figure></p>
<h2 id="4-终止容器"><a href="#4-终止容器" class="headerlink" title="4. 终止容器"></a>4. 终止容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker stop CONTAINER_ID</div></pre></td></tr></table></figure>
<p>处于终止态的容器可以通过<code>sudo docker start CONTAINER_ID</code>命令来重新启动。<br><code>sudo docker restart CONTAINER_ID</code>命令可以重启一个运行态的容器。</p>
<h2 id="5-进入容器"><a href="#5-进入容器" class="headerlink" title="5. 进入容器"></a>5. 进入容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker attach CONTAINER_ID</div></pre></td></tr></table></figure>
<p>用attach命令有时候并不方便。当多个窗口同时attach到同一个容器的时候,所有窗口都会同步显示。当某个窗口因命令阻塞时,其他窗口也无法执行操作了。</p>
<h2 id="6-导出容器"><a href="#6-导出容器" class="headerlink" title="6. 导出容器"></a>6. 导出容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo docker ps -a</div><div class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS           PORTS             NAMES</div><div class="line">3060c837bd2d        ubuntu:14.04        &quot;/bin/bash&quot;              3 days ago          Up 6 hours                         nonghe</div><div class="line"></div><div class="line">sudo docker export 3060c837bd2d &gt; ubuntu.tar</div></pre></td></tr></table></figure>
<p>这样导出容器快照到本地文件。</p>
<h2 id="7-导入容器快照"><a href="#7-导入容器快照" class="headerlink" title="7. 导入容器快照"></a>7. 导入容器快照</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cat ubuntu.tar | sudo docker import - test/ubuntu:v1.0</div><div class="line">sudo docker images</div></pre></td></tr></table></figure>
<p>通过指定URL或者某个目录来导入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker import http://example.com/exampleimage.tgz example/imagerepo</div></pre></td></tr></table></figure></p>
<p>既可以使用<code>docker load</code>来导入镜像存储文件到本地镜像库，也可以使用<code>docker import</code>来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保持容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</p>
<h2 id="8-删除容器"><a href="#8-删除容器" class="headerlink" title="8. 删除容器"></a>8. 删除容器</h2><p>处于终止状态的容器可以通过如下命令来删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker rm CONTAINER_ID</div></pre></td></tr></table></figure></p>
<p>如果要删除一个运行中的容器，可以添加<code>-f</code>参数。docker会发送SIGKILL信号给容器。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker镜像]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/27/docker%E9%95%9C%E5%83%8F/</url>
      <content type="html"><![CDATA[<h2 id="1-获取镜像"><a href="#1-获取镜像" class="headerlink" title="1. 获取镜像"></a>1. 获取镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker pull 镜像名</div></pre></td></tr></table></figure>
<p>例：从Docker Hub仓库下载一个Ubuntu 12.04的操作系统的镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ubuntu@ubuntu:~$ sudo docker pull ubuntu:12.04</div><div class="line">12.04: Pulling from ubuntu</div><div class="line"></div><div class="line">8941035ae797: Pull complete </div><div class="line">191c4e1e4400: Pull complete </div><div class="line">fd04a9dc157f: Pull complete </div><div class="line">be08d59fa177: Pull complete </div><div class="line">ecf8c2069900: Pull complete </div><div class="line">8ea067ad7a27: Pull complete </div><div class="line">Digest: sha256:57a83f4b4f43f2d008c8ceaa9663a6f7ecd061fefa80da8f32e0f22c7b923390</div><div class="line">Status: Downloaded newer image for ubuntu:12.04</div></pre></td></tr></table></figure></p>
<h2 id="2-显示本地镜像"><a href="#2-显示本地镜像" class="headerlink" title="2. 显示本地镜像"></a>2. 显示本地镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker images</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ubuntu@ubuntu:~$ sudo docker images</div><div class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</div><div class="line">ubuntu              12.04               8ea067ad7a27        4 weeks ago         103.6 MB</div></pre></td></tr></table></figure>
<h2 id="3-创建镜像"><a href="#3-创建镜像" class="headerlink" title="3. 创建镜像"></a>3. 创建镜像</h2><h3 id="3-1-修改已有的镜像"><a href="#3-1-修改已有的镜像" class="headerlink" title="3.1 修改已有的镜像"></a>3.1 修改已有的镜像</h3><ul>
<li>使用下载的镜像启动一个容器<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker run -t -i 镜像名 /bin/bash</div></pre></td></tr></table></figure>
</li>
</ul>
<p>例： 使用镜像ubuntu:12.04来启动一个容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ubuntu@ubuntu:~$ sudo docker run -t -i ubuntu:12.04 /bin/bash</div><div class="line">root@c2b59b70c1b7:/# pwd</div><div class="line">/</div><div class="line">root@f93c7537832d:/# ls</div><div class="line">bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var</div><div class="line">root@f93c7537832d:/# ps </div><div class="line">  PID TTY          TIME CMD</div><div class="line">    1 ?        00:00:00 bash</div><div class="line">   12 ?        00:00:00 ps</div></pre></td></tr></table></figure></p>
<ul>
<li><p>在容器中对安装软件<br>结束操作后，执行<code>exit</code>来退出。</p>
</li>
<li><p>提交更新后的副本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker commit -m &quot;提交说明&quot; -a 指定更新的用户信息 用来创建镜像的容器的ID 指定目标镜像的仓库名和tag信息</div></pre></td></tr></table></figure>
</li>
</ul>
<p>创建成功后会返回这个镜像的ID信息<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo docker commit -m &quot;Add node&quot; -a &quot;username&quot; aeee120a81fc testnode </div><div class="line"></div><div class="line">sudo docker images 查看新创建的镜像</div><div class="line">sudo docker run -t -i testnode /bin/bash  使用新创建的镜像启动容器</div></pre></td></tr></table></figure></p>
<h3 id="3-2-使用Dockerfile来创建镜像"><a href="#3-2-使用Dockerfile来创建镜像" class="headerlink" title="3.2 使用Dockerfile来创建镜像"></a>3.2 使用Dockerfile来创建镜像</h3><p>todo</p>
<h3 id="3-3-从本地导入"><a href="#3-3-从本地导入" class="headerlink" title="3.3 从本地导入"></a>3.3 从本地导入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo cat ubuntu-14.04.tar.gz | docker import - ubuntu:14.04</div><div class="line">sudo docker images</div></pre></td></tr></table></figure>
<h3 id="3-4-上传镜像"><a href="#3-4-上传镜像" class="headerlink" title="3.4 上传镜像"></a>3.4 上传镜像</h3><p>用户在Docker Hub上完成注册后，可以可以通过<code>docker push</code>命令，把自己创建的镜像上传到docker的公共仓库来共享。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker push 镜像名</div></pre></td></tr></table></figure></p>
<h2 id="4-存出镜像"><a href="#4-存出镜像" class="headerlink" title="4. 存出镜像"></a>4. 存出镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo docker images</div><div class="line">sudo docker save -o 保存文件名 镜像名</div></pre></td></tr></table></figure>
<h2 id="5-载入镜像"><a href="#5-载入镜像" class="headerlink" title="5. 载入镜像"></a>5. 载入镜像</h2><p>可以使用<code>docker load</code>从导出的本地文件中再导入到本地镜像库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker load --input ubuntu_14.04.tar</div></pre></td></tr></table></figure></p>
<p>或<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker load &lt; ubuntu_14.04.tar</div></pre></td></tr></table></figure></p>
<p>这将导入镜像以及相关的元数据信息（包括标签等）</p>
<h2 id="6-删除本地镜像"><a href="#6-删除本地镜像" class="headerlink" title="6. 删除本地镜像"></a>6. 删除本地镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker rmi IMAGE_ID</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[docker安装]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/27/docker%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="1-ubuntu通过Docker源安装最新版本"><a href="#1-ubuntu通过Docker源安装最新版本" class="headerlink" title="1. ubuntu通过Docker源安装最新版本"></a>1. ubuntu通过Docker源安装最新版本</h2><h3 id="1-1-安装依赖"><a href="#1-1-安装依赖" class="headerlink" title="1.1 安装依赖"></a>1.1 安装依赖</h3><p>要安装最新的Docker版本，首先需要安装apt-transport-https支持，之后通过添加源来安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install apt-transport-https ca-certificates</div></pre></td></tr></table></figure></p>
<h3 id="1-2-添加GPG-key"><a href="#1-2-添加GPG-key" class="headerlink" title="1.2 添加GPG key"></a>1.2 添加GPG key</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-key adv \</div><div class="line">               --keyserver hkp://ha.pool.sks-keyservers.net:80 \</div><div class="line">               --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</div></pre></td></tr></table></figure>
<h3 id="1-3-添加对应的源"><a href="#1-3-添加对应的源" class="headerlink" title="1.3 添加对应的源"></a>1.3 添加对应的源</h3><p>源列表</p>
<table>
<thead>
<tr>
<th>Ubuntu version</th>
<th>Repository</th>
</tr>
</thead>
<tbody>
<tr>
<td>Precise 12.04 (LTS)</td>
<td>deb <a href="https://apt.dockerproject.org/repo" target="_blank" rel="external">https://apt.dockerproject.org/repo</a> ubuntu-precise main</td>
</tr>
<tr>
<td>Trusty 14.04 (LTS)</td>
<td>deb <a href="https://apt.dockerproject.org/repo" target="_blank" rel="external">https://apt.dockerproject.org/repo</a> ubuntu-trusty main</td>
</tr>
<tr>
<td>Wily 15.10</td>
<td>deb <a href="https://apt.dockerproject.org/repo" target="_blank" rel="external">https://apt.dockerproject.org/repo</a> ubuntu-wily main</td>
</tr>
<tr>
<td>Xenial 16.04 (LTS)</td>
<td>deb <a href="https://apt.dockerproject.org/repo" target="_blank" rel="external">https://apt.dockerproject.org/repo</a> ubuntu-xenial main</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &quot;&lt;REPO&gt;&quot; | sudo tee /etc/apt/sources.list.d/docker.list</div></pre></td></tr></table></figure>
<h3 id="1-4-更新apt包的index"><a href="#1-4-更新apt包的index" class="headerlink" title="1.4 更新apt包的index"></a>1.4 更新apt包的index</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure>
<h3 id="1-5-安装docker"><a href="#1-5-安装docker" class="headerlink" title="1.5  安装docker"></a>1.5  安装docker</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install docker-engine</div><div class="line">sudo service docker start</div><div class="line">sudo docker run hello-world</div></pre></td></tr></table></figure>
<h2 id="2-CentOS安装"><a href="#2-CentOS安装" class="headerlink" title="2. CentOS安装"></a>2. CentOS安装</h2><h3 id="2-1-更新包"><a href="#2-1-更新包" class="headerlink" title="2.1 更新包"></a>2.1 更新包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum update</div></pre></td></tr></table></figure>
<h3 id="2-2-添加yum源"><a href="#2-2-添加yum源" class="headerlink" title="2.2 添加yum源"></a>2.2 添加yum源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">sudo tee /etc/yum.repos.d/docker.repo &lt;&lt; EOF</div><div class="line">[DockerRepo]</div><div class="line">name=Docker Repository</div><div class="line">baseurl=https://yum.dockerproject.org/repo/main/centos/7/</div><div class="line">enabled=1</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=https://yum.dockerproject.org/gpg</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h3 id="2-3-安装docker包"><a href="#2-3-安装docker包" class="headerlink" title="2.3 安装docker包"></a>2.3 安装docker包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum -y install docker-engine</div></pre></td></tr></table></figure>
<h3 id="2-4-开启启动"><a href="#2-4-开启启动" class="headerlink" title="2.4 开启启动"></a>2.4 开启启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl enable docker.service</div></pre></td></tr></table></figure>
<h3 id="2-5-启动服务"><a href="#2-5-启动服务" class="headerlink" title="2.5 启动服务"></a>2.5 启动服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start docker</div></pre></td></tr></table></figure>
<h2 id="3-验证docker是否安装成功"><a href="#3-验证docker是否安装成功" class="headerlink" title="3. 验证docker是否安装成功"></a>3. 验证docker是否安装成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">sudo docker run --rm hello-world</div><div class="line"></div><div class="line">Unable to find image &apos;hello-world:latest&apos; locally</div><div class="line"> latest: Pulling from library/hello-world</div><div class="line"> c04b14da8d14: Pull complete</div><div class="line"> Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9</div><div class="line"> Status: Downloaded newer image for hello-world:latest</div><div class="line"></div><div class="line"> Hello from Docker!</div><div class="line"> This message shows that your installation appears to be working correctly.</div><div class="line"></div><div class="line"> To generate this message, Docker took the following steps:</div><div class="line">  1. The Docker client contacted the Docker daemon.</div><div class="line">  2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</div><div class="line">  3. The Docker daemon created a new container from that image which runs the</div><div class="line">     executable that produces the output you are currently reading.</div><div class="line">  4. The Docker daemon streamed that output to the Docker client, which sent it</div><div class="line">     to your terminal.</div><div class="line"></div><div class="line"> To try something more ambitious, you can run an Ubuntu container with:</div><div class="line">  $ docker run -it ubuntu bash</div><div class="line"></div><div class="line"> Share images, automate workflows, and more with a free Docker Hub account:</div><div class="line">  https://hub.docker.com</div><div class="line"></div><div class="line"> For more examples and ideas, visit:</div><div class="line">  https://docs.docker.com/engine/userguide/</div></pre></td></tr></table></figure>
<p><a href="https://github.com/docker/docker" target="_blank" rel="external">docker on github</a><br><a href="https://docs.docker.com/engine/installation/" target="_blank" rel="external">docker install mothed</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux添加swap]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/14/linux%E6%B7%BB%E5%8A%A0swap/</url>
      <content type="html"><![CDATA[<h2 id="1-swap说明"><a href="#1-swap说明" class="headerlink" title="1. swap说明"></a>1. swap说明</h2><p>物理内存就是计算机的实际内存大小，由RAM芯片组成的。<br>虚拟内存则是虚拟出来的，使用磁盘代替内存。<br>虚拟内存的出现，让机器内存不够的情况得到部分解决。当程序运行起来由操作系统做具体虚拟内存到物理内存的替换和载。这里的虚拟内存就是swap</p>
<p>当物理内存使用完或者达到一定比例之后，我们可以使用swap做临时的内存使用。当物理内存和swap都被使用完那么就会出错，out of memory。</p>
<h2 id="2-使用dd创建swap"><a href="#2-使用dd创建swap" class="headerlink" title="2. 使用dd创建swap"></a>2. 使用dd创建swap</h2><h3 id="2-1-查看当前内存"><a href="#2-1-查看当前内存" class="headerlink" title="2.1 查看当前内存"></a>2.1 查看当前内存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ free -h</div><div class="line">             total       used       free     shared    buffers     cached</div><div class="line">Mem:          7.7G       6.0G       1.6G       875M       476M       3.2G</div><div class="line">-/+ buffers/cache:       2.4G       5.3G</div><div class="line">Swap:         0B         0B       0B</div></pre></td></tr></table></figure>
<h3 id="2-2-创建swap文件"><a href="#2-2-创建swap文件" class="headerlink" title="2.2 创建swap文件"></a>2.2 创建swap文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ sudo -s</div><div class="line">root@localhost:~# dd if=/dev/zero of=/mnt/swap_mount_point bs=1M count=2048</div><div class="line">2048+0 records in</div><div class="line">2048+0 records out</div><div class="line">2147483648 bytes (2.1 GB) copied, 16.7229 s, 128 MB/s</div><div class="line"></div><div class="line">root@localhost:~# ls -lh /mnt/swap_mount_point </div><div class="line">-rw-r--r-- 1 root root 2.0G Feb 14 18:08 /mnt/swap_mount_point</div><div class="line"></div><div class="line">root@localhost:~# file /mnt/swap_mount_point </div><div class="line">/mnt/swap_mount_point: data</div></pre></td></tr></table></figure>
<h3 id="2-3-格式化swap文件"><a href="#2-3-格式化swap文件" class="headerlink" title="2.3 格式化swap文件"></a>2.3 格式化swap文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@localhost:~# mkswap /mnt/swap_mount_point </div><div class="line">Setting up swapspace version 1, size = 2097148 KiB</div><div class="line">no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678</div><div class="line">root@localhost:~# file /mnt/swap_mount_point </div><div class="line">/mnt/swap_mount_point: Linux/i386 swap file (new style), version 1 (4K pages), size 524287 pages, no label, UUID=2ed6629c-4b31-499b-b21d-2235971f8678</div></pre></td></tr></table></figure>
<h3 id="2-4-挂载"><a href="#2-4-挂载" class="headerlink" title="2.4 挂载"></a>2.4 挂载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">root@localhost:~# swapon /mnt/swap_mount_point </div><div class="line">root@localhost:~# free -h</div><div class="line">             total       used       free     shared    buffers     cached</div><div class="line">Mem:          7.7G       7.5G       197M       878M       476M       4.7G</div><div class="line">-/+ buffers/cache:       2.3G       5.3G</div><div class="line">Swap:         2G       264K       2G</div></pre></td></tr></table></figure>
<h3 id="2-5-添加开机启动"><a href="#2-5-添加开机启动" class="headerlink" title="2.5 添加开机启动"></a>2.5 添加开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@localhost:~# echo &quot;/mnt/swap_mount_point swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab</div></pre></td></tr></table></figure>
<h2 id="3-相关命令"><a href="#3-相关命令" class="headerlink" title="3. 相关命令"></a>3. 相关命令</h2><ul>
<li><p>挂载swap</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ swapon /mnt/swap_mount_ponit</div></pre></td></tr></table></figure>
</li>
<li><p>卸载swap</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ swapoff /mnt/swap_mount_point</div></pre></td></tr></table></figure>
</li>
<li><p>查看swap使用情况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ swapon -s </div><div class="line">或</div><div class="line">×××@localhost: ~$ cat /proc/swaps</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-swap的优化"><a href="#4-swap的优化" class="headerlink" title="4. swap的优化"></a>4. swap的优化</h2><p>在ubuntu中swappiness参数值的大小对如何使用swap分区有很大的关系。<br>swappiness=0 表示最大限度使用物理内存。然后才是swap分区<br>swappiness=100 表示积极地使用swap分区，并把内存上的数据及时地搬运到swap空间上。</p>
<p><strong>swappiness值的修改方法</strong></p>
<ul>
<li><p>方法1</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ sudo sysctl vm.swappiness=60</div></pre></td></tr></table></figure>
</li>
<li><p>方法2</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">×××@localhost: ~$ sudo vi /etc/sysctl.conf</div><div class="line">在文件尾添加`vm.swappiness=60`，然后刷新内核参数</div><div class="line">×××@localhost: ~$ sudo sysctl -p</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu指定默认编辑器]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/07/ubuntu%E6%8C%87%E5%AE%9A%E9%BB%98%E8%AE%A4%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>ubuntu默认的编辑器为nano，例如执行如下命令时就会使用nano来打开<br><code>sudo visudo</code>或者<code>git commit --amend</code></p>
<p>如果想要设置成默认使用自己习惯的vi，可以执行如下命令进行选择</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ sudo update-alternatives --config editor </div><div class="line">There are 4 choices for the alternative editor (providing /usr/bin/editor).</div><div class="line">  Selection    Path                Priority   Status</div><div class="line">------------------------------------------------------------</div><div class="line">* 0            /bin/nano            40        auto mode</div><div class="line">  1            /bin/ed             -100       manual mode</div><div class="line">  2            /bin/nano            40        manual mode</div><div class="line">  3            /usr/bin/vim.basic   30        manual mode</div><div class="line">  4            /usr/bin/vim.tiny    10        manual mode</div><div class="line">Press enter to keep the current choice[*], or type selection number:</div></pre></td></tr></table></figure>
<p>输入<code>3</code>就可以了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu修改网卡名称]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/07/ubuntu%E4%BF%AE%E6%94%B9%E7%BD%91%E5%8D%A1%E5%90%8D%E7%A7%B0/</url>
      <content type="html"><![CDATA[<p>今天强迫症又犯了，想要把网卡的名称改为eth0和wlan0<br>按照网上的方法试了几种，都没有成功，下面记录下我修改成功的方法。</p>
<h2 id="1-修改配置文件"><a href="#1-修改配置文件" class="headerlink" title="1. 修改配置文件"></a>1. 修改配置文件</h2><p>Open the file /etc/udev/rules.d/70-persistent-net.rules with your favorite editor.<br>Find the rule matching your MAC address.<br>Change the NAME value from eth1 to eth0 i.e. NAME=”eth0”</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo vi /etc/udev/rules.d/70-persistent-net.rules</div></pre></td></tr></table></figure>
<p>找到你要修改的网卡的MAC，修改对应的<code>NAME</code>值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># PCI device 0x10ec:0x8168 (r8169)</div><div class="line">SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;address&#125;==&quot;50:7b:9d:55:47:2e&quot;, ATTR&#123;dev_id&#125;==&quot;0x0&quot;, ATTR&#123;type&#125;==&quot;1&quot;, KERNEL==&quot;eth*&quot;, NAME=&quot;eth0&quot;</div><div class="line"> </div><div class="line"># PCI device 0x168c:0x0042 (ath10k_pci)</div><div class="line">SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;address&#125;==&quot;30:52:cb:68:81:17&quot;, ATTR&#123;dev_id&#125;==&quot;0x0&quot;, ATTR&#123;type&#125;==&quot;1&quot;, KERNEL==&quot;wlan*&quot;, NAME=&quot;wlan0&quot;</div></pre></td></tr></table></figure></p>
<h2 id="2-使修改生效"><a href="#2-使修改生效" class="headerlink" title="2. 使修改生效"></a>2. 使修改生效</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo udevadm trigger</div></pre></td></tr></table></figure>
<p>运行<code>ifconfig</code>查看网卡名称是否已经修改过来，如果没成功，就重启一下吧。</p>
<p><a href="http://askubuntu.com/questions/637591/my-ethernet-interface-name-has-changed-from-eth0-to-eth1" target="_blank" rel="external">From askubuntu</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python指定字符编码]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/02/07/python%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>python指定字符编码的方式有多种<br><strong>编码格式是要写在解释器的下面的</strong></p>
<h2 id="1-指定方法"><a href="#1-指定方法" class="headerlink" title="1.指定方法"></a>1.指定方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># _*_ coding:utf-8 _*_</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># -*- coding:utf-8 -*-</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># coding:utf-8</div></pre></td></tr></table></figure>
<h2 id="2-使用场景"><a href="#2-使用场景" class="headerlink" title="2.使用场景"></a>2.使用场景</h2><ul>
<li>在python的程序中，如果有中文字符需要指定字符编码方式，无论是否是在注释中。</li>
<li>在数据库操作中，读取或者写入的内容中有汉字时。具体的方法如下:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># _*_ coding:utf-8 _*_</div><div class="line"></div><div class="line">import sys</div><div class="line">reload(sys)                                                                      </div><div class="line">sys.setdefaultencoding(&apos;utf8&apos;)</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu安装powerline字体]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/22/ubuntu%E5%AE%89%E8%A3%85powerline%E5%AD%97%E4%BD%93/</url>
      <content type="html"><![CDATA[<h2 id="1-下载powerline字体和配置文件"><a href="#1-下载powerline字体和配置文件" class="headerlink" title="1.下载powerline字体和配置文件"></a>1.下载powerline字体和配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf</div><div class="line">$ wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf</div></pre></td></tr></table></figure>
<h2 id="2-将字体放到字体目录中"><a href="#2-将字体放到字体目录中" class="headerlink" title="2.将字体放到字体目录中"></a>2.将字体放到字体目录中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo mv ./PowerlineSymbols.otf /usr/local/share/fonts</div></pre></td></tr></table></figure>
<h2 id="3-更新字体缓存"><a href="#3-更新字体缓存" class="headerlink" title="3.更新字体缓存"></a>3.更新字体缓存</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ fc-cache -vf /usr/share/fonts/</div></pre></td></tr></table></figure>
<h2 id="4-添加字体配置文件"><a href="#4-添加字体配置文件" class="headerlink" title="4.添加字体配置文件"></a>4.添加字体配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/</div></pre></td></tr></table></figure>
<p>这样vim中的powerline字体就能够正确显示了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu安装为知笔记]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/20/ubuntu%E5%AE%89%E8%A3%85%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>今天在ubunu上重新安装wiznote时，发现<a href="http://www.wiz.cn/wiznote-linux.html" target="_blank" rel="external">官方</a>提供的方法只能编译安装，无奈步骤繁琐。接着我尝试了之前的安装方法，发现会报错。</p>
<h2 id="1-添加软件源来安装"><a href="#1-添加软件源来安装" class="headerlink" title="1.添加软件源来安装"></a>1.添加软件源来安装</h2><p>ubuntu下可以通过软件源来进行安装，命令如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo add-apt-repository ppa:wiznote-team</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install wiznote</div></pre></td></tr></table></figure></p>
<p>在更新时，会报<code>Hash Sum mismatch</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-amd64/Packages  Hash Sum mismatch</div><div class="line">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/binary-i386/Packages  Hash Sum mismatch</div><div class="line">W: Failed to fetch http://ppa.launchpad.net/wiznote-team/ppa/ubuntu/dists/trusty/main/i18n/Translation-en  Hash Sum mismatch</div></pre></td></tr></table></figure></p>
<p>所以再执行install命令也会失败！！</p>
<h2 id="2-直接从软件源上下载安装包"><a href="#2-直接从软件源上下载安装包" class="headerlink" title="2.直接从软件源上下载安装包"></a>2.直接从软件源上下载安装包</h2><h3 id="2-1-下载"><a href="#2-1-下载" class="headerlink" title="2.1 下载"></a>2.1 下载</h3><p>执行如下命令时<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo add-apt-repository ppa:wiznote-team</div></pre></td></tr></table></figure></p>
<p>会输出如下日志<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"> The code is hosted here: https://github.com/WizTeam/WizQTClient</div><div class="line">visit our homepage for detailed info: http://www.wiznote.cn/</div><div class="line">Any questions and bugs report to: &lt;email address hidden&gt;</div><div class="line">The binary name is WizNote. Please use WizNote to start program in cmd.</div><div class="line"> More info: https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa</div><div class="line">Press [ENTER] to continue or ctrl-c to cancel adding it</div></pre></td></tr></table></figure></p>
<p>打开<a href="https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa" target="_blank" rel="external">最后一个链接</a>之后，点击 <a href="https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages" target="_blank" rel="external">View package details</a> 就会跳转到如下页面<br><a href="https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages" target="_blank" rel="external">https://launchpad.net/~wiznote-team/+archive/ubuntu/ppa/+packages</a>  点击其中的版本，下载相应的deb包。</p>
<h3 id="2-2安装方法"><a href="#2-2安装方法" class="headerlink" title="2.2安装方法"></a>2.2安装方法</h3><ul>
<li>方法1<br>双击下载文件，使用软件中心安装  </li>
<li>方法2<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dpkg -i xxx.deb</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tmux安装配置使用]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/19/tmux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># ubuntu</div><div class="line">sudo apt-get install tmux</div></pre></td></tr></table></figure>
<p>或者<br><a href="https://github.com/tmux/tmux/releases/download/2.3/tmux-2.3.tar.gz" target="_blank" rel="external">点击下载tmux安装包</a></p>
<h2 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2.配置文件"></a>2.配置文件</h2><p>~/.tmux.conf<br>如果文件不存在直接<code>touch</code>就可以。<br><strong>下面是我的配置文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">unbind C-b</div><div class="line">set -g prefix C-a</div><div class="line">bind C-a send-prefix</div><div class="line"></div><div class="line">bind r source-file ~/.tmux.conf \; display &quot;tmux.conf reload!&quot;</div><div class="line"></div><div class="line">bind | split-window -h</div><div class="line">bind - split-window -v</div><div class="line"></div><div class="line">bind h select-pane -L</div><div class="line">bind j select-pane -D</div><div class="line">bind k select-pane -U</div><div class="line">bind l select-pane -R</div><div class="line"></div><div class="line"></div><div class="line">/*bind -n C-x setw synchronize-panes */</div><div class="line">bind C-e command-prompt -p &quot;session?,message?&quot; &quot;run-shell \&quot;tmux list-windows -t %1 \| cut -d: -f1\|xargs -I\&#123;\&#125; tmux send-keys -t %1:\&#123;\&#125; %2\&quot;&quot;</div><div class="line"></div><div class="line">set -g base-index 1</div><div class="line">set -g pane-base-index 1</div><div class="line"></div><div class="line">set -g status-fg white</div><div class="line">set -g status-bg black</div><div class="line"></div><div class="line">setw -g window-status-fg cyan</div><div class="line">setw -g window-status-bg default</div><div class="line">setw -g window-status-attr dim</div><div class="line"></div><div class="line">setw -g window-status-current-fg white</div><div class="line">setw -g window-status-current-bg red</div><div class="line">setw -g window-status-current-attr bright</div><div class="line"></div><div class="line">set -g message-fg green</div><div class="line">set -g message-bg black</div><div class="line">set -g message-attr bright</div><div class="line"></div><div class="line">set -g status-left &quot;#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P&quot;</div><div class="line">set -g status-left-length 40</div><div class="line">set -g status-left &quot;#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P&quot;</div><div class="line">set -g status-right &quot;#[fg=cyan]%d %b %R&quot;</div><div class="line">set -g status-utf8 on</div><div class="line"></div><div class="line">set -g status-interval 60</div><div class="line">set -g status-justify centre</div><div class="line"></div><div class="line">setw -g monitor-activity on</div><div class="line">set -g visual-activity on</div><div class="line"></div><div class="line">setw -g mode-keys vi</div></pre></td></tr></table></figure></p>
<h2 id="3-tmux部分快捷键"><a href="#3-tmux部分快捷键" class="headerlink" title="3.tmux部分快捷键"></a>3.tmux部分快捷键</h2><table>
<thead>
<tr>
<th>按键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl+a ?</td>
<td>列出所有快捷键</td>
</tr>
<tr>
<td>Ctrl+a c</td>
<td>新建窗口</td>
</tr>
<tr>
<td>Ctrl+a 数字</td>
<td>切换到对应的窗口</td>
</tr>
<tr>
<td>Ctrl+a n</td>
<td>切换到下一个窗口</td>
</tr>
<tr>
<td>Ctrl+a p</td>
<td>切换到上一个窗口</td>
</tr>
<tr>
<td>Ctrl+a w</td>
<td>列出所有窗口</td>
</tr>
<tr>
<td>Ctrl+a f</td>
<td>查找窗口</td>
</tr>
<tr>
<td>Ctrl+a ,</td>
<td>修改该窗口的名字</td>
</tr>
<tr>
<td>Ctrl+a %/竖线</td>
<td>垂直分隔窗口</td>
</tr>
<tr>
<td>Ctrl+a “/-</td>
<td>水平分隔窗口</td>
</tr>
<tr>
<td>Ctrl+a o</td>
<td>交换光标所在窗格</td>
</tr>
<tr>
<td>Ctrl+a x</td>
<td>关闭窗格</td>
</tr>
<tr>
<td>Ctrl+a 空格</td>
<td>切换布局</td>
</tr>
<tr>
<td>Ctrl+a q</td>
<td>显示每个窗格是第几个，当数字出现时按数字就选中第几个窗格</td>
</tr>
<tr>
<td>Ctrl+a {</td>
<td>与上一个窗格交换位置</td>
</tr>
<tr>
<td>Ctrl+a }</td>
<td>与下一个窗格交换位置</td>
</tr>
<tr>
<td>Ctrl+a z</td>
<td>切换当前窗格最大化/最小化</td>
</tr>
<tr>
<td>Ctrl+a [</td>
<td>进入复制模式</td>
</tr>
<tr>
<td>Ctrl+a [ 空格</td>
<td>开始选择内容 回车复制</td>
</tr>
<tr>
<td>Ctrl+a ]</td>
<td>粘贴</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git cherry-pick]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/14/git-cherry-pick/</url>
      <content type="html"><![CDATA[<h2 id="1-用法"><a href="#1-用法" class="headerlink" title="1. 用法"></a>1. 用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git cherry-pick &lt;commit id&gt;</div></pre></td></tr></table></figure>
<p>cherry-pick的作用是在当前分支上应用某一个提交，在合并的时候特别有用。<br>当前在 fixbug 分支上，做了3次修改并提交到本地</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git branch</div><div class="line">* fixbug</div><div class="line">  master</div><div class="line"></div><div class="line">$ git log --oneline </div><div class="line">43f50dd fix bug3</div><div class="line">b24931f fix bug2</div><div class="line">9ab09b7 fix bug1</div></pre></td></tr></table></figure>
<p>这时候我发现 fix bug1 这个提交是不需要的，之需要将后2次合并进主分支即可。 可以这么操作:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ git checkout master  #切换到master分支</div><div class="line">Switched to branch &apos;master&apos;</div><div class="line">Your branch is up-to-date with &apos;origin/master&apos;.</div><div class="line"></div><div class="line">$ git cherry-pick 9ab09b7..43f50dd</div><div class="line">[master 9cc5bca] fix bug2</div><div class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 b</div><div class="line">[master 5a0704b] fix bug3</div><div class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 c</div><div class="line"></div><div class="line">$ git log --oneline </div><div class="line">5a0704b fix bug3</div><div class="line">9cc5bca fix bug2</div><div class="line">c9e81c7 rename</div></pre></td></tr></table></figure>
<p>可以看到，执行<code>check-pick</code>后， git 将指定的 commit <font color="red">(不含第一个，包含 最后一个)</font> 应用到了当前的 master 分支。执行完之后，可以删除掉 fixbug 分支。这样就可以很方便的从一个分支里面选取一部分提交合并到主分支里面去 了。当然同样也会遇到需要merge的情况。和merege一样操作即可。</p>
<h2 id="2-实例"><a href="#2-实例" class="headerlink" title="2. 实例"></a>2. 实例</h2><p>在本地 fixbug 分支上做了一个commit (09e827c96960780ebdee18040a4324de7fecba9b)， 如何把它放到 master 分支上？ </p>
<p>办法之一： 使用 cherry-pick.  根据git 文档：</p>
<blockquote>
<p>Apply the changes introduced by some existing commits</p>
</blockquote>
<p>就是对已经存在的commit 进行apply (可以理解为再次提交）<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout master</div><div class="line">$ git cherry-pick 09e827c     # 这个09e827c号码，位于：</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git log</div><div class="line">commit 09e827c96960780ebdee18040a4324de7fecba9b</div><div class="line">Author: niuzhiqiang &lt;niuzhiqiang90@foxmail.com&gt;</div><div class="line">Date:   Fri Aug 12 10:52:32 2016 +0800</div><div class="line"></div><div class="line">    add other</div></pre></td></tr></table></figure>
<h3 id="2-1-如果顺利，就会正常提交。结果："><a href="#2-1-如果顺利，就会正常提交。结果：" class="headerlink" title="2.1 如果顺利，就会正常提交。结果："></a>2.1 如果顺利，就会正常提交。结果：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git cherry-pick 9ab09b7..43f50dd</div><div class="line">[master 9cc5bca] fix bug2</div><div class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 b</div><div class="line">[master 5a0704b] fix 3</div><div class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 c</div></pre></td></tr></table></figure>
<h3 id="2-2-如果在cherry-pick的过程中出现了冲突"><a href="#2-2-如果在cherry-pick的过程中出现了冲突" class="headerlink" title="2.2 如果在cherry-pick的过程中出现了冲突"></a>2.2 如果在cherry-pick的过程中出现了冲突</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git cherry-pick 09e827c</div><div class="line">error: could not apply 09e827c... add other</div><div class="line">hint: after resolving the conflicts, mark the corrected paths</div><div class="line">hint: with &apos;git add &lt;paths&gt;&apos; or &apos;git rm &lt;paths&gt;&apos;</div><div class="line">hint: and commit the result with &apos;git commit&apos;</div></pre></td></tr></table></figure>
<h4 id="2-2-1-看哪些文件出现冲突"><a href="#2-2-1-看哪些文件出现冲突" class="headerlink" title="2.2.1 看哪些文件出现冲突"></a>2.2.1 看哪些文件出现冲突</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Your branch is ahead of &apos;origin/master&apos; by 3 commits.</div><div class="line">  (use &quot;git push&quot; to publish your local commits)</div><div class="line"></div><div class="line">You are currently cherry-picking commit 09e827c.</div><div class="line">  (fix conflicts and run &quot;git cherry-pick --continue&quot;)</div><div class="line">  (use &quot;git cherry-pick --abort&quot; to cancel the cherry-pick operation)</div><div class="line"></div><div class="line">Unmerged paths:</div><div class="line">  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)</div><div class="line"></div><div class="line">        both modified:      b</div><div class="line"></div><div class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ git diff </div><div class="line">diff --cc b</div><div class="line">index 7898192,6178079..0000000</div><div class="line">--- a/b</div><div class="line">+++ b/b</div><div class="line">@@@ -1,1 -1,1 +1,5 @@@</div><div class="line">++&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</div><div class="line"> +a</div><div class="line">++=======</div><div class="line"> +b</div><div class="line">++&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09e827c... add other</div></pre></td></tr></table></figure>
<h4 id="2-2-2-手动解决它"><a href="#2-2-2-手动解决它" class="headerlink" title="2.2.2 手动解决它"></a>2.2.2 手动解决它</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ vi b </div><div class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</div><div class="line">a</div><div class="line">=======</div><div class="line">b</div><div class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09e827c... add other</div></pre></td></tr></table></figure>
<p>保存退出，手动提交</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add b</div><div class="line">$ git commit -m &quot;merge by handler&quot;</div><div class="line">$ git push</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git分支操作]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/12/git-%E5%88%86%E6%94%AF%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="1-新建分支"><a href="#1-新建分支" class="headerlink" title="1 新建分支"></a>1 新建分支</h2><h3 id="1-1-新建本地分支"><a href="#1-1-新建本地分支" class="headerlink" title="1.1 新建本地分支"></a>1.1 新建本地分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b &lt;branchName&gt;</div></pre></td></tr></table></figure>
<h3 id="1-2-推送本地分支到远程"><a href="#1-2-推送本地分支到远程" class="headerlink" title="1.2 推送本地分支到远程"></a>1.2 推送本地分支到远程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin &lt;localBranch&gt;:&lt;remoteBranch&gt;</div></pre></td></tr></table></figure>
<h2 id="2-删除分支"><a href="#2-删除分支" class="headerlink" title="2 删除分支"></a>2 删除分支</h2><h3 id="2-1-删除本地分支"><a href="#2-1-删除本地分支" class="headerlink" title="2.1 删除本地分支"></a>2.1 删除本地分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -D &lt;branchName&gt;</div></pre></td></tr></table></figure>
<h3 id="2-2-删除远程分支"><a href="#2-2-删除远程分支" class="headerlink" title="2.2 删除远程分支"></a>2.2 删除远程分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin --delete &lt;branchName&gt;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell style guide]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/12/shell-style-guide/</url>
      <content type="html"><![CDATA[<h1 id="Shell-Style-Guide"><a href="#Shell-Style-Guide" class="headerlink" title="Shell Style Guide"></a>Shell Style Guide</h1><h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a><span id="contents">Contents</span></h2><p>1.<a href="#a">Shell Files and Interpreter Invocation</a></p>
<ul>
<li><p>1.1 File Extensions</p>
</li>
<li><p>1.2 SUID/SGID  </p>
</li>
</ul>
<p>2.<a href="#b">Environment</a> </p>
<ul>
<li>2.1 STDOUT vs STDERR  </li>
</ul>
<p>3.<a href="#c">Comments</a></p>
<ul>
<li><p>3.1 File Header </p>
</li>
<li><p>3.2 Function Comments</p>
</li>
<li><p>3.3 Implementation Comments</p>
</li>
<li><p>3.4 TODO Comments  </p>
</li>
</ul>
<p>4.<a href="#d">Formatting</a></p>
<ul>
<li><p>4.1 Indentation </p>
</li>
<li><p>4.2 Line Length and Long Strings</p>
</li>
<li><p>4.3 Pipelines | Loops</p>
</li>
<li><p>4.4 Case statement</p>
</li>
<li><p>4.5 Variable expansion</p>
</li>
<li><p>4.6 Quoting  </p>
</li>
</ul>
<p>5.<a href="#e">Features and Bugs</a> </p>
<ul>
<li><p>5.1 Command Substitution</p>
</li>
<li><p>5.2 Test, [ and [[ </p>
</li>
<li><p>5.3 Testing Strings Wildcard Expansion of Filenames </p>
</li>
<li><p>5.4 Eval</p>
</li>
<li><p>5.5 Pipes to While  </p>
</li>
</ul>
<p>6.<a href="#f">Naming Conventions</a></p>
<ul>
<li><p>6.1 Function Names </p>
</li>
<li><p>6.2 Variable Names </p>
</li>
<li><p>6.3 Constants and Environment Variable Names </p>
</li>
<li><p>6.4 Source Filenames </p>
</li>
<li><p>6.5 Read-only Variables </p>
</li>
<li><p>6.7 Use Local Variables </p>
</li>
<li><p>6.8 Function Location </p>
</li>
<li><p>6.9 main  </p>
</li>
</ul>
<p>7.<a href="#g">Calling Commands</a></p>
<ul>
<li><p>7.1 Checking Return Values </p>
</li>
<li><p>7.2 Builtin Commands vs. External Commands  </p>
</li>
</ul>
<p>8.<a href="#h">Conclusion</a></p>
<h2 id="Which-Shell-to-Use"><a href="#Which-Shell-to-Use" class="headerlink" title="Which Shell to Use"></a>Which Shell to Use</h2><p><strong>Bash</strong> is the only shell scripting language permitted for executables.  </p>
<p>Executables must start with <strong>#! /bin/bash</strong> and a minimum number of flags.</p>
<p>Use <strong>set</strong> to set shell options so that calling your script as <strong>bash</strong> <strong><em>script_name</em></strong> does not break its functionality.</p>
<p>Restricting all executable shell scripts to bash gives us a consistent shell language that’s installed on all our machines.</p>
<p>The only exception to this is where you’re forced to by whatever you’re coding for.</p>
<p>One example of this is Solaris SVR4 packages which require plain Bourne shell for any scripts.</p>
<h2 id="When-to-use-Shell"><a href="#When-to-use-Shell" class="headerlink" title="When to use Shell"></a>When to use Shell</h2><p>Shell should only be used for small utilities or simple wrapper scripts.  </p>
<p>While shell scripting isn’t a development language, it is used for writing various utility scripts throughout Google.   This style guide is more a recognition of its use rather than a suggestion that it be used for widespread deployment.</p>
<p>Some guidelines:</p>
<ul>
<li><p>If you’re mostly calling other utilities and are doing relatively little data manipulation, shell is an acceptable choice for the task.</p>
</li>
<li><p>If performance matters, use something other than shell.</p>
</li>
<li><p>If you find you need to use arrays for anything more than assignment of <strong>${PIPESTATUS}</strong>, you should use Python.</p>
</li>
<li><p>If you are writing a script that is more than 100 lines long, you should probably be writing it in Python instead. Bear in mind that scripts grow. Rewrite your script in another language early to avoid a time-consuming rewrite at a later date.  </p>
</li>
</ul>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="1-Shell-Files-and-Interpreter-Invocation"><a href="#1-Shell-Files-and-Interpreter-Invocation" class="headerlink" title="1.  Shell Files and Interpreter Invocation"></a>1.  <span id="a">Shell Files and Interpreter Invocation</span></h2><h3 id="1-1-File-Extensions"><a href="#1-1-File-Extensions" class="headerlink" title="1.1 File Extensions"></a>1.1 File Extensions</h3><p>Executables should have no extension (strongly preferred) or a <strong>.sh</strong> extension. Libraries must have a <strong>.sh</strong> extension and should not be executable.</p>
<p>It is not necessary to know what language a program is written in when executing it and shell doesn’t require an extension so we prefer not to use one for executables.</p>
<p>However, for libraries it’s important to know what language it is and sometimes there’s a need to have similar libraries in different languages. This allows library files with identical purposes but different languages to be identically named except for the language-specific suffix.</p>
<h3 id="1-2-SUID-SGID"><a href="#1-2-SUID-SGID" class="headerlink" title="1.2 SUID/SGID"></a>1.2 SUID/SGID</h3><p>SUID and SGID are forbidden on shell scripts.</p>
<p>There are too many security issues with shell that make it nearly impossible to secure sufficiently to allow SUID/SGID. While bash does make it difficult to run SUID, it’s still possible on some platforms which is why we’re being explicit about banning it.</p>
<p>Use <strong>sudo</strong> to provide elevated access if you need it.</p>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="2-Environment"><a href="#2-Environment" class="headerlink" title="2. Environment"></a>2. <span id="b">Environment</span></h2><h3 id="2-1-STDOUT-vs-STDERR"><a href="#2-1-STDOUT-vs-STDERR" class="headerlink" title="2.1 STDOUT vs STDERR"></a>2.1 STDOUT vs STDERR</h3><p>All error messages should go to <strong>STDERR</strong>.</p>
<p>This makes it easier to separate normal status from actual issues.</p>
<p>A function to print out error messages along with other status information is recommended.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">err() &#123;</div><div class="line"></div><div class="line">  echo &quot;[$(date +&apos;%Y-%m-%dT%H:%M:%S%z&apos;)]: $@&quot; &gt;&amp;2</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">if ! do_something; then</div><div class="line"></div><div class="line">  err &quot;Unable to do_something&quot;</div><div class="line"></div><div class="line">  exit &quot;$&#123;E_DID_NOTHING&#125;&quot;</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="3-Comments"><a href="#3-Comments" class="headerlink" title="3. Comments"></a>3. <span id="c">Comments</span></h2><h3 id="3-1-File-Header"><a href="#3-1-File-Header" class="headerlink" title="3.1 File Header"></a>3.1 File Header</h3><p>Start each file with a description of its contents.</p>
<p>Every file must have a top-level comment including a brief overview of its contents. A copyright notice and author information are optional.</p>
<p><strong><em>Example:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">#</div><div class="line"></div><div class="line"># Perform hot backups of Oracle databases.</div></pre></td></tr></table></figure>
<h3 id="3-2-Function-Comments"><a href="#3-2-Function-Comments" class="headerlink" title="3.2 Function Comments"></a>3.2 Function Comments</h3><p>Any function that is not both obvious and short must be commented. Any function in a library must be commented regardless of length or complexity.</p>
<p>It should be possible for someone else to learn how to use your program or to use a function in your library by reading the comments (and self-help, if provided) without reading the code.</p>
<p>All function comments should contain:</p>
<ul>
<li><p>Description of the function</p>
</li>
<li><p>Global variables used and modified</p>
</li>
<li><p>Arguments taken</p>
</li>
<li><p>Returned values other than the default exit status of the last command run</p>
</li>
</ul>
<p><strong><em>Example:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">#</div><div class="line"></div><div class="line"># Perform hot backups of Oracle databases.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">export PATH=&apos;/usr/xpg4/bin:/usr/bin:/opt/csw/bin:/opt/goog/bin&apos;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">#######################################</div><div class="line"></div><div class="line"># Cleanup files from the backup dir</div><div class="line"></div><div class="line"># Globals:</div><div class="line"></div><div class="line">#   BACKUP_DIR</div><div class="line"></div><div class="line">#   ORACLE_SID</div><div class="line"></div><div class="line"># Arguments:</div><div class="line"></div><div class="line">#   None</div><div class="line"></div><div class="line"># Returns:</div><div class="line"></div><div class="line">#   None</div><div class="line"></div><div class="line">#######################################</div><div class="line"></div><div class="line">cleanup() &#123;</div><div class="line"></div><div class="line">  ...</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-3-Implementation-Comments"><a href="#3-3-Implementation-Comments" class="headerlink" title="3.3 Implementation Comments"></a>3.3 Implementation Comments</h3><p>Comment tricky, non-obvious, interesting or important parts of your code.</p>
<p>This follows general Google coding comment practice. Don’t comment everything. If there’s a complex algorithm or you’re doing something out of the ordinary, put a short comment in.</p>
<h3 id="3-4-TODO-Comments"><a href="#3-4-TODO-Comments" class="headerlink" title="3.4 TODO Comments"></a>3.4 TODO Comments</h3><p>Use <strong>TODO</strong> comments for code that is temporary, a short-term solution, or good-enough but not perfect.</p>
<p>This matches the convention in the <strong>C++ Guide</strong>.</p>
<p><strong>TODOs</strong> should include the string <strong>TODO</strong> in all caps, followed by your username in parentheses. A colon is optional. It’s preferable to put a bug/ticket number next to the <strong>TODO</strong> item as well.</p>
<p><strong><em>Examples:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># TODO(mrmonkey): Handle the unlikely edge cases (bug ####)</div></pre></td></tr></table></figure>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="4-Formatting"><a href="#4-Formatting" class="headerlink" title="4. Formatting"></a>4. <span id="d">Formatting</span></h2><p>While you should follow the style that’s already there for files that you’re modifying, the following are required for any new code.</p>
<h3 id="4-1-Indentation"><a href="#4-1-Indentation" class="headerlink" title="4.1 Indentation"></a>4.1 Indentation</h3><p>Indent 2 spaces. No tabs.</p>
<p>Use blank lines between blocks to improve readability. Indentation is two spaces. Whatever you do, don’t use tabs. For existing files, stay faithful to the existing indentation.</p>
<h3 id="4-2-Line-Length-and-Long-Strings"><a href="#4-2-Line-Length-and-Long-Strings" class="headerlink" title="4.2 Line Length and Long Strings"></a>4.2 Line Length and Long Strings</h3><p>Maximum line length is 80 characters.</p>
<p>If you have to write strings that are longer than 80 characters, this should be done with a here document or an embedded newline if possible. Literal strings that have to be longer than 80 chars and can’t sensibly be split are ok, but it’s strongly preferred to find a way to make it shorter.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># DO use &apos;here document&apos;s</div><div class="line"></div><div class="line">cat &lt;&lt;END;</div><div class="line"></div><div class="line">I am an exceptionally long</div><div class="line"></div><div class="line">string.</div><div class="line"></div><div class="line">END</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Embedded newlines are ok too</div><div class="line"></div><div class="line">long_string=&quot;I am an exceptionally</div><div class="line"></div><div class="line">  long string.&quot;</div></pre></td></tr></table></figure>
<h3 id="4-3-Pipelines"><a href="#4-3-Pipelines" class="headerlink" title="4.3 Pipelines"></a>4.3 Pipelines</h3><p>Pipelines should be split one per line if they don’t all fit on one line.</p>
<p>If a pipeline all fits on one line, it should be on one line.</p>
<p>If not, it should be split at one pipe segment per line with the pipe on the newline and a 2 space indent for the next section of the pipe. This applies to a chain of commands combined using ‘<strong>|</strong>‘ as well as to logical compounds using ‘<strong>||</strong>‘ and ‘<strong>&amp;&amp;</strong>‘.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># All fits on one line</div><div class="line"></div><div class="line">command1 | command2</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Long commands</div><div class="line"></div><div class="line">command1 \</div><div class="line"></div><div class="line">  | command2 \</div><div class="line"></div><div class="line">  | command3 \</div><div class="line"></div><div class="line">  | command4</div></pre></td></tr></table></figure>
<h3 id="4-4-Loops"><a href="#4-4-Loops" class="headerlink" title="4.4 Loops"></a>4.4 Loops</h3><p>Put <strong>; do</strong> and <strong>; then</strong> on the same line as the <strong>while</strong>, <strong>for</strong> or <strong>if</strong>.</p>
<p>Loops in shell are a bit different, but we follow the same principles as with braces when declaring functions.</p>
<p>That is: <strong>; then</strong> and <strong>; do</strong> should be <font color="red">on the same line</font> as the <strong>if/for/while</strong>.<strong>else</strong> should be on its own line and closing statements should be on their own line vertically aligned with the opening statement.</p>
<p><strong><em>Example:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">for dir in $&#123;dirs_to_cleanup&#125;; do</div><div class="line"></div><div class="line">  if [[ -d &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot; ]]; then</div><div class="line"></div><div class="line">    log_date &quot;Cleaning up old files in $&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot;</div><div class="line"></div><div class="line">    rm &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;/&quot;*</div><div class="line"></div><div class="line">    if [[ &quot;$?&quot; -ne 0 ]]; then</div><div class="line"></div><div class="line">      error_message</div><div class="line"></div><div class="line">    fi</div><div class="line"></div><div class="line">  else</div><div class="line"></div><div class="line">    mkdir -p &quot;$&#123;dir&#125;/$&#123;ORACLE_SID&#125;&quot;</div><div class="line"></div><div class="line">    if [[ &quot;$?&quot; -ne 0 ]]; then</div><div class="line"></div><div class="line">      error_message</div><div class="line"></div><div class="line">    fi</div><div class="line"></div><div class="line">  fi</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure>
<h3 id="4-5-Case-statement"><a href="#4-5-Case-statement" class="headerlink" title="4.5 Case statement"></a>4.5 Case statement</h3><ul>
<li><p>Indent alternatives by 2 spaces.</p>
</li>
<li><p>A one-line alternative needs a space after the close parenthesis of the pattern and before the <strong>;;</strong>.</p>
</li>
<li><p>Long or multi-command alternatives should be split over multiple lines with the pattern, actions, and <strong>;;</strong> on separate lines.</p>
</li>
</ul>
<p>The matching expressions are indented one level from the ‘<strong>case</strong>‘ and ‘<strong>esac</strong>‘. Multiline actions are indented another level. In general, there is no need to quote match expressions. Pattern expressions should not be preceded by an open parenthesis. Avoid the <strong>;&amp;</strong> and <strong>;;&amp;</strong> notations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">case &quot;$&#123;expression&#125;&quot; in</div><div class="line"></div><div class="line">  a)</div><div class="line"></div><div class="line">    variable=&quot;...&quot;</div><div class="line"></div><div class="line">    some_command &quot;$&#123;variable&#125;&quot; &quot;$&#123;other_expr&#125;&quot; ...</div><div class="line"></div><div class="line">    ;;</div><div class="line"></div><div class="line">  absolute)</div><div class="line"></div><div class="line">    actions=&quot;relative&quot;</div><div class="line"></div><div class="line">    another_command &quot;$&#123;actions&#125;&quot; &quot;$&#123;other_expr&#125;&quot; ...</div><div class="line"></div><div class="line">    ;;</div><div class="line"></div><div class="line">  *)</div><div class="line"></div><div class="line">    error &quot;Unexpected expression &apos;$&#123;expression&#125;&apos;&quot;</div><div class="line"></div><div class="line">    ;;</div><div class="line"></div><div class="line">esac</div></pre></td></tr></table></figure>
<p>Simple commands may be put on the same line as the pattern and <strong>;;</strong> as long as the expression remains readable. This is often appropriate for single-letter option processing. When the actions don’t fit on a single line, put the pattern on a line on its own, then the actions, then <strong>;;</strong>; also <font color="red"> on a line of its own</font>. When on the same line as the actions, use a space after the close parenthesis of the pattern and another before the <strong>;;</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">verbose=&apos;false&apos;</div><div class="line"></div><div class="line">aflag=&apos;&apos;</div><div class="line"></div><div class="line">bflag=&apos;&apos;</div><div class="line"></div><div class="line">files=&apos;&apos;</div><div class="line"></div><div class="line">while getopts &apos;abf:v&apos; flag; do</div><div class="line"></div><div class="line">  case &quot;$&#123;flag&#125;&quot; in</div><div class="line"></div><div class="line">    a) aflag=&apos;true&apos; ;;</div><div class="line"></div><div class="line">    b) bflag=&apos;true&apos; ;;</div><div class="line"></div><div class="line">    f) files=&quot;$&#123;OPTARG&#125;&quot; ;;</div><div class="line"></div><div class="line">    v) verbose=&apos;true&apos; ;;</div><div class="line"></div><div class="line">    *) error &quot;Unexpected option $&#123;flag&#125;&quot; ;;</div><div class="line"></div><div class="line">  esac</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure>
<h3 id="4-6-Variable-expansion"><a href="#4-6-Variable-expansion" class="headerlink" title="4.6 Variable expansion"></a>4.6 Variable expansion</h3><p>In order of precedence: Stay consistent with what you find; quote your variables; prefer “<strong>${var}</strong>“ over “<strong>$var</strong>“, but see details.</p>
<p>These are meant to be guidelines, as the topic seems too controversial for a mandatory regulation.</p>
<p>They are listed in order of precedence.</p>
<ol>
<li><p>Stay consistent with what you find for existing code.</p>
</li>
<li><p>Quote variables, see Quoting section below.</p>
</li>
<li><p>Don’t brace-quote single character shell specials / positional parameters, unless strictly necessary or avoiding deep confusion.</p>
</li>
</ol>
<p>Prefer brace-quoting all other variables.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Section of recommended cases.</div><div class="line"></div><div class="line"># Preferred style for &apos;special&apos; variables:</div><div class="line"></div><div class="line">echo &quot;Positional: $1&quot; &quot;$5&quot; &quot;$3&quot;</div><div class="line"></div><div class="line">echo &quot;Specials: !=$!, -=$-, _=$_. ?=$?, #=$# *=$* @=$@ \$=$$ ...&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Braces necessary:</div><div class="line"></div><div class="line">echo &quot;many parameters: $&#123;10&#125;&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Braces avoiding confusion:</div><div class="line"></div><div class="line"># Output is &quot;a0b0c0&quot;</div><div class="line"></div><div class="line">set -- a b c</div><div class="line"></div><div class="line">echo &quot;$&#123;1&#125;0$&#123;2&#125;0$&#123;3&#125;0&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Preferred style for other variables:</div><div class="line"></div><div class="line">echo &quot;PATH=$&#123;PATH&#125;, PWD=$&#123;PWD&#125;, mine=$&#123;some_var&#125;&quot;</div><div class="line"></div><div class="line">while read f; do</div><div class="line"></div><div class="line">  echo &quot;file=$&#123;f&#125;&quot;</div><div class="line"></div><div class="line">done &lt; &lt;(ls -l /tmp)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Section of discouraged cases</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Unquoted vars, unbraced vars, brace-quoted single letter</div><div class="line"></div><div class="line"># shell specials.</div><div class="line"></div><div class="line">echo a=$avar &quot;b=$bvar&quot; &quot;PID=$&#123;$&#125;&quot; &quot;$&#123;1&#125;&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Confusing use: this is expanded as &quot;$&#123;1&#125;0$&#123;2&#125;0$&#123;3&#125;0&quot;,</div><div class="line"></div><div class="line"># not &quot;$&#123;10&#125;$&#123;20&#125;$&#123;30&#125;</div><div class="line"></div><div class="line">set -- a b c</div><div class="line"></div><div class="line">echo &quot;$10$20$30&quot;</div></pre></td></tr></table></figure>
<h3 id="4-7-Quoting"><a href="#4-7-Quoting" class="headerlink" title="4.7 Quoting"></a>4.7 Quoting</h3><ul>
<li><p>Always quote strings containing variables, command substitutions, spaces or shell meta characters, unless careful unquoted expansion is required.</p>
</li>
<li><p>Prefer quoting strings that are “words” (as opposed to command options or path names).</p>
</li>
<li><p>Never quote <strong><em>literal</em></strong> integers.</p>
</li>
<li><p>Be aware of the quoting rules for pattern matches in [[.</p>
</li>
<li><p>Use “<strong>$@</strong>“ unless you have a specific reason to use <strong>$*</strong>.</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># &apos;Single&apos; quotes indicate that no substitution is desired.</div><div class="line"></div><div class="line"># &quot;Double&quot; quotes indicate that substitution is required/tolerated.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Simple examples</div><div class="line"></div><div class="line"># &quot;quote command substitutions&quot;</div><div class="line"></div><div class="line">flag=&quot;$(some_command and its args &quot;$@&quot; &apos;quoted separately&apos;)&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># &quot;quote variables&quot;</div><div class="line"></div><div class="line">echo &quot;$&#123;flag&#125;&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># &quot;never quote literal integers&quot;</div><div class="line"></div><div class="line">value=32</div><div class="line"></div><div class="line"># &quot;quote command substitutions&quot;, even when you expect integers</div><div class="line"></div><div class="line">number=&quot;$(generate_number)&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># &quot;prefer quoting words&quot;, not compulsory</div><div class="line"></div><div class="line">readonly USE_INTEGER=&apos;true&apos;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># &quot;quote shell meta characters&quot;</div><div class="line"></div><div class="line">echo &apos;Hello stranger, and well met. Earn lots of $$$&apos;</div><div class="line"></div><div class="line">echo &quot;Process $$: Done making \$\$\$.&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># &quot;command options or path names&quot;</div><div class="line"></div><div class="line"># ($1 is assumed to contain a value here)</div><div class="line"></div><div class="line">grep -li Hugo /dev/null &quot;$1&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Less simple examples</div><div class="line"></div><div class="line"># &quot;quote variables, unless proven false&quot;: ccs might be empty</div><div class="line"></div><div class="line">git send-email --to &quot;$&#123;reviewers&#125;&quot; $&#123;ccs:+&quot;--cc&quot; &quot;$&#123;ccs&#125;&quot;&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Positional parameter precautions: $1 might be unset</div><div class="line"></div><div class="line"># Single quotes leave regex as-is.</div><div class="line"></div><div class="line">grep -cP &apos;([Ss]pecial|\|?characters*)$&apos; $&#123;1:+&quot;$1&quot;&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># For passing on arguments,</div><div class="line"></div><div class="line"># &quot;$@&quot; is right almost everytime, and</div><div class="line"></div><div class="line"># $* is wrong almost everytime:</div><div class="line"></div><div class="line">#</div><div class="line"></div><div class="line"># * $* and $@ will split on spaces, clobbering up arguments</div><div class="line"></div><div class="line">#   that contain spaces and dropping empty strings;</div><div class="line"></div><div class="line"># * &quot;$@&quot; will retain arguments as-is, so no args</div><div class="line"></div><div class="line">#   provided will result in no args being passed on;</div><div class="line"></div><div class="line">#   This is in most cases what you want to use for passing</div><div class="line"></div><div class="line">#   on arguments.</div><div class="line"></div><div class="line"># * &quot;$*&quot; expands to one argument, with all args joined</div><div class="line"></div><div class="line">#   by (usually) spaces,</div><div class="line"></div><div class="line">#   so no args provided will result in one empty string</div><div class="line"></div><div class="line">#   being passed on.</div><div class="line"></div><div class="line"># (Consult &apos;man bash&apos; for the nit-grits ;-)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">set -- 1 &quot;2 two&quot; &quot;3 three tres&quot;; echo $# ; set -- &quot;$*&quot;; echo &quot;$#, $@&quot;)</div><div class="line"></div><div class="line">set -- 1 &quot;2 two&quot; &quot;3 three tres&quot;; echo $# ; set -- &quot;$@&quot;; echo &quot;$#, $@&quot;)</div></pre></td></tr></table></figure>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="5-Features-and-Bugs"><a href="#5-Features-and-Bugs" class="headerlink" title="5. Features and Bugs"></a>5. <span id="e">Features and Bugs</span></h2><h3 id="5-1-Command-Substitution"><a href="#5-1-Command-Substitution" class="headerlink" title="5.1 Command Substitution"></a>5.1 Command Substitution</h3><p>Use <strong>$(command)</strong> instead of backticks.</p>
<p>Nested backticks require escaping the inner ones with <strong>.</strong> The <strong>$(command)</strong> format doesn’t change when nested and is easier to read.</p>
<p><strong><em>Example:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># This is preferred:</div><div class="line"></div><div class="line">var=&quot;$(command &quot;$(command1)&quot;)&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This is not:</div><div class="line"></div><div class="line">var=&quot;`command \`command1\``&quot;</div></pre></td></tr></table></figure>
<h3 id="5-2-Test-and"><a href="#5-2-Test-and" class="headerlink" title="5.2 Test, [ and [["></a>5.2 Test, [ and [[</h3><p><strong>[[ … ]]</strong> is preferred over <strong>[</strong>, <strong>test</strong> and <strong>/usr/bin/[</strong>.</p>
<p><strong>[[ … ]]</strong> reduces errors as no pathname expansion or word splitting takes place between <strong>[[ and ]]</strong> and <strong>[[ … ]]</strong> allows for regular expression matching where [ … ] does not.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># This ensures the string on the left is made up of characters in the</div><div class="line"></div><div class="line"># alnum character class followed by the string name.</div><div class="line"></div><div class="line"># Note that the RHS should not be quoted here.</div><div class="line"></div><div class="line"># For the gory details, see</div><div class="line"></div><div class="line"># E14 at http://tiswww.case.edu/php/chet/bash/FAQ</div><div class="line"></div><div class="line">if [[ &quot;filename&quot; =~ ^[[:alnum:]]+name ]]; then</div><div class="line"></div><div class="line">  echo &quot;Match&quot;</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This matches the exact pattern &quot;f*&quot; (Does not match in this case)</div><div class="line"></div><div class="line">if [[ &quot;filename&quot; == &quot;f*&quot; ]]; then</div><div class="line"></div><div class="line">  echo &quot;Match&quot;</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This gives a &quot;too many arguments&quot; error as f* is expanded to the</div><div class="line"></div><div class="line"># contents of the current directory</div><div class="line"></div><div class="line">if [ &quot;filename&quot; == f* ]; then</div><div class="line"></div><div class="line">  echo &quot;Match&quot;</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<h3 id="5-3-Testing-Strings"><a href="#5-3-Testing-Strings" class="headerlink" title="5.3 Testing Strings"></a>5.3 Testing Strings</h3><p>Use quotes rather than filler characters where possible.</p>
<p>Bash is smart enough to deal with an empty string in a test. So, given that the code is much easier to read, use tests for empty/non-empty strings or empty strings rather than filler characters.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Do this:</div><div class="line"></div><div class="line">if [[ &quot;$&#123;my_var&#125;&quot; = &quot;some_string&quot; ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># -z (string length is zero) and -n (string length is not zero) are</div><div class="line"></div><div class="line"># preferred over testing for an empty string</div><div class="line"></div><div class="line">if [[ -z &quot;$&#123;my_var&#125;&quot; ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This is OK (ensure quotes on the empty side), but not preferred:</div><div class="line"></div><div class="line">if [[ &quot;$&#123;my_var&#125;&quot; = &quot;&quot; ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Not this:</div><div class="line"></div><div class="line">if [[ &quot;$&#123;my_var&#125;X&quot; = &quot;some_stringX&quot; ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<p>To avoid confusion about what you’re testing for, explicitly use <strong>-z</strong> or <strong>-n</strong>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Use this</div><div class="line"></div><div class="line">if [[ -n &quot;$&#123;my_var&#125;&quot; ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Instead of this as errors can occur if $&#123;my_var&#125; expands to a test</div><div class="line"></div><div class="line"># flag</div><div class="line"></div><div class="line">if [[ &quot;$&#123;my_var&#125;&quot; ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<h3 id="5-4-Wildcard-Expansion-of-Filenames"><a href="#5-4-Wildcard-Expansion-of-Filenames" class="headerlink" title="5.4 Wildcard Expansion of Filenames"></a>5.4 Wildcard Expansion of Filenames</h3><p>Use an explicit path when doing wildcard expansion of filenames.</p>
<p>As filenames can begin with a -, it’s a lot safer to expand wildcards with ./<em> instead of </em> .</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Here&apos;s the contents of the directory:</div><div class="line"></div><div class="line"># -f  -r  somedir  somefile</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This deletes almost everything in the directory by force</div><div class="line"></div><div class="line">psa@bilby$ rm -v *</div><div class="line"></div><div class="line">removed directory: `somedir&apos;</div><div class="line"></div><div class="line">removed `somefile&apos;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># As opposed to:</div><div class="line"></div><div class="line">psa@bilby$ rm -v ./*</div><div class="line"></div><div class="line">removed `./-f&apos;</div><div class="line"></div><div class="line">removed `./-r&apos;</div><div class="line"></div><div class="line">rm: cannot remove `./somedir&apos;: Is a directory</div><div class="line"></div><div class="line">removed `./somefile&apos;</div></pre></td></tr></table></figure>
<h3 id="5-5-Eval"><a href="#5-5-Eval" class="headerlink" title="5.5 Eval"></a>5.5 Eval</h3><p><strong>eval</strong> should be avoided.  </p>
<p>Eval munges the input when used for assignment to variables and can set variables without making it possible to check what those variables were.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># What does this set?</div><div class="line"></div><div class="line"># Did it succeed? In part or whole?</div><div class="line"></div><div class="line">eval $(set_my_variables)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># What happens if one of the returned values has a space in it?</div><div class="line"></div><div class="line">variable=&quot;$(eval some_function)&quot;</div></pre></td></tr></table></figure>
<h3 id="5-6-Pipes-to-While"><a href="#5-6-Pipes-to-While" class="headerlink" title="5.6 Pipes to While"></a>5.6 Pipes to While</h3><p>Use process substitution or for loops in preference to piping to while. Variables modified in a while loop do not propagate to the parent because the loop’s commands run in a subshell.</p>
<p>The implicit subshell in a pipe to while can make it difficult to track down bugs.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">last_line=&apos;NULL&apos;</div><div class="line"></div><div class="line">your_command | while read line; do</div><div class="line"></div><div class="line">  last_line=&quot;$&#123;line&#125;&quot;</div><div class="line"></div><div class="line">done</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This will output &apos;NULL&apos;</div><div class="line"></div><div class="line">echo &quot;$&#123;last_line&#125;&quot;</div></pre></td></tr></table></figure>
<p>Use a for loop if you are confident that the input will not contain spaces or special characters (usually, this means not user input).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">total=0</div><div class="line"></div><div class="line"># Only do this if there are no spaces in return values.</div><div class="line"></div><div class="line">for value in $(command); do</div><div class="line"></div><div class="line">  total+=&quot;$&#123;value&#125;&quot;</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure>
<p>Using process substitution allows redirecting output but puts the commands in an explicit subshell rather than the implicit subshell that bash creates for the while loop.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">total=0</div><div class="line"></div><div class="line">last_file=</div><div class="line"></div><div class="line">while read count filename; do</div><div class="line"></div><div class="line">  total+=&quot;$&#123;count&#125;&quot;</div><div class="line"></div><div class="line">  last_file=&quot;$&#123;filename&#125;&quot;</div><div class="line"></div><div class="line">done &lt; &lt;(your_command | uniq -c)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># This will output the second field of the last line of output from</div><div class="line"></div><div class="line"># the command.</div><div class="line"></div><div class="line">echo &quot;Total = $&#123;total&#125;&quot;</div><div class="line"></div><div class="line">echo &quot;Last one = $&#123;last_file&#125;&quot;</div></pre></td></tr></table></figure>
<p>Use while loops where it is not necessary to pass complex results to the parent shell - this is typically where some more complex “parsing” is required. Beware that simple examples are probably more easily done with a tool such as awk. This may also be useful where you specifically don’t want to change the parent scope variables.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Trivial implementation of awk expression:</div><div class="line"></div><div class="line">#   awk &apos;$3 == &quot;nfs&quot; &#123; print $2 &quot; maps to &quot; $1 &#125;&apos; /proc/mounts</div><div class="line"></div><div class="line">cat /proc/mounts | while read src dest type opts rest; do</div><div class="line"></div><div class="line">  if [[ $&#123;type&#125; == &quot;nfs&quot; ]]; then</div><div class="line"></div><div class="line">    echo &quot;NFS $&#123;dest&#125; maps to $&#123;src&#125;&quot;</div><div class="line"></div><div class="line">  fi</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="6-Naming-Conventions"><a href="#6-Naming-Conventions" class="headerlink" title="6. Naming Conventions"></a>6. <span id="f">Naming Conventions</span></h2><h3 id="6-1-Function-Names"><a href="#6-1-Function-Names" class="headerlink" title="6.1 Function Names"></a>6.1 Function Names</h3><p>Lower-case, with underscores to separate words. Separate libraries with <strong>::</strong>. Parentheses are required after the function name. The keyword <strong><em>function</em></strong> is optional, but must be used consistently throughout a project.</p>
<p>If you’re writing single functions, use lowercase and separate words with underscore. If you’re writing a package, separate package names with <strong>::</strong>. Braces must be on the same line as the function name (as with other languages at Google) and no space between the function name and the parenthesis.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Single function</div><div class="line"></div><div class="line">my_func() &#123;</div><div class="line"></div><div class="line">  ...</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Part of a package</div><div class="line"></div><div class="line">mypackage::my_func() &#123;</div><div class="line"></div><div class="line">  ...</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The <strong>function</strong> keyword is extraneous when “()” is present after the function name, but enhances quick identification of functions.</p>
<h3 id="6-2-Variable-Names"><a href="#6-2-Variable-Names" class="headerlink" title="6.2 Variable Names"></a>6.2 Variable Names</h3><p>As for function names.</p>
<p>Variables names for loops should be similarly named for any variable you’re looping through.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">for zone in $&#123;zones&#125;; do</div><div class="line"></div><div class="line">  something_with &quot;$&#123;zone&#125;&quot;</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure>
<h3 id="6-3-Constants-and-Environment-Variable-Names"><a href="#6-3-Constants-and-Environment-Variable-Names" class="headerlink" title="6.3 Constants and Environment Variable Names"></a>6.3 Constants and Environment Variable Names</h3><p>All caps, separated with underscores, declared at the top of the file.</p>
<p>Constants and anything exported to the environment should be capitalized.  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Constant</div><div class="line"></div><div class="line">readonly PATH_TO_FILES=&apos;/some/path&apos;  </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Both constant and environment</div><div class="line"></div><div class="line">declare -xr ORACLE_SID=&apos;PROD&apos;</div></pre></td></tr></table></figure>
<p>Some things become constant at their first setting (for example, via getopts). Thus, it’s OK to set a constant in getopts or based on a condition, but it should be made readonly immediately afterwards. Note that <strong>declare</strong> doesn’t operate on global variables within functions, so <strong>readonly</strong> or <strong>export</strong> is recommended instead.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">VERBOSE=&apos;false&apos;</div><div class="line"></div><div class="line">while getopts &apos;v&apos; flag; do</div><div class="line"></div><div class="line">  case &quot;$&#123;flag&#125;&quot; in</div><div class="line"></div><div class="line">    v) VERBOSE=&apos;true&apos; ;;</div><div class="line"></div><div class="line">  esac</div><div class="line"></div><div class="line">done</div><div class="line"></div><div class="line">readonly VERBOSE</div></pre></td></tr></table></figure>
<h3 id="6-4-Source-Filenames"><a href="#6-4-Source-Filenames" class="headerlink" title="6.4 Source Filenames"></a>6.4 Source Filenames</h3><p>Lowercase, with underscores to separate words if desired.</p>
<p>This is for consistency with other code styles in Google: <strong>maketemplate</strong> or <strong>make_template</strong> but <font color="red">not</font> <strong>make-template</strong>.</p>
<h3 id="6-5-Read-only-Variables"><a href="#6-5-Read-only-Variables" class="headerlink" title="6.5 Read-only Variables"></a>6.5 Read-only Variables</h3><p>Use <strong>readonly</strong> or <strong>declare -r</strong> to ensure they’re read only.</p>
<p>As globals are widely used in shell, it’s important to catch errors when working with them. When you declare a variable that is meant to be read-only, make this explicit.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">zip_version=&quot;$(dpkg --status zip | grep Version: | cut -d &apos; &apos; -f 2)&quot;</div><div class="line"></div><div class="line">if [[ -z &quot;$&#123;zip_version&#125;&quot; ]]; then</div><div class="line"></div><div class="line">  error_message</div><div class="line"></div><div class="line">else</div><div class="line"></div><div class="line">  readonly zip_version</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<h3 id="6-6-Use-Local-Variables"><a href="#6-6-Use-Local-Variables" class="headerlink" title="6.6 Use Local Variables"></a>6.6 Use Local Variables</h3><p>Declare function-specific variables with <strong>local</strong>. Declaration and assignment should be on different lines.</p>
<p>Ensure that local variables are only seen inside a function and its children by using <strong>local</strong> when declaring them. This avoids polluting the global name space and inadvertently setting variables that may have significance outside the function.</p>
<p>Declaration and assignment must be separate statements when the assignment value is provided by a command substitution; as the ‘local’ builtin does not propagate the exit code from the command substitution.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">my_func2() &#123;</div><div class="line"></div><div class="line">  local name=&quot;$1&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">  # Separate lines for declaration and assignment:</div><div class="line"></div><div class="line">  local my_var</div><div class="line"></div><div class="line">  my_var=&quot;$(my_func)&quot; || return</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">  # DO NOT do this: $? contains the exit code of &apos;local&apos;, not my_func</div><div class="line"></div><div class="line">  local my_var=&quot;$(my_func)&quot;</div><div class="line"></div><div class="line">  [[ $? -eq 0 ]] || return</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">  ...</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="6-7-Function-Location"><a href="#6-7-Function-Location" class="headerlink" title="6.7 Function Location"></a>6.7 Function Location</h3><p>Put all functions together in the file just below constants. Don’t hide executable code between functions.</p>
<p>If you’ve got functions, put them all together near the top of the file. Only includes, <strong>set</strong> statements and setting constants may be done before declaring functions.</p>
<p>Don’t hide executable code between functions. Doing so makes the code difficult to follow and results in nasty surprises when debugging.</p>
<h3 id="6-8-main"><a href="#6-8-main" class="headerlink" title="6.8 main"></a>6.8 main</h3><p>A function called <strong><em>main</em></strong> is required for scripts long enough to contain at least one other function.</p>
<p>In order to easily find the start of the program, put the main program in a function called <strong>main</strong> as the bottom most function. This provides consistency with the rest of the code base as well as allowing you to define more variables as <strong>local</strong> (which can’t be done if the main code is not a function). The last non-comment line in the file should be a call to <strong>main</strong>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">main &quot;$@&quot;</div></pre></td></tr></table></figure>
<p>Obviously, for short scripts where it’s just a linear flow, <strong>main</strong> is overkill and so is not required.</p>
<h2 id="7-Calling-Commands"><a href="#7-Calling-Commands" class="headerlink" title="7. Calling Commands"></a>7. <span id="g">Calling Commands</span></h2><h3 id="7-1-Checking-Return-Values"><a href="#7-1-Checking-Return-Values" class="headerlink" title="7.1 Checking Return Values"></a>7.1 Checking Return Values</h3><p>Always check return values and give informative return values.</p>
<p>For unpiped commands, use <strong>$?</strong> or check directly via an <strong>if</strong> statement to keep it simple.</p>
<p>Example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">if ! mv &quot;$&#123;file_list&#125;&quot; &quot;$&#123;dest_dir&#125;/&quot; ; then</div><div class="line"></div><div class="line">  echo &quot;Unable to move $&#123;file_list&#125; to $&#123;dest_dir&#125;&quot; &gt;&amp;2</div><div class="line"></div><div class="line">  exit &quot;$&#123;E_BAD_MOVE&#125;&quot;</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Or</div><div class="line"></div><div class="line">mv &quot;$&#123;file_list&#125;&quot; &quot;$&#123;dest_dir&#125;/&quot;</div><div class="line"></div><div class="line">if [[ &quot;$?&quot; -ne 0 ]]; then</div><div class="line"></div><div class="line">  echo &quot;Unable to move $&#123;file_list&#125; to $&#123;dest_dir&#125;&quot; &gt;&amp;2</div><div class="line"></div><div class="line">  exit &quot;$&#123;E_BAD_MOVE&#125;&quot;</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<p>Bash also has the <strong>PIPESTATUS</strong> variable that allows checking of the return code from all parts of a pipe. If it’s only necessary to check success or failure of the whole pipe, then the following is acceptable:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">tar -cf - ./* | ( cd &quot;$&#123;dir&#125;&quot; &amp;&amp; tar -xf - )</div><div class="line"></div><div class="line">if [[ &quot;$&#123;PIPESTATUS[0]&#125;&quot; -ne 0 || &quot;$&#123;PIPESTATUS[1]&#125;&quot; -ne 0 ]]; then</div><div class="line"></div><div class="line">  echo &quot;Unable to tar files to $&#123;dir&#125;&quot; &gt;&amp;2</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<p>However, as <strong>PIPESTATUS</strong> will be overwritten as soon as you do any other command, if you need to act differently on errors based on where it happened in the pipe, you’ll need to assign <strong>PIPESTATUS</strong> to another variable immediately after running the command (don’t forget that [ is a command and will wipe out <strong>PIPESTATUS</strong>).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">tar -cf - ./* | ( cd &quot;$&#123;DIR&#125;&quot; &amp;&amp; tar -xf - )</div><div class="line"></div><div class="line">return_codes=($&#123;PIPESTATUS[*]&#125;)</div><div class="line"></div><div class="line">if [[ &quot;$&#123;return_codes[0]&#125;&quot; -ne 0 ]]; then</div><div class="line"></div><div class="line">  do_something</div><div class="line"></div><div class="line">fi</div><div class="line"></div><div class="line">if [[ &quot;$&#123;return_codes[1]&#125;&quot; -ne 0 ]]; then</div><div class="line"></div><div class="line">  do_something_else</div><div class="line"></div><div class="line">fi</div></pre></td></tr></table></figure>
<h3 id="7-2-Builtin-Commands-vs-External-Commands"><a href="#7-2-Builtin-Commands-vs-External-Commands" class="headerlink" title="7.2 Builtin Commands vs. External Commands"></a>7.2 Builtin Commands vs. External Commands</h3><p>Given the choice between invoking a shell builtin and invoking a separate process, choose the builtin.</p>
<p>We prefer the use of builtins such as the Parameter Expansion functions in <strong>bash(1)</strong> as it’s more robust and portable (especially when compared to things like sed).  </p>
<p> <strong><em>Example:</em></strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Prefer this:</div><div class="line"></div><div class="line">addition=$(($&#123;X&#125; + $&#123;Y&#125;))</div><div class="line"></div><div class="line">substitution=&quot;$&#123;string/#foo/bar&#125;&quot;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># Instead of this:</div><div class="line"></div><div class="line">addition=&quot;$(expr $&#123;X&#125; + $&#123;Y&#125;)&quot;</div><div class="line"></div><div class="line">substitution=&quot;$(echo &quot;$&#123;string&#125;&quot; | sed -e &apos;s/^foo/bar/&apos;)&quot;</div></pre></td></tr></table></figure>
<p><strong><a href="#contents">Go Contents</a></strong></p>
<h2 id="8-Conclusion"><a href="#8-Conclusion" class="headerlink" title="8. Conclusion"></a>8. <span id="h">Conclusion</span></h2><p>Use common sense and <strong>BE CONSISTENT</strong>.</p>
<p>Please take a few minutes to read the Parting Words section at the bottom of the <strong>C++ Guide</strong>.</p>
<p><strong><a href="#contents">Go Contents</a></strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vim-surround插件]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/12/vim-surround%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>Surround.vim is all about “surroundings”: parentheses, brackets, quotes, XML tags, and more. The plugin provides mappings to easily delete, change and add such surroundings in pairs.</p>
<h1 id="1-修改-cs原符号要修改的符号"><a href="#1-修改-cs原符号要修改的符号" class="headerlink" title="1. 修改 cs原符号要修改的符号"></a>1. 修改 cs原符号要修改的符号</h1><h2 id="1-1-修改双引号为单引号-cs-quot-39"><a href="#1-1-修改双引号为单引号-cs-quot-39" class="headerlink" title="1.1 修改双引号为单引号 cs&quot;&#39;"></a>1.1 修改双引号为单引号 <code>cs&quot;&#39;</code></h2><p>It’s easiest to explain with examples. Press <code>cs&quot;&#39;</code> inside</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;Hello world!&quot;</div></pre></td></tr></table></figure>
<p>to change it to</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&apos;Hello world!&apos;</div></pre></td></tr></table></figure>
<h2 id="1-2-修改单引号为html配对标签-cs-39-lt-q-gt-或者-cs-39-lt-head-gt"><a href="#1-2-修改单引号为html配对标签-cs-39-lt-q-gt-或者-cs-39-lt-head-gt" class="headerlink" title="1.2 修改单引号为html配对标签 cs&#39;&lt;q&gt; 或者 cs&#39;&lt;head&gt;"></a>1.2 修改单引号为html配对标签 <code>cs&#39;&lt;q&gt;</code> 或者 <code>cs&#39;&lt;head&gt;</code></h2><p>Now press cs’<q> to change it to</q></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;q&gt;Hello world!&lt;/q&gt;</div></pre></td></tr></table></figure>
<h2 id="1-3-修改配对标签为其他字符-cst要改成的字符"><a href="#1-3-修改配对标签为其他字符-cst要改成的字符" class="headerlink" title="1.3 修改配对标签为其他字符 cst要改成的字符"></a>1.3 修改配对标签为其他字符 <code>cst要改成的字符</code></h2><p>To go full circle, press cst” to get<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;hello world!&quot;</div></pre></td></tr></table></figure></p>
<h1 id="2-删除符号-ds要删除的符号"><a href="#2-删除符号-ds要删除的符号" class="headerlink" title="2. 删除符号 ds要删除的符号"></a>2. 删除符号 <code>ds要删除的符号</code></h1><p>To remove the delimiters entirely, press ds”.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello world!</div></pre></td></tr></table></figure></p>
<h1 id="3-在文字的两侧添加字符-ysiw要添加的字符"><a href="#3-在文字的两侧添加字符-ysiw要添加的字符" class="headerlink" title="3. 在文字的两侧添加字符 ysiw要添加的字符"></a>3. 在文字的两侧添加字符 <code>ysiw要添加的字符</code></h1><p>Now with the cursor on “Hello”, press ysiw] (iw is a text object).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[Hello] world!</div></pre></td></tr></table></figure>
<p>Let’s make that braces and add some space (use } instead of { for no space): cs]{</p>
<p>ysiw{ 有空格    cs]{ 有空格<br>ysiw} 无空格    cs]} 无空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; Hello &#125; world!</div></pre></td></tr></table></figure></p>
<h1 id="4-对整行操作-yss"><a href="#4-对整行操作-yss" class="headerlink" title="4. 对整行操作 yss"></a>4. 对整行操作 <code>yss</code></h1><p>Now wrap the entire line in parentheses with yssb or yss).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(&#123; Hello &#125; world!)</div></pre></td></tr></table></figure>
<h1 id="5-删除符号-ds删除的符号"><a href="#5-删除符号-ds删除的符号" class="headerlink" title="5. 删除符号 ds删除的符号"></a>5. 删除符号 <code>ds删除的符号</code></h1><p>Revert to the original text: ds{ds)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hello world!</div></pre></td></tr></table></figure></p>
<p>Emphasize hello: ysiw<em></em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;em&gt;Hello&lt;/em&gt; world!</div></pre></td></tr></table></figure>
<p>Finally, let’s try out visual mode. Press a capital V (for linewise visual mode) followed by <code>S&lt;p class=&quot;important&quot;&gt;</code>.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p class=&quot;important&quot;&gt;</div><div class="line">  &lt;em&gt;Hello&lt;/em&gt; world!</div><div class="line">&lt;/p&gt;</div></pre></td></tr></table></figure>
<p>This plugin is very powerful for HTML and XML editing, a niche which currently seems underfilled in Vim land. (As opposed to HTML/XML inserting, for which many plugins are available). Adding, changing, and removing pairs of tags simultaneously is a breeze.</p>
<p>The . command will work with ds, cs, and yss if you install repeat.vim.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[修改最后一次commit]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/11/%E4%BF%AE%E6%94%B9%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1commit/</url>
      <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>对于已经修改提交过的注释，如果需要修改，可以使用<code>git commit --amend</code>。</p>
<h2 id="example"><a href="#example" class="headerlink" title="example"></a>example</h2><p>在operation/bin里最新的提交就是 resolving the problem，我现在需要将其改为 resolving the problem for some errors</p>
<p>在framework/base下输入git commit –amend,就会进入一个文本编辑界面（如下）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">     resolving the problem</div><div class="line">     Change-Id: I7e7daffd2e8a5e65130629dc1c56dee5f5c4b5f7</div><div class="line"># Please enter the commit message for your changes. Lines starting</div><div class="line"># with &apos;#&apos; will be ignored, and an empty message aborts the commit.</div><div class="line"># On branch shuai.lu_branch</div><div class="line"># Changes to be committed:</div><div class="line">#   (use &quot;git reset HEAD^1 &lt;file&gt;...&quot; to unstage)</div><div class="line">#</div><div class="line">#       modified:   operation/bin/alert</div><div class="line">#</div></pre></td></tr></table></figure></p>
<p>修改commit描述，然后保存退出，这样注释就修改了，再重新push就可以了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git 基本操作]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/11/git-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><ul>
<li><p>ubuntu</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install git gitk</div></pre></td></tr></table></figure>
</li>
<li><p>windows<br><a href="https://www.git-scm.com/download/win" target="_blank" rel="external">下载链接</a></p>
</li>
<li>其他系统<br><a href="https://www.git-scm.com/downloads" target="_blank" rel="external">点击这里</a></li>
</ul>
<h2 id="2-设置"><a href="#2-设置" class="headerlink" title="2 设置"></a>2 设置</h2><ul>
<li><p>全局设置（你的每次提交都会使用这些设置）  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;姓名&quot;</div><div class="line">$ git config --global user.email &quot;邮箱地址&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>局部设置（只在当前项目中生效）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --local user.name &quot;姓名&quot;</div><div class="line">$ git config --local user.email &quot;邮箱地址&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3-更新本地代码"><a href="#3-更新本地代码" class="headerlink" title="3 更新本地代码"></a>3 更新本地代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd the/project/directory</div><div class="line">$ git pull</div></pre></td></tr></table></figure>
<h2 id="4-提交代码"><a href="#4-提交代码" class="headerlink" title="4 提交代码"></a>4 提交代码</h2><p>修改完成之后 提交修改的步骤如下</p>
<h3 id="4-1-查看修改的文件"><a href="#4-1-查看修改的文件" class="headerlink" title="4.1 查看修改的文件"></a>4.1 查看修改的文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git status</div></pre></td></tr></table></figure>
<h3 id="4-2-查看修改的内容"><a href="#4-2-查看修改的内容" class="headerlink" title="4.2 查看修改的内容"></a>4.2 查看修改的内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff</div></pre></td></tr></table></figure>
<h3 id="4-3-从服务器上更新代码"><a href="#4-3-从服务器上更新代码" class="headerlink" title="4.3 从服务器上更新代码"></a>4.3 从服务器上更新代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull</div></pre></td></tr></table></figure>
<h3 id="4-4-将修改添加到本地仓库"><a href="#4-4-将修改添加到本地仓库" class="headerlink" title="4.4 将修改添加到本地仓库"></a>4.4 将修改添加到本地仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add 修改的文件名</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add . (当前目录下的所有修改)</div></pre></td></tr></table></figure>
<p>例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add a.txt c/b.txt</div></pre></td></tr></table></figure></p>
<h3 id="4-5-添加本次修改的描述"><a href="#4-5-添加本次修改的描述" class="headerlink" title="4.5 添加本次修改的描述"></a>4.5 添加本次修改的描述</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;大致说明本次修改了什么&quot;</div></pre></td></tr></table></figure>
<h3 id="4-6-将本地修改提交到服务器"><a href="#4-6-将本地修改提交到服务器" class="headerlink" title="4.6 将本地修改提交到服务器"></a>4.6 将本地修改提交到服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push</div></pre></td></tr></table></figure>
<h2 id="5-分支操作"><a href="#5-分支操作" class="headerlink" title="5 分支操作"></a>5 分支操作</h2><h3 id="5-1-查看所有分支"><a href="#5-1-查看所有分支" class="headerlink" title="5.1 查看所有分支"></a>5.1 查看所有分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch -a</div></pre></td></tr></table></figure>
<h3 id="5-2-切换分支"><a href="#5-2-切换分支" class="headerlink" title="5.2 切换分支"></a>5.2 切换分支</h3><ul>
<li><p>第一次切换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b *** origin/***</div></pre></td></tr></table></figure>
</li>
<li><p>以后切换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout ***</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-3-删除本地分支"><a href="#5-3-删除本地分支" class="headerlink" title="5.3 删除本地分支"></a>5.3 删除本地分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout the/other/branch</div><div class="line">$ git branch -D the/delete/branch</div></pre></td></tr></table></figure>
<p><strong> 补充 </strong><br><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjQ4MjYwMQ==&amp;mid=207476935&amp;idx=1&amp;sn=7e2df0fc83583b2970be033e295d595d&amp;scene=4&amp;srcid=0914UZRLJAd9vzLoflDXei0Y&amp;pass_ticket=HC7otQjvd7%2FlrKPIl%2FUdQOZ4wjnTDDOzJXOZps0L2JZRnBVO0WgCnxedN7YVcvQi#rd" target="_blank" rel="external">点击查看更详细的用法</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://niuzhiqiang90.coding.me/2017/01/11/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
